#
# $Id$
#
#

#######################################################################################
#
# automatic dependency updating mechanism:
#   gmake implicitly remakes all files that are included!
#

DEPS = $(patsubst %.c,.%.d, $(wildcard *.c))

ifneq ($(DEPS),)
  ifneq ($(TARGET),clean)
include $(DEPS)
  endif
endif


YACC_H_FILES   := $(patsubst %.y, y.tab.h, $(wildcard *.y))

#
# files for xml processing. the makefile for that files 
# either generates them (if new ast in use) or generates
# empty files
#
XSL_FILES      := $(wildcard $(PROJECT_ROOT)/src/xml/*_h.xsl)
XML_FILES      := $(wildcard $(PROJECT_ROOT)/src/xml/*.xml)

#
# $(YACC_H_FILES) might be included by any .c files.
# Therefore, bison has to be run before any dependency
# is generated!
# similar to YACC_H_FILES, the files generated from the XML_FILES (by the
# scripts in XSL_FILES) might be included by any .c file.
# Thus, these have to be generated prior to generating the dependencies.
#
.%.d: %.c $(YACC_H_FILES) $(XML_FILES) $(XSL_FILES) $(PROJECT_ROOT)/tools/bin/cb
	@$(MAKE) -C $(PROJECT_ROOT)/src/xml
	@$(ECHO) "$(CC) $(CCDEPS_FLAGS) $(CFLAGS) $(INCS) $<  > $@"
	@if $(CC) $(CCDEPS_FLAGS) $(CFLAGS) $(INCS) $<  > $@d ; \
	 then sed 's/\($*\)\.o[ :]*/$*\.o $@\: $$\(PROJECT_ROOT\)\/Makefile.Config /'  <$@d >$@; \
	      $(RM) $@d ; \
	 else $(RM) $@d ; \
	      exit 1 ;  \
	 fi

$(PROJECT_ROOT)/tools/bin/cb: 
	@$(MAKE) -C $(PROJECT_ROOT)/tools/src/code_beautifier
	
