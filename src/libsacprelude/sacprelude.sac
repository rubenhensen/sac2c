module sacprelude;

provide {sel, zero, eq, adjustLacFunParams, adjustLacFunParamsReshape};

#define BUILT_IN( fun)    \
fun( int)                 \
fun( float)               \
fun( double)              \
fun( bool)                \
fun( char)


#define SEL_VxA( a)                                                      \
inline                                                                   \
a[*] sel( int[.] idx, a[*] array)                                        \
{                                                                        \
  new_shape = _drop_SxV_( _sel_VxA_( [0], _shape_A_(idx)), _shape_A_(array));\
  res = with {                                                           \
          ( . <= iv <= . )                                               \
          {                                                              \
            new_idx = _cat_VxV_( idx, iv);                               \
          } : _sel_VxA_(new_idx, array);                                     \
        } : genarray( new_shape, zero( array ) );                        \
  return( res);                                                          \
}

BUILT_IN( SEL_VxA)




#define ZERO( a, za)  \
inline                \
a zero( a[*] A)       \
{                     \
  return( za);        \
}

ZERO( int, 0)
ZERO( double, 0d)
ZERO( float, 0f)
ZERO( char, ' ')
ZERO( bool, false)

inline
bool and( bool a, bool b)
{
  return( _and_SxS_( a, b));
}

#define EQ( a)                                                       \
inline                                                               \
bool eq( a[*] A, a[*] B)                                             \
{                                                                    \
  res = with {                                                       \
          ( _mul_SxV_(0, _shape_A_(A)) <= iv < _shape_A_(A) )        \
          : _eq_SxS_(_sel_VxA_( iv, A), _sel_VxA_( iv, B));          \
        } : fold( sacprelude::and, true );                           \
  return( res);                                                      \
}

BUILT_IN( EQ)


int[*] adjustLacFunParamsReshape( bool[*] p, int[*] i, int[.] iv, int[.] shp)
{
  return( ( _or_SxS_(_eq_SxS_( _dim_A_(p), 0), _eq_SxS_(_dim_A_(i), 0)) ?
            i : _reshape_VxA_( shp, i)[iv]));
}

int[*] adjustLacFunParams( bool[*] p, int[*] i, int[.] iv)
{
  return( ( _or_SxS_(_eq_SxS_( _dim_A_(p), 0), _eq_SxS_(_dim_A_(i), 0)) ?
            i : i[iv]));
}

