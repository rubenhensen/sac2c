/*
 *
 * $Log$
 * Revision 3.11  2005/08/23 14:24:27  sbs
 * added COzipCvChar
 *
 * Revision 3.10  2004/11/26 16:33:16  cg
 * identifiers brushed.
 *
 * Revision 3.9  2002/10/11 16:04:40  sbs
 * T_classtype added.
 *
 * Revision 3.8  2002/07/30 15:09:58  dkr
 * _hidden_ renamed into SAC_hidden
 * _user_ renamed into SAC_user
 *
 * Revision 3.7  2001/05/02 07:57:56  nmw
 * functions for basecv table added
 *
 * Revision 3.6  2001/04/30 12:26:30  nmw
 * COCv2CvHidden added
 *
 * Revision 3.5  2001/04/04 09:59:06  nmw
 * missing convert functions for basetype char added
 *
 * Revision 3.4  2001/03/22 14:29:13  nmw
 * COCv2Float, COCv2Bool, COCv2Char added
 *
 * Revision 3.3  2001/03/05 17:02:12  sbs
 * zipcv-funs inserted
 *
 * Revision 3.2  2001/03/02 10:14:07  sbs
 * it_cv2str added
 *
 * Revision 3.1  2000/11/20 18:03:38  sacbase
 * new release made
 *
 * Revision 1.3  2000/09/25 15:12:16  dkr
 * typestring for T_hidden changed from void* into _hidden_
 *
 * Revision 1.2  2000/09/22 13:54:01  dkr
 * header modified
 *
 * Revision 1.1  2000/01/21 15:39:28  dkr
 * Initial revision
 *
 * Revision 2.6  1999/10/22 14:17:27  sbs
 * added a few new cv2cv funs
 *
 * Revision 2.5  1999/10/19 12:56:14  sacbase
 * the new .mac mechanism introduced as well as cv2xxx tables added.
 *
 * Revision 2.4  1999/04/08 17:13:18  jhs
 * T_nothing as virtual type for elements of empti arrays added.
 *
 * Revision 2.3  1999/03/22 19:10:52  bs
 * bug fixed
 *
 * Revision 2.2  1999/03/19 09:26:37  bs
 * T_unknown changed to 1st position. This is necessary, since
 * initializing routines are using 0 for unknown values.
 *
 * Revision 2.1  1999/02/23 12:40:13  sacbase
 * new release made
 *
 * [...]
 *
 */

/*
**
** Some macro definitions used for the automatic creation
** of tables which depend on the correct order of the tags
** for the type Type
**
** T_unknown changed to 1st position. This is necessary, since
** initializing routines are using 0 for unknown values.
*/

#ifndef TYP_IFname
#define TYP_IFname(it_name)
#endif

#ifndef TYP_IFdb_str
#define TYP_IFdb_str(it_db_str)
#endif

#ifndef TYP_IFpr_str
#define TYP_IFpr_str(it_pr_str)
#endif

#ifndef TYP_IFfunr_str
#define TYP_IFfunr_str(it_funr_str)
#endif

#ifndef TYP_IFcv2scal
#define TYP_IFcv2scal(it_cv2scal)
#endif

#ifndef TYP_IFcv2cv
#define TYP_IFcv2cv(it_cv2cv)
#endif

#ifndef TYP_IFcv2str
#define TYP_IFcv2str(it_cv2str)
#endif

#ifndef TYP_IFsize
#define TYP_IFsize(it_size)
#endif

#ifndef TYP_IFzipcv
#define TYP_IFzipcv(it_zipcv)
#endif

#ifndef TYP_IFbasecv
#define TYP_IFbasecv(it_basecv)
#endif

#define TYP_IF(it_name, it_db_str, it_pr_str, it_funr_str, it_cv2scal, it_cv2cv,         \
               it_cv2str, it_size, it_zipcv, it_basecv, unused1, unused2)                \
                                                                                         \
    TYP_IFname (it_name) TYP_IFdb_str (it_db_str) TYP_IFpr_str (it_pr_str)               \
      TYP_IFfunr_str (it_funr_str) TYP_IFcv2scal (it_cv2scal) TYP_IFcv2cv (it_cv2cv)     \
        TYP_IFcv2str (it_cv2str) TYP_IFsize (it_size) TYP_IFzipcv (it_zipcv)             \
          TYP_IFbasecv (it_basecv)

/*
 *      simpletype          mdb_type            type_string        rename_type
 *      cv2scalar           cv2cv               cv2str             simpletype_size
 *      zipcv               basecv              unused1            unused2
 */

TYP_IF (T_unknown, "unknown", "_unknown_", "", COcv2ScalarDummy, COcv2CvDummy,
        COcv2StrDummy, 0, COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_int, "int", "int", "i", COcv2Num, COcv2CvInt, COcv2StrInt, sizeof (int),
          COzipCvInt, CObaseCvInt, unused, unused),

  TYP_IF (T_short, "short", "short", "s", COcv2ScalarDummy, COcv2CvShort, COcv2StrShort,
          sizeof (short int), COzipCvShort, CObaseCvShort, unused, unused),

  TYP_IF (T_long, "long", "long", "l", COcv2ScalarDummy, COcv2CvLong, COcv2StrLong,
          sizeof (long int), COzipCvLong, CObaseCvLong, unused, unused),

  TYP_IF (T_uint, "unsigned int", "unsigned int", "ui", COcv2ScalarDummy, COcv2CvUInt,
          COcv2StrUInt, sizeof (int), COzipCvUInt, CObaseCvUInt, unused, unused),

  TYP_IF (T_ushort, "unsigned short", "unsigned short", "us", COcv2ScalarDummy,
          COcv2CvUShort, COcv2StrUShort, sizeof (short int), COzipCvUShort,
          CObaseCvUShort, unused, unused),

  TYP_IF (T_ulong, "unsigned long", "unsigned long", "ul", COcv2ScalarDummy, COcv2CvULong,
          COcv2StrULong, sizeof (long int), COzipCvULong, CObaseCvULong, unused, unused),

  TYP_IF (T_float, "float", "float", "f", COcv2Float, COcv2CvFloat, COcv2StrFloat,
          sizeof (float), COzipCvFloat, CObaseCvFloat, unused, unused),

  TYP_IF (T_double, "double", "double", "d", COcv2Double, COcv2CvDouble, COcv2StrDouble,
          sizeof (double), COzipCvDouble, CObaseCvDouble, unused, unused),

  TYP_IF (T_longdbl, "long double", "long double", "ld", COcv2ScalarDummy,
          COcv2CvLongDouble, COcv2StrLongDouble, sizeof (long double), COzipCvLongDouble,
          CObaseCvLongDouble, unused, unused),

  TYP_IF (T_bool, "bool", "bool", "b", COcv2Bool, COcv2CvBool, COcv2StrBool,
          sizeof (bool), COzipCvBool, CObaseCvBool, unused, unused),

  TYP_IF (T_str, "string", "string", "st", COcv2ScalarDummy, COcv2CvDummy, COcv2StrDummy,
          sizeof (char *), COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_char, "char", "unsigned char", "c", COcv2Char, COcv2CvChar, COcv2StrChar,
          sizeof (unsigned char), COzipCvChar, CObaseCvDummy, unused, unused),

  TYP_IF (T_hidden, "hidden", "SAC_hidden", "h", COcv2ScalarDummy, COcv2CvHidden,
          COcv2StrDummy, sizeof (void *), COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_classtype, "classtype", "SAC_classtype", "u", COcv2ScalarDummy, COcv2CvHidden,
          COcv2StrDummy, sizeof (void *), COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_void, "void", "void", "v", COcv2ScalarDummy, COcv2CvDummy, COcv2StrDummy, 0,
          COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_dots, "...", "...", "d", COcv2ScalarDummy, COcv2CvDummy, COcv2StrDummy, 0,
          COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_user, "user", "SAC_user", "", COcv2ScalarDummy, COcv2CvDummy, COcv2StrDummy,
          0, COzipCvDummy, CObaseCvDummy, unused, unused),

  TYP_IF (T_nothing, "nothing", "nothing", "n", COcv2ScalarDummy, COcv2CvDummy,
          COcv2StrDummy, 0, COzipCvDummy, CObaseCvDummy, unused, unused)

#undef TYP_IFname
#undef TYP_IFdb_str
#undef TYP_IFpr_str
#undef TYP_IFfunr_str
#undef TYP_IFcv2scal
#undef TYP_IFcv2cv
#undef TYP_IFcv2str
#undef TYP_IFunused2
#undef TYP_IFsize
#undef TYP_IFzipcv
#undef TYP_IFbasecv

#undef TYP_IF
