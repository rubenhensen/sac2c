<!--
  $Log$
  Revision 1.69  2004/11/25 13:05:06  sbs
  REUSE added.

  Revision 1.68  2004/11/25 12:57:14  khf
  added USSAT

  Revision 1.67  2004/11/25 12:09:09  skt
  Cleanup Declaration Traversal added

  Revision 1.66  2004/11/25 12:01:38  sah
  added travs

  Revision 1.65  2004/11/25 11:18:53  ktr
  Added MarkMemVals traversal, AVIS_ISDEAD

  Revision 1.1  2004/11/23 11:37:46  sah
  Initial revision

-->
<?xml-stylesheet href="ast2html.xsl" type="text/xsl" name="HTML" media="screen"?>
<definition>
  <attributetypes>
    <type name="String" ctype="char*" init="NULL"
    copy="function" />
    <type name="SharedString" ctype="char*" init="NULL"
    copy="function" />
    <type name="Integer" ctype="int" init="0" copy="literal" />
    <type name="Long" ctype="long" init="0" copy="literal" />
    <type name="Bool" ctype="bool" init="FALSE" copy="literal" />
    <type name="Float" ctype="float" init="0.0" copy="literal" />
    <type name="Double" ctype="double" init="0.0" copy="literal" />
    <type name="Char" ctype="char" init="'\0'" copy="literal" />
    <type name="OldType" ctype="types*" init="NULL"
    copy="function" persist="no" />
    <type name="Node" ctype="node*" init="NULL" copy="function" />
    <type name="Link" ctype="node*" init="NULL" copy="hash" persist="no" />
    <type name="ExtLink" ctype="node*" init="NULL" copy="hash" persist="yes" />
    <type name="DownLink" ctype="node*" init="NULL" copy="hash" persist="no" />
    <type name="IntegerArray" ctype="int*" init="NULL"
    copy="function" />
    <type name="FileType" ctype="file_type" init="F_unknown"
    copy="literal" />
    <type name="LUT" ctype="lut_t*" init="NULL" copy="function" persist="no" />
    <type name="Prf" ctype="prf" init="0" copy="literal" />
    <type name="Mask" ctype="long*" size="7" init="NULL"
    copy="function" />
    <type name="StatusType" ctype="statustype" init="ST_undef"
    copy="literal" />
    <type name="NodeList" ctype="nodelist*" init="NULL"
    copy="function" />
    <type name="SharedNodeList" ctype="nodelist*" init="NULL"
    copy="function" />
    <type name="DFMask" ctype="dfmask_t*" init="NULL"
    copy="function" persist="no" />
    <type name="DFMaskBase" ctype="dfmask_base_t*" init="NULL"
    copy="function" persist="no" />
    <type name="NewType" ctype="ntype*" init="NULL"
    copy="function" />
    <type name="ArgTab" ctype="argtab_t*" init="NULL"
    copy="function" />
    <type name="IndexPointer" ctype="index_info*" init="NULL"
    copy="function" />
    <type name="Shape" ctype="shape*" init="NULL"
    copy="function" />
    <type name="SimpleType" ctype="simpletype" init="T_unknown"
    copy="literal" />
    <type name="ConstVecPointer" ctype="void*" init="NULL"
    copy="function" />
    <type name="UseFlag" ctype="useflag" init="DOLLAR"
    copy="literal" />
    <type name="AccessInfo" ctype="access_info_t*" init="NULL"
    copy="function" persist="no" />
    <type name="ShpSeg" ctype="shpseg*" init="NULL"
    copy="function" />
    <type name="IntegerPointer" ctype="int*" init="NULL"
    copy="function" />
    <type name="IntegerPointerArray" ctype="int*" size="7"
    init="NULL" copy="function" />
    <type name="Scheduling" ctype="sched_t*" init="NULL"
    copy="function" persist="no" />
    <type name="TaskSel" ctype="tasksel_t*" init="NULL"
    copy="function" persist="no" />
    <type name="NodePointer" ctype="node**" init="NULL"
    copy="function" />
    <type name="SSAPhi" ctype="ssaphit_t" init="PHIT_NONE"
    copy="literal" />
    <type name="BitField" ctype="int" init="0" copy="literal" />
    <type name="Constant" ctype="constant*" init="NULL"
    copy="function" />
    <type name="MTExecMode" ctype="mtexecmode_t" init="MUTH_ANY"
    copy="literal" />
    <type name="RCCounter" ctype="rc_counter*" init="NULL"
    copy="function" persist="no" />
    <type name="StringSet" ctype="stringset_t*" init="NULL"
    copy="function" persist="no" />
  </attributetypes>
  <phases>
    <!-- id is the short id of the traversal 
         name is a descriptive name
	 default gives the default traversal mode
	   user  a user defined function
	   sons  TravSons
	   none  TravNone
	   error TravError
	 include the include file needed for the traversal
    -->
    <general>
      <traversal id="GSC" name="Generate Startup Code" default="user" include="gen_startup_code.h" >
        <travuser>
          <node name="Fundef" />
          <node name="Spmd" />
          <node name="Icm" />
        </travuser>
      </traversal>
      <traversal id="DUP" name="Tree duplication" default="user" include="DupTree.h" />
      <traversal id="FREE" name="Free Tree" default="sons" include="free_node.h" />
      <traversal id="SBT" name="Serialize Build Stack" default="user" include="serialize_buildstack.h" />
      <traversal id="SET" name="Serialize Node Traversal" default="user" include="serialize_node.h" />
      <traversal id="SEL" name="Serialize Link Traversal" default="user" include="serialize_link.h" />
      <traversal id="DS" name="DeSerialize Traversal" default="sons" include="serialize_link.h" />
      <traversal id="TNT" name="ToNewTypes Traversal" default="sons" include="ToNewTypes.h" >
	<travuser>
	  <node name="Arg" />
	  <node name="Vardec" />
	  <node name="Objdef" />
	  <node name="Id" />
	  <node name="Ids" />
	  <node name="Let" />
	  <node name="Fundef" />
	  <node name="Block" />
	  <node name="Withid" />
	  <node name="Ap" />
	  <node name="Cast" />
	  <node name="Typedef" />
	  <node name="Array" />
	</travuser>
      </traversal>
      <traversal id="TOT" name="ToOldTypes Traversal" default="sons" include="ToOldTypes.h" >
	<travuser>
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Let" />
	  <node name="Vardec" />
	  <node name="Arg" />
	  <node name="Fundef" />
	  <node name="Array" />
	</travuser>
      </traversal>
      <traversal id="L2F" name="Lac2Fun Traversal" default="sons" include="lac2fun.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Do" />
	  <node name="Fundef" />
	  <node name="Cond" />
	</travuser>
      </traversal>
      <traversal id="CUD" name="Cleanup Declarations" default="sons" include="cleanup_decls.h" >
	<travuser>
	  <node name="Block" />
	  <node name="Fundef" />
	  <node name="Id" />
	  <node name="Ids" />
	  <node name="Vardec" />
	</travuser>
      </traversal>
      <traversal id="F2L" name="Fun2Lac Traversal" default="sons" include="fun2lac.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Module" />
	  <node name="Fundef" />
	  <node name="Let" />
	  <node name="Ap" />
	  <node name="Block" />
	</travuser>
      </traversal>
      <traversal id="USSAT" name="UndoSSATransform Traversal" default="sons" include="UndoSSATransform.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Module" />
	  <node name="Fundef" />
	  <node name="Let" />
	  <node name="Arg" />
	  <node name="Block" />
          <node name="Vardec" />
          <node name="Ids" />
          <node name="With" />
	</travuser>
      </traversal>
    </general>
    <phase id="scanparse" name="Parsing input file">
     <traversal id="HM" name="Handle Mops" default="sons" include="handle_mops.h" >
	<travuser>
	  <node name="Mop" />
	</travuser>
      </traversal>
      <traversal id="HD" name="Handle Dots" default="sons" include="handle_dots.h">
        <travuser>
	  <node name="Id" />
	  <node name="With" />
	  <node name="Genarray" />
	  <node name="Modarray" />
	  <node name="Fold" />
	  <node name="Part" />
	  <node name="Generator" />
	  <node name="Dot" />
	  <node name="Ap" />
	  <node name="Prf" />
	  <node name="Assign" />
	  <node name="SetWL" />
	  <node name="Id" />
	</travuser>
      </traversal>
      <traversal id="RSP" name="Resolve pragmas" default="sons" include="resolvepragma.h">
        <travuser>
	  <node name="Fundef" />
	  <node name="Arg" />
	  <node name="Ret" />
	</travuser>
      </traversal>
    </phase>
    <phase id="flatten" name="Simplifying source code" >
      <traversal id="FLAT" name="Flatten" default="sons" include="flatten.h" >
        <travuser>
          <node name="Assign" />
          <node name="Module" />
          <node name="Fundef" />
          <node name="Let" />
          <node name="Exprs" />
          <node name="Ap" />
          <node name="Block" />
          <node name="Cond" />
          <node name="While" />
          <node name="Do" />
          <node name="Array" />
          <node name="Return" />
          <node name="Id" />
          <node name="Args" />
          <node name="Prf" />
          <node name="With" />
          <node name="Withid" />
          <node name="Part" />
          <node name="Generator" />
          <node name="Genarray" />
          <node name="Modarray" />
          <node name="Fold" />
          <node name="Code" />
        </travuser>
      </traversal>
    </phase>
    <phase id="use" name="Processing use statements">
      <traversal id="USS" name="Use Symbols" default="sons" include="usesymbols.h" >
        <travuser>
	  <node name="Typedef" />
	  <node name="Fold" />
	  <node name="Arg" />
	  <node name="Vardec" />
	  <node name="Ap" />
	  <node name="Module" />
	</travuser>
      </traversal>
    </phase>
    <phase id="typecheck" name="Running type inference system">
      <traversal id="INSVD" name="Insert Vardecs" default="sons" include="insert_vardecs.h" >
	<travuser>
	  <node name="Fundef" />
	  <node name="Id" />
	  <node name="Withid" />
	  <node name="Let" />
	</travuser>
      </traversal>
      <traversal id="CRTWRP" name="Create Wrappers" default="sons" include="create_wrappers.h">
        <travuser>
          <node name="Module" />
          <node name="Fundef" />
          <node name="Let" />
          <node name="Ap" />
          <node name="Id" />
          <node name="Genarray" />
          <node name="Fold" />
        </travuser>  
      </traversal>
      <traversal id="NTC" name="New Type Inference" default="sons" include="new_typecheck.h" >
        <travuser> 
          <node name="typedef" />
          <node name="module" />
          <node name="fundef" />
          <node name="arg" />
          <node name="block" />
          <node name="vardec" />
          <node name="assign" />
          <node name="cond" />
          <node name="funcond" />
          <node name="let" />
          <node name="return" />
          <node name="ap" />
          <node name="prf" />
          <node name="array" />
          <node name="cast" />
          <node name="exprs" />
          <node name="id" />
          <node name="num" />
          <node name="bool" />
          <node name="char" />
          <node name="double" />
          <node name="float" />
          <node name="with" />
          <node name="generator" />
          <node name="part" />
          <node name="withid" />
          <node name="code" />
          <node name="genarray" />
          <node name="modarray" />
          <node name="fold" />
        </travuser>
      </traversal>
      <traversal id="NT2OT" name="Convert from new to old types and do some cleanup" default="sons" include="new2old.h" >
        <travuser>
          <node name="module" />
          <node name="fundef" />
          <node name="arg" />
          <node name="block" />
          <node name="vardec" />
          <node name="array" />
          <node name="cast" />
          <node name="let" />
          <node name="fold" />
          <node name="withid" />
        </travuser>
      </traversal>
      <traversal id="PF" name="Annotate Function Calls " default="sons" include="annotate_fun_calls.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Fundef" />
        </travuser>  
      </traversal>
    </phase>
    <phase id="export" name="Exporting symbols">
      <traversal id="SER" name="Serialize Module" default="sons" include="serialize_node.h" />
    </phase>
    <phase id="wlenhance" name="Enhancement of With-Loops">
      <traversal id="WLE" name="With-Loop Enhancement" default="sons" include="WLEnhancement.h" >
      </traversal>
      <traversal id="EA" name="Explicit Accumulate" default="sons" include="ExplicitAccumulate.h" >
        <travuser>
          <node name="Module" />
          <node name="Fundef" />
          <node name="Let" />
          <node name="With" />
          <node name="Code" />
        </travuser>
      </traversal>
      <traversal id="WLPG" name="With-Loop Partition Generation" default="sons" include="WLPartitionGeneration.h" >
        <travuser>
          <node name="Module" />
          <node name="Fundef" />
          <node name="Assign" />
          <node name="Let" />
          <node name="Ap" />
          <node name="With" />
          <node name="Part" />
          <node name="Generator" />
          <node name="Genarray" />
         </travuser>
      </traversal>
    </phase>
    <phase id="inlprepare" name="Prepare Inline">
      <traversal id="PPI" name="Prepare Inline" default="sons" include="prepareinline.h">
        <travuser>
	  <node name="Fundef" />
	  <node name="Module" />
	</travuser>
      </traversal>
    </phase>
    <phase id="sacopt" name="Running SAC optimizations">
       <traversal id="AL" name="AssociativeLaw" default="sons" include="AssociativeLaw.h" >
	<travuser>
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Let" />
	  <node name="Prf" />
	</travuser>
      </traversal>
      <traversal id="CF" name="Constant Folding" default="sons" include="SSAConstantFolding.h" >
        <travuser>
          <node name="Id" />
        </travuser>
      </traversal>
      <traversal id="CVP" name="Constant Variable Propagation" default="sons" include="ConstVarPropagation.h" >
	<travuser>
	  <node name="Fundef" />
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Let" />
	  <node name="Code" />
	  <node name="Cond" />
	  <node name="With" />
	  <node name="Genarray" />
	  <node name="Modarray" />
	  <node name="Fold" />
	  <node name="Ap" />
	  <node name="Prf" />
	  <node name="Exprs" />
	  <node name="Id" />
	  <node name="Return" />
	  <node name="Array" />
	  <node name="Funcond" />
	</travuser>
      </traversal>
      <traversal id="DDEPEND" name="Detect Dependencies" default="sons" include="detectdependencies.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Prf" />
	  <node name="Id" />
	  <node name="With" />
          <node name="Code" />
	</travuser>
      </traversal>
      <traversal id="DL" name="DistributiveLaw" default="sons" include="DistributiveLaw.h" >
	<travuser>
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Let" />
	  <node name="Prf" />
	  <node name="Ap" />
	</travuser>
      </traversal>
      <traversal id="ESD" name="ElimSubDiv" default="sons" include="ElimSubDiv.h" >
	<travuser>
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Let" />
	  <node name="Prf" />
	</travuser>
      </traversal>
      <traversal id="TS" name="Print Type Statistics" default="sons" include="type_statistics.h" >
        <travuser>
          <node name="Fundef" />
          <node name="Arg" />
          <node name="Vardec" />
        </travuser>
      </traversal>
      <traversal id="RDEPEND" name="Resolve Dependencies" default="sons" include="resolvedependencies.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Prf" />
   	</travuser>
      </traversal>
      <traversal id="TDEPEND" name="Tag Dependencies" default="sons" include="tagdependencies.h" >
	<travuser>
	  <node name="Assign" />
	  <node name="Id" />
	  <node name="With" />
   	</travuser>
      </traversal>
      <traversal id="UESD" name="UndoElimSubDiv" default="sons" include="UndoElimSubDiv.h" >
        <travuser>
	  <node name="Block" />
          <node name="Let" />
	  <node name="Assign" />
	  <node name="Prf" />
        </travuser>
      </traversal>
      <traversal id="WLFS" name="With-Loop-Fusion" default="sons" include="WithloopFusion.h" >
	<travuser>
	  <node name="Fundef" />
	  <node name="Block" />
	  <node name="Assign" />
	  <node name="Ap" />
	  <node name="Id" />
	  <node name="With" />
	  <node name="Genarray" />
	  <node name="Modarray" />
	  <node name="Fold" />
	  <node name="Part" />
	  <node name="Generator" />
	</travuser>
      </traversal>
      <traversal id="WLS" name="With-Loop Scalarization" default="sons" include="wls.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Fundef" />
          <node name="With" />
        </travuser>
      </traversal>
      <traversal id="WLSC" name="With-Loop Scalarization Check traversal" default="sons" include="wls.h">
        <travuser>
          <node name="Block" />
          <node name="Code" />
          <node name="Id" />
          <node name="Part" />
          <node name="With" />
          <node name="Withid" />
          <node name="Genarray" />
          <node name="Modarray" />
          <node name="Fold" />
        </travuser>
      </traversal>
      <traversal id="WLSW" name="With-Loop Scalarization Withloopification traversal" default="sons" include="wls.h">
        <travuser>
          <node name="Code" />
          <node name="Id" />
          <node name="Let" />
          <node name="Part" />
          <node name="With" />
          <node name="Withid" />
        </travuser>
      </traversal>
      <traversal id="WLSB" name="With-Loop Scalarization Build traversal" default="sons" include="wls.h">
        <travuser>
          <node name="Code" />
          <node name="Generator" />
          <node name="Part" />
          <node name="With" />
          <node name="Withid" />
          <node name="Genarray" />
          <node name="Modarray" />
        </travuser>
      </traversal>
    </phase>
    <phase id="alloc" name="Introducing explicit allocation instructions">
      <traversal id="EMAA" name="Alias analysis" default="sons" include="aliasanalysis.h" >
        <travuser>
          <node name="Ap" />
          <node name="Arg" />
          <node name="Assign" />
          <node name="Code" />
          <node name="Cond" />
          <node name="Fold" />
          <node name="Funcond" />
          <node name="Fundef" />
          <node name="Icm" />
          <node name="Id" />
          <node name="Let" />
          <node name="Prf" />
          <node name="With" />
          <node name="With2" />
          <node name="Vardec" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMLR" name="Loop reuse" default="sons" include="loopreuseopt.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Fundef" />
        </travuser>
        <travnone>
          <node name="Objdef" />
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMLRO" name="Loop reuse optimization" default="sons" include="loopreuseopt.h">
        <travuser>
          <node name="Ap" />
          <node name="Arg" />
          <node name="Fundef" />
          <node name="Id" />
          <node name="Prf" />
        </travuser>
        <travnone>
          <node name="Objdef" />
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMAL" name="Allocation" default="sons" include="alloc.h" >
        <travuser>
          <node name="Ap" />
          <node name="Array" />
          <node name="Assign" />
          <node name="Code" />
          <node name="Const" />
          <node name="Fold" />
          <node name="Funcond" />
          <node name="Fundef" />
          <node name="Genarray" />
          <node name="Icm" />
          <node name="Id" />
          <node name="Let" />
          <node name="Modarray" />
          <node name="Prf" />
          <node name="With" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMDR" name="Data reuse" default="sons" include="datareuse.h" >
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Code" />
          <node name="Fundef" />
          <node name="Id" />
          <node name="Let" />
          <node name="Prf" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMEC" name="Explicit Copy" default="sons" include="explicitcopy.h" >
        <travuser>
          <node name="Assign" />
          <node name="Fundef" />
          <node name="Prf" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMFRC" name="Filter Reuse Candidates" default="sons" include="filterrc.h" >
        <travuser>
          <node name="Ap" />
          <node name="Arg" />
            <node name="Assign" />
          <node name="Cond" />
          <node name="Fold" />
          <node name="Funcond" />
          <node name="Fundef" />
          <node name="Genarray" />
          <node name="Id" />
          <node name="Modarray" />
          <node name="Prf" />
          <node name="With" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMIA" name="Interface Analysis" default="sons" include="interfaceanalysis.h" >
        <travuser>
          <node name="Ap" />
          <node name="Arg" />
          <node name="Assign" />
          <node name="Block" />
          <node name="Cond" />
          <node name="Fold" />
          <node name="Funcond" />
          <node name="Fundef" />
          <node name="Id" />
          <node name="Let" />
          <node name="Ret" />
          <node name="Return" />
          <node name="Vardec" />
          <node name="with" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMRB" name="Reuse branching" default="sons" include="reusebranching.h" >
        <travuser>
          <node name="Assign" />
          <node name="Fundef" />
          <node name="Prf" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMRI" name="Reuse inference" default="sons" include="reuse.h" >
        <travuser>
          <node name="Arg" />
          <node name="Assign" />
          <node name="Code" />
          <node name="Cond" />
          <node name="Fundef" />
          <node name="Icm" />
          <node name="Let" />
          <node name="Prf" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="REUSE" name="Reuse With Arrays" default="sons" include="ReuseWithArrays.h">
        <travuser>
          <node name="Fundef" />
          <node name="Let" />
          <node name="Id" />
          <node name="Genarray" />
          <node name="Modarray" />
          <node name="Fold" />
          <node name="With2" />
        </travuser>
      </traversal>
      <traversal id="EMSR" name="Static Reuse" default="sons" include="staticreuse.h" >
        <travuser>
          <node name="Prf" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
    </phase>
    <phase id="concurrent" name="Generating annotations for MT 2">
      <traversal id="CONC" name="Build SPMD Regions (MT2)" default="sons" include="concurrent.h">
        <travuser>
          <node name="Fundef" />
          <node name="Module" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SPMDI" name="SPMD Init" default="sons" include="spmd_init.h">
        <travuser>
          <node name="Assign" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SPMDEMM" name="SPMD Explicit Memory Management" default="sons" include="spmd_emm.h">
        <travuser>
          <node name="Assign" />
          <node name="Let" />
          <node name="Prf" />
          <node name="Spmd" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SPMDL" name="SPMD Lift" default="sons" include="spmd_lift.h">
        <travuser>
          <node name="Id" />
          <node name="Ids" />
          <node name="Let" />
          <node name="Spmd" />
          <node name="With2" />
          <node name="Withid" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SCHED" name="Schedule" default="sons" include="schedule.h">
        <travuser>
          <node name="Sync" />
          <node name="With2" />
          <node name="Wlseg" />
          <node name="Wlsegvar" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SYNCI" name="SYNC-Block Init" default="sons" include="sync_init.h">
        <travuser>
          <node name="Assign" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SYNCO" name="Synchronisation Optimization" default="sons" include="sync_opt.h">
        <travuser>
          <node name="Assign" />
          <node name="Sync" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SPMDDN" name="SPMD Delete Nested Traversal"  default="sons" include="spmd_trav.h">
        <travuser>
          <node name="Spmd" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="SPMDPM" name="SPMD Produce Masks" default="sons" include="spmd_trav.h">
        <travuser>
          <node name="Assign" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
    </phase>
    <phase id="multithread" name="Generating annotations for MT3">
      <traversal id="MUTH" name="Build Multithread (MT3)" default="sons" include="multithread.h">
        <travuser>
          <node name="Assign" />
          <node name="Fundef" />
          <node name="Module" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="TEM" name="Tag Executionmode" default="sons" include="tag_executionmode.h">
        <travuser>
          <node name="Ap" />
          <node name="Array" />
          <node name="Assign" />
          <node name="Let" />
          <node name="Prf" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="CRWIW" name="Create Withinwith Replication" default="sons" include="create_withinwith.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Fundef" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="PEM" name="Propagate Executionmode" default="sons" include="propagate_executionmode.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Cond" />
          <node name="Fundef" />
          <node name="With2" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="CDFG" name="Create Dataflowgraph" default="sons" include="create_dataflowgraph.h">
        <travuser>
          <node name="Assign" />
          <node name="Block" />
          <node name="Cond" />
          <node name="Id" />
          <node name="Withid" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="ASMRA" name="Assignments Rearrange" default="sons" include="assignments_rearrange.h">
        <travuser>
          <node name="Block" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="CRECE" name="Create Cells" default="sons" include="create_cells.h">
        <travuser>
          <node name="Assign" />
          <node name="Block" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="CEGRO" name="Cell Growth" default="sons" include="cell_growth.h">
        <travuser>
          <node name="Assign" />
          <node name="Block" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="REPFUN" name="Replicate Functions" default="sons" include="replicate_functions.h">
        <travuser>
          <node name="Ap" />
          <node name="Assign" />
          <node name="Ex" />
          <node name="Fundef" />
          <node name="Mt" />
          <node name="St" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="CONCEL" name="Consolidate Cells" default="sons" include="consolidate_cells.h">
        <travuser>
          <node name="Ex" />
          <node name="Fundef" />
          <node name="Mt" />
          <node name="St" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
    </phase>
    <phase id="refcnt" name="Introducing explicit allocation instructions" >
      <traversal id="EMRCO" name="Reference counting optimizations" default="sons" include="rcopt.h" >
        <travuser>
          <node name="Assign" />
          <node name="Block" />
          <node name="Genarray" />
          <node name="Let" />
          <node name="Modarray" />
          <node name="Prf" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMRC" name="Reference Counting Inference" default="sons" include="refcounting.h" >
        <travuser>
          <node name="Ap" />
          <node name="Arg" />
          <node name="Array" />
          <node name="Assign" />
          <node name="Block" />
          <node name="Code" />
          <node name="Cond" />
          <node name="Fold" />
          <node name="Funcond" />
          <node name="Fundef" />
          <node name="Genarray" />
          <node name="Icm" />
          <node name="Id" />
          <node name="Let" />
          <node name="Modarray" />
          <node name="Prf" />
          <node name="Return" />
          <node name="Vardec" />
          <node name="with" />
          <node name="With2" />
          <node name="Withid" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
      <traversal id="EMRE" name="Reuse elimination" default="sons" include="reuseelimination.h" >
        <travuser>
          <node name="Assign" />
          <node name="Cond" />
          <node name="Fundef" />
          <node name="Genarray" />
          <node name="Let" />
          <node name="Modarray" />
          <node name="Prf" />
          <node name="Vardec" />
        </travuser>
        <travsons>
        </travsons>
        <travnone>
        </travnone>
        <traverror>
        </traverror>
      </traversal>
    </phase>
    <phase id="precompile" name="Preparing C code generation" >
      <traversal id="MMV" name="MarkMemVals" default="sons" include="markmemvals.h" >
        <travuser>
          <node name="Code" />
          <node name="Fold" />
          <node name="Fundef" />
          <node name="Genarray" />
          <node name="Id" />
          <node name="Let" />
          <node name="Modarray" />
          <node name="Prf" />
          <node name="Spmd" />
          <node name="Vardec" />
          <node name="With" />
          <node name="With2" />
          <node name="Wlseg" />
          <node name="Wlsegvar" />
        </travuser>
      </traversal>
    </phase>
    <phase id="compile" name="Generating C code" >
    </phase>
   </phases>
  <nodesets>
    <nodeset name="Expr">
      <target>
        <node name="Num" />
        <node name="Double" />
        <node name="Float" />
        <node name="Char" />
        <node name="Bool" />
        <node name="Id" />
        <node name="With" />
        <node name="Array" />
        <node name="Ap" />
        <node name="Prf" />
        <node name="Funcond" />
	<node name="Cast" />
	<node name="Mop" />
      </target>
    </nodeset>
    <nodeset name="Instr">
      <target>
        <node name="Let" />
        <node name="Cond" />
        <node name="Return" />
        <node name="Do" />
        <node name="Annotate" />
        <node name="While" />
        <node name="Icm" />
      </target>
    </nodeset>
    <nodeset name="Interface">
      <target>
        <node name="Import" />
	<node name="Export" />
	<node name="Use" />
	<node name="Provide" />
      </target>
    </nodeset>
    <nodeset name="WithOp">
      <target>
        <node name="Genarray" />
	<node name="Modarray" />
	<node name="Fold" />
      </target>
    </nodeset>
  </nodesets>
  <syntaxtree version="1.0">
<!--

  N_module :

-->
    <node name="Module">
      <description>node for a module declaration</description>
      <sons>
        <son name="Imports" mandatory="no">
          <description>symbols imported and exported by the module</description>
          <target>
            <set name="Interface" />
          </target>
        </son>
        <son name="Types" mandatory="no">
          <description>types defined within the
          module</description>
          <target>
            <node name="Typedef" />
          </target>
        </son>
        <son name="Objs" mandatory="no">
          <target>
            <node name="Objdef" />
          </target>
        </son>
        <son name="Funs" mandatory="no">
          <target>
            <node name="Fundef" />
          </target>
        </son>
        <son name="FunDecs" mandatory="no">
          <target>
            <node name="Fundef" />
          </target>
        </son>
        <son name="CWrapper" default="NULL" mandatory="no">
          <target>
            <node name="CWrapper" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Name" mandatory="no">
          <type name="SharedString" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="FileType" mandatory="yes">
          <type name="FileType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Classtype" mandatory="no">
          <type name="NewType" />
          <phases>
            <range from="scanparse" to="objinit"/>
          </phases>
        </attribute>
        <attribute name="WrapperFuns" mandatory="yes">
          <type name="LUT" />
          <phases>
            <range from="create-wrappers"
            to="create-wrapper-code" />
          </phases>
        </attribute>
        <attribute name="FoldFuns" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
	<attribute name="Dependencies" mandatory="yes">
	  <type name="StringSet" />
	  <phases>
	    <range from="annotatenamespace" to="final" />
	  </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_typedef :

-->
    <node name="Typedef">
      <description>definition of a user defined type</description>
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="Typedef" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Name" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Mod" mandatory="no">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="NType" mandatory="yes">
          <type name="NewType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Pragma" mandatory="no">
          <type name="Node">
            <target>
              <node name="Pragma" />
            </target>
          </type>
          <phases>
            <range from="import" to="writesib" />
          </phases>
        </attribute>
        <attribute name="CopyFun" mandatory="no">
          <type name="String" />
          <phases>
            <range from="resolvepragma" to="final" />
          </phases>
        </attribute>
        <attribute name="FreeFun" mandatory="no">
          <type name="String" />
          <phases>
            <range from="resolvepragma" to="final" />
          </phases>
        </attribute>
        <attribute name="Icm" mandatory="no">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
	<attribute name="SymbolName" mandatory="no">
	  <type name="String" />
	  <phases>
	    <range from="export" to="final" />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="IsExported" />
        <flag name="IsProvided" />
	<flag name="IsLocal" default="TRUE"/>
        <flag name="IsUnique" />
      </flags>
    </node>
<!--

  N_objdef :

-->
    <node name="Objdef">
      <sons>
        <son name="Expr" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
	<son name="Avis" mandatory="yes">
	  <target>
	    <node name="Avis" />
	  </target>
	</son>
        <son name="Next" mandatory="no">
          <target>
            <node name="Objdef" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Mod" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="VarName" mandatory="yes">
          <type name="String" />
          <phases>
            <phase name="objdects" />
          </phases>
        </attribute>
        <attribute name="Pragma" mandatory="yes">
          <type name="Node" >
            <target>
              <node name="Pragma" />
            </target>
          </type>
          <phases>
            <range from="scanparse" to="final" />
          </phases>
        </attribute>
        <attribute name="Arg" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Id" />
            </target>
          </type>
          <phases>
            <phase name="handle-obj" />
          </phases>
        </attribute>
        <attribute name="Icm" mandatory="no">
          <type name="Link">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
	<attribute name="SymbolName" mandatory="no">
	  <type name="String" />
	  <phases>
	    <range from="export" to="final" />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="IsExported" />
        <flag name="IsProvided" />
	<flag name="IsLocal" default="TRUE"/>
      </flags>
    </node>
<!--

  N_fundef :

-->
    <node name="Fundef">
      <sons>
        <son name="Rets" mandatory="no">
	  <target>
	    <node name="Ret" />
	  </target>
	</son>
        <son name="Args" mandatory="no">
          <target>
            <node name="Arg" />
          </target>
        </son>
        <son name="Body" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
        <son name="Next" mandatory="yes">
          <target>
            <node name="Fundef" />
          </target>
        </son>
        <son name="Objects" default="NULL" mandatory="no" >
          <target>
            <node name="Linklist" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Name" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Mod" mandatory="yes">
          <type name="SharedString" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="SymbolName" default="NULL" mandatory="no">
          <type name="String" />
          <phases>
            <range from="export" to="final" />
          </phases>
        </attribute>
        <attribute name="WrapperType" default="NULL" mandatory="yes">
          <type name="NewType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="FunNo" default="0" mandatory="yes">
          <type name="Integer" />
          <phases>
            <phase name="annotatefuncalls" />
          </phases>
        </attribute>
        <attribute name="Pragma" default="NULL" mandatory="no">
          <type name="Node" >
            <target>
              <node name="Pragma" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
	<attribute name="Types" mandatory="no" >
	  <type name="OldType" />
	  <phases>
	    <range from="typecheck" to="final" />
	  </phases>
	</attribute>
        <attribute name="Used" default="USED_INACTIVE"
        mandatory="no">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Ext_Assigns" default="NULL"
        mandatory="no">
          <description>only for ST_condfun, ST_dofun und
          ST_whilefun</description>
          <type name="NodeList">
            <target>
              <node name="Assign" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Int_Assign" default="NULL" mandatory="no">
          <description>only for ST_condfun, ST_dofun und
          ST_whilefun</description>
          <type name="Link">
            <target>
              <node name="Assign" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Specs" mandatory="yes">
          <type name="Integer" />
          <phases>
            <phase name="new_typecheck" />
          </phases>
        </attribute>
        <attribute name="Return" mandatory="yes">
          <type name="DownLink">
            <target>
              <node name="Return" />
            </target>
          </type>
          <phases>
            <range from="typecheck" to="compile" />
          </phases>
        </attribute>
        <attribute name="Impl" mandatory="no">
          <type name="ExtLink">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <phase name="typecheck" />
          </phases>
        </attribute>
        <attribute name="Icm" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="print" />
          </phases>
        </attribute>
        <attribute name="VarNo" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="InlRec" mandatory="yes">
          <type name="Integer" />
          <phases>
            <phase name="inline" />
          </phases>
        </attribute>
        <attribute name="TCStat" mandatory="yes">
          <type name="Integer" />
          <phases>
            <phase name="typecheck" />
          </phases>
        </attribute>
        <attribute name="DFM_Base" mandatory="yes">
          <type name="DFMaskBase" />
          <phases>
            <range from="rc" to="final" />
            <range from="fun2lac" to="final" />
          </phases>
        </attribute>
        <attribute name="ArgTab" mandatory="yes">
          <type name="ArgTab" />
          <phases>
            <range from="precompile" to="compile" />
          </phases>
        </attribute>
        <attribute name="LiftedFrom" mandatory="no">
          <description>only for ST_spmdfun</description>
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="liftsmpd" to="compile" />
          </phases>
        </attribute>
        <attribute name="Worker" mandatory="no">
          <description>only for ST_spmdfun</description>
          <type name="Link">
            <target>
              <unknown />
            </target>
          </type>
          <phases>
            <unknown />
          </phases>
        </attribute>
        <attribute name="Companion" mandatory="no">
          <description>only for ST_spmdfun</description>
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="rfin" to="final" />
            <range from="mtfin" to="final" />
          </phases>
        </attribute>
	<attribute name="ExecMode" mandatory="no">
	  <type name="MTExecMode"/>
	  <phases>
	    <range from="BuildMultithread" to="CreateCells"/>
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="IsExported" />
        <flag name="IsProvided" />
	<flag name="IsLocal" default="TRUE" />
        <flag name="IsNeeded" />
	<flag name="IsFoldfun" />
	<flag name="IsCondfun" />
	<flag name="IsDoFun" />
	<flag name="IsExtern" />
	<flag name="IsInline" />
        <flag name="AllowsInfix" />
        <flag name="HasDotArgs" />
        <flag name="HasDotRets" />
        <flag name="IsSpmdfun" />
	<flag name="IsWrapperfun" />
	<flag name="IsZombie" />
      </flags>
    </node>
<!--

  N_arg :

-->
    <node name="Arg">
      <sons>
        <son name="Avis" mandatory="yes">
	  <target>
	    <node name="Avis" />
	  </target>
	</son>
        <son name="Next" mandatory="no">
          <target>
            <node name="Arg" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Type"  default="NULL" mandatory="yes">
          <type name="OldType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="VarNo" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="TypeString" mandatory="yes">
          <type name="String" />
          <phases>
            <phase name="precompile" />
          </phases>
        </attribute>
        <attribute name="Objdef" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Objdef" />
            </target>
          </type>
          <phases>
            <range from="obj-handling" to="precompile" />
          </phases>
        </attribute>
        <attribute name="ActChn" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <range from="psi-optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="ColChn" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <range from="psi-optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="Fundef" mandatory="yes">
          <type name="ExtLink">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="psi-optimize" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsReadonly" />
        <flag name="IsReference" />
        <flag name="IsArtificial" />
        <flag name="IsPadded" />
        <flag name="IsAliasing" default="TRUE" />
        <flag name="IsRefcounted" default="TRUE" />
      </flags>
    </node>
<!--

  N_block :

-->
    <node name="Block">
      <sons>
        <son name="Instr" mandatory="yes">
          <target>
            <node name="Assign" />
            <node name="Empty" />
          </target>
        </son>
        <son name="VarDec" mandatory="yes">
          <target>
            <node name="VarDec" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="CacheSim" default="NULL" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="VarNo" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="SPMD_Prolog_ICMs" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <phase name="compile" />
          </phases>
        </attribute>
        <attribute name="SPMD_Setup_Args" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <phase name="compile" />
          </phases>
        </attribute>
        <attribute name="Scheduler_Init" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Assign" />
            </target>
          </type>
          <phases>
            <phase name="compile" />
          </phases>
        </attribute>
        <attribute name="SSACounter" mandatory="yes">
          <type name="Node">
            <target>
              <node name="SSAcnt" />
            </target>
          </type>
          <phases>
            <range from="ssaform" to="optimize" />
          </phases>
        </attribute>
        <attribute name="Dataflowgraph" mandatory="no">
          <type name="Node">
            <target>
              <node name="Dataflowgraph" />
            </target>
          </type>
          <phases>
            <phase name="multithread" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_vardec :

-->
    <node name="Vardec">
      <sons>
        <son name="Avis" mandatory="yes">
	  <target>
	    <node name="Avis" />
	  </target>
	</son>
        <son name="Next" mandatory="no">
          <target>
            <node name="Vardec" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Type" default="NULL" mandatory="yes">
          <type name="OldType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Objdef" mandatory="no">
          <type name="Link">
            <target>
              <node name="Objdef" />
            </target>
          </type>
          <phases>
            <range from="inline" to="precompile" />
          </phases>
        </attribute>
        <attribute name="ActChn" mandatory="no">
          <type name="Node">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <range from="psi-optimize" to="end" />
          </phases>
        </attribute>
        <attribute name="ColChn" mandatory="no">
          <type name="Node">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <range from="psi-optimize" to="end" />
          </phases>
        </attribute>
        <attribute name="VarNo" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="optimize" to="final" />
          </phases>
        </attribute>
        <attribute name="Icm" mandatory="no">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsPadded" />
        <flag name="HasBeenEliminated" />
      </flags>
    </node>
<!--

  N_assign :

-->
    <node name="Assign">
      <sons>
        <son name="Instr" mandatory="yes">
          <target>
            <set name="Instr" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="Assign" />
          </target>
        </son>
      </sons>
      <attributes>
	<attribute name="ExecMode" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <range from="BuildMultithread" to="CreateCells" />
	  </phases>
	</attribute>
	<attribute name="CellId" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <range from="AssignmentsRearrange" to="CreateCells" />
	  </phases>
	</attribute>
        <attribute name="Visited_With" mandatory="no">
          <type name="Link">
            <target>
              <node name="With" />
            </target>
          </type>
          <phases>
            <phase name="wlf" />
          </phases>
        </attribute>
        <attribute name="Tag" mandatory="no">
          <type name="Link">
            <target>
              <node name="With" />
            </target>
          </type>
          <phases>
            <phase name="wlf" />
          </phases>
        </attribute>
        <attribute name="Dataflownode" mandatory="no">
          <type name="Node">
            <target>
              <node name="Dataflownode" />
            </target>
          </type>
          <phases>
            <range from="multithread" to="multithread" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsUnused" />
      </flags>
    </node>
<!--

  N_let :

-->
    <node name="Let">
      <sons>
        <son name="Ids" mandatory="yes">
          <target>
            <node name="Ids" />
          </target>
        </son>
        <son name="Expr" mandatory="yes">
	  <target>
	    <set name="Expr" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="UseMask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="multithread" to="final" />
          </phases>
        </attribute>
        <attribute name="DefMask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="multithread" to="final" />
          </phases>
        </attribute>
        <attribute name="LIRFlag" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="ssalir" to="lirmov" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_cast :

-->
    <node name="Cast">
      <sons>
        <son name="Expr" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="NType" mandatory="yes">
          <type name="NewType" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_return :

-->
    <node name="Return">
      <sons>
        <son name="Exprs" mandatory="yes">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Reference" mandatory="yes">
          <description>List of artificial return values which
          correspond to reference parameters</description>
          <type name="Link">
            <target>
              <set name="Expr" />
            </target>
          </type>
          <phases>
            <range from="precompile" to="final" />
          </phases>
        </attribute>
        <attribute name="CRet" mandatory="yes">
          <type name="Link">
            <target>
              <set name="Expr" />
            </target>
          </type>
          <phases>
            <range from="precompile" to="final" />
          </phases>
        </attribute>
        <attribute name="UseMask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="multithread" to="final" />
          </phases>
        </attribute>
        <attribute name="DefMask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="multithread" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_cond :

-->
    <node name="Cond">
      <sons>
        <son name="Cond" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Then" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
        <son name="Else" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="In_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="lac2fun" />
            <range from="lac2fun" to="refcnt" />
            <range from="refcnt" to="final" />
          </phases>
        </attribute>
        <attribute name="Out_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="lac2fun" />
            <range from="lac2fun" to="refcnt" />
            <range from="refcnt" to="final" />
          </phases>
        </attribute>
        <attribute name="Local_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="lac2fun" />
            <range from="lac2fun" to="refcnt" />
            <range from="refcnt" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_do :

-->
    <node name="Do">
      <sons>
        <son name="Cond" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Body" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
        <son name="Skip" mandatory="no" default="NULL" >
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Label" mandatory="yes">
          <type name="String" />
          <phases>
            <range from="fun2lac" to="final" />
          </phases>
        </attribute>
        <attribute name="In_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Out_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Local_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_while :

-->
    <node name="While">
      <sons>
        <son name="Cond" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Body" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="In_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Out_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Local_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="inger_dfms" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_annotate :

-->
    <node name="Annotate">
      <sons></sons>
      <attributes>
        <attribute name="Tag" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="FunNumber" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="FunApNumber" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Fun" default="NULL" mandatory="yes">
          <type name="Link">
	    <target>
	      <node name="Fundef" />
	    </target>
	  </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_ap :

-->
    <node name="Ap">
      <sons>
        <son name="Args" mandatory="no">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="SPName" mandatory="yes">
          <type name="String" />
          <phases>
            <range from="scanparse" to="cwr" />
          </phases>
        </attribute>
        <attribute name="SPMod" mandatory="no">
          <type name="String" />
          <phases>
            <range from="scanparse" to="cwr" />
          </phases>
        </attribute>
        <attribute name="Fundef" mandatory="yes">
          <type name="ExtLink">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="ArgTab" mandatory="yes">
          <type name="ArgTab" />
          <phases>
            <range from="precompile" to="compile" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_mop :

-->
    <node name="Mop">
      <sons>
        <son name="Ops" mandatory="yes" >
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
        <son name="Exprs" mandatory="no">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes> </attributes>
      <flags>
        <flag name="IsFixed" />
      </flags>
    </node>
<!--

  N_exprs :

-->
    <node name="Exprs">
      <sons>
        <son name="Expr" mandatory="yes">
          <target>
            <unknown />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_funcond :

-->
    <node name="Funcond">
      <sons>
        <son name="If" mandatory="yes">
          <target>
            <node name="Id" />
          </target>
        </son>
        <son name="Then" mandatory="yes">
          <target>
            <node name="Id" />
          </target>
        </son>
        <son name="Else" mandatory="yes">
          <target>
            <node name="Id" />
          </target>
        </son>
      </sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_array :

-->
    <node name="Array">
      <sons>
        <son name="AElems" mandatory="yes">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Shape" mandatory="yes">
          <type name="Shape" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="String" default="NULL" mandatory="no">
          <description>In case of constant character arrays defined
          as strings, this attribute holds the original
          definition</description>
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Type" mandatory="yes">
          <type name="OldType" />
          <phases>
            <range from="typecheck" to="final" />
          </phases>
        </attribute>
        <attribute name="NType" mandatory="yes">
          <type name="NewType" />
          <phases>
            <range from="typecheck" to="final" />
          </phases>
        </attribute>
        <attribute name="VecType" mandatory="no">
          <type name="SimpleType" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
        <attribute name="VecLen" mandatory="no">
          <type name="Integer" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
        <attribute name="ConstVec" mandatory="no">
          <type name="ConstVecPointer" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsConst" />
      </flags>
    </node>
<!--

  N_vinfo :

-->
    <node name="Vinfo">
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="Vinfo" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Flag" mandatory="yes">
          <type name="UseFlag" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Shape" mandatory="no">
          <type name="Shape" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dollar" mandatory="no">
          <type name="Link">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="VarDec" default="NULL" mandatory="no">
          <type name="Link">
            <target>
              <node name="VarDec" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_id :

-->
    <node name="Id">
      <sons></sons>
      <attributes>
        <attribute name="SPName" default="NULL" mandatory="no">
	  <type name="String" />
	  <phases>
	    <range from="scanparse" to="typecheck" />
	  </phases>
	</attribute>
        <attribute name="SPMod" default="NULL" mandatory="no">
	  <type name="String" />
	  <phases>
	    <range from="scanparse" to="typecheck" />
	  </phases>
	</attribute>
	<attribute name="Avis" mandatory="yes" >
	  <type name="Link" >
	    <target>
	      <node name="Avis" />
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
        <attribute name="WL" mandatory="yes">
          <type name="Link">
            <target>
              <unknown />
            </target>
          </type>
          <phases>
            <range from="wli" to="wlf" />
          </phases>
        </attribute>
        <attribute name="ConstVec" mandatory="no">
          <type name="ConstVecPointer" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
        <attribute name="VecLen" mandatory="no">
          <type name="Integer" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
        <attribute name="VecType" mandatory="no">
          <type name="SimpleType" />
          <phases>
            <range from="flatten" to="final" />
          </phases>
        </attribute>
        <attribute name="NT_Tag" mandatory="yes">
          <type name="String" />
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
	<flag name="IsGlobal" />
	<flag name="IsReference" />
	<flag name="IsReadOnly" />
	<flag name="IsConst" />
      </flags>
    </node>
<!--

  N_num :

-->
    <node name="Num">
      <sons></sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_char :

-->
    <node name="Char">
      <sons></sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
          <type name="Char" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_float :

-->
    <node name="Float">
      <sons></sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
          <type name="Float" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_double :

-->
    <node name="Double">
      <sons></sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
          <type name="Double" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_bool :

-->
    <node name="Bool">
      <sons></sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
          <type name="Bool" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_str :

-->
    <node name="Str">
      <sons></sons>
      <attributes>
        <attribute name="String" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_prf :

-->
    <node name="Prf">
      <sons>
        <son name="Args" mandatory="yes">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Prf" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_dot :

-->
    <node name="Dot">
      <sons></sons>
      <attributes>
        <attribute name="Num" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_setwl :

-->
    <node name="SetWL">
      <sons>
        <son name="Ids" mandatory="yes">
          <target>
            <node name="Exprs" />
            <node name="Id" />
          </target>
        </son>
        <son name="Expr" mandatory="yes">
          <target>
            <set name="Expr" />
          </target>
        </son>
      </sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_empty :

-->
    <node name="Empty">
      <sons></sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_icm :

-->
    <node name="Icm">
      <sons>
        <son name="Args" mandatory="no">
          <target>
            <node name="Exprs" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Name" mandatory="yes">
          <type name="SharedString" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Indent_Before" default="0"
        mandatory="yes">
          <description>the default value has to be
          fixed!</description>
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Indent_After" default="0" mandatory="yes">
          <description>the default value has to be
          fixed!</description>
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Fundef" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="compile" to="free" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsEndOfStatement" />
      </flags>
    </node>
<!--

  N_pragma :

-->
    <node name="Pragma">
      <sons>
        <son name="ReadOnly" mandatory="no">
	  <target>
	    <node name="Nums" />
	  </target>
	</son>
	<son name="Refcounting" mandatory="no">
	  <target>
	    <node name="Nums" />
	  </target>
	</son>
	<son name="Effect" mandatory="no">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
	<son name="Touch" mandatory="no">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
	<son name="LinkSign" mandatory="no">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="LinkName" default="NULL" mandatory="no">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="LinkMod" default="NULL" mandatory="no">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="LinkObj" default="NULL" mandatory="no">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="WLComp_APS" default="NULL" mandatory="no">
          <type name="Link">
            <target>
              <node name="Exprs" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="APL" default="NULL" mandatory="no">
          <type name="Link">
            <target>
              <node name="Ap" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="NumParams" default="0" mandatory="no">
          <type name="Integer" />
          <phases>
            <all/>
          </phases>
        </attribute>
        <attribute name="InitFun" mandatory="no">
          <type name="String" />
          <phases>
            <range from="import" to="readsib" />
          </phases>
        </attribute>
        <attribute name="CopyFun" mandatory="no">
          <type name="String" />
          <phases>
            <range from="import" to="readsib" />
          </phases>
        </attribute>
        <attribute name="FreeFun" mandatory="no">
          <type name="String" />
          <phases>
            <range from="import" to="readsib" />
          </phases>
        </attribute>
       </attributes>
      <flags></flags>
    </node>
<!--

  N_cseinfo :

-->
    <node name="CSEinfo">
      <description>This node is not located in the AST, it is only
      used internally by CSE.</description>
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="CSEinfo" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Layer" mandatory="yes">
          <type name="Link">
            <target>
              <node name="CSEinfo" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Let" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Let" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_ssacnt :

-->
    <node name="SSAcnt">
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="SSAcnt" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Count" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="BaseId" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_ssastack :

-->
    <node name="SSAstack">
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="SSAstack" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Avis" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Avis" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="InUse" />
      </flags>
    </node>
<!--

  N_avis :

-->
    <node name="Avis">
      <sons></sons>
      <attributes>
        <attribute name="Decl" default="NULL" mandatory="yes">
          <type name="Link">
            <target>
              <node name="VarDec" />
              <node name="Arg" />
	      <node name="Objdef" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
	<attribute name="Name" mandatory="yes">
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
        <attribute name="Type" mandatory="no">
          <type name="NewType" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="SSACount" mandatory="yes">
          <type name="Link">
            <target>
              <node name="SSAcnt" />
            </target>
          </type>
          <phases>
            <range from="ssform" to="undossa" />
          </phases>
        </attribute>
        <attribute name="SSAAssign" mandatory="yes">
          <type name="DownLink">
            <target>
              <node name="Assign" />
            </target>
          </type>
          <phases>
            <range from="ssaform" to="undossa" />
          </phases>
        </attribute>
        <attribute name="SSAAssign2" mandatory="yes">
          <type name="DownLink">
            <target>
              <node name="Assign" />
            </target>
          </type>
          <phases>
            <range from="ssaform" to="undossa" />
          </phases>
        </attribute>
        <attribute name="SSAConst" mandatory="no">
          <type name="Constant" />
          <phases>
            <range from="cf" to="undossa" />
          </phases>
        </attribute>
        <attribute name="SSAstack"
        default="TBmakeSsastack(NULL, NULL)" mandatory="yes">
          <type name="Node">
            <target>
              <node name="SSAstack" />
            </target>
          </type>
          <phases>
            <range from="ssaform" to="undossa" />
          </phases>
        </attribute>
        <attribute name="WithId" default="NULL" mandatory="no">
          <type name="Link">
            <target>
              <node name="Nwithid" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="SSAThen" mandatory="no">
          <type name="DownLink">
            <target>
              <node name="Avis" />
            </target>
          </type>
          <phases>
            <phase name="ssaform" />
          </phases>
        </attribute>
        <attribute name="SSAElse" mandatory="no">
          <type name="DownLink">
            <target>
              <node name="Avis" />
            </target>
          </type>
          <phases>
            <phase name="ssaform" />
          </phases>
        </attribute>
        <attribute name="NeedCount" mandatory="no">
          <type name="Integer" />
          <phases>
            <phase name="SSALIR" />
            <phase name="SSADeadCodeRemoval" />
          </phases>
        </attribute>
        <attribute name="Subst" mandatory="no">
          <type name="DownLink">
            <target>
              <node name="Avis" />
            </target>
          </type>
          <phases>
            <phase name="ssacse" />
            <phase name="undossa" />
          </phases>
        </attribute>
        <attribute name="SubstUSSA" mandatory="no">
          <type name="DownLink">
            <target>
              <node name="Avis" />
            </target>
          </type>
          <phases>
            <phase name="undossa" />
          </phases>
        </attribute>
        <attribute name="SSAPhiTarget" mandatory="no">
          <type name="SSAPhi" />
          <phases>
            <phase name="undossa" />
          </phases>
        </attribute>
        <attribute name="DefDepth" mandatory="no">
          <type name="Integer" />
          <phases>
            <phase name="ssalir" />
          </phases>
        </attribute>
        <attribute name="LirMove" mandatory="no">
          <type name="BitField" />
          <phases>
            <phase name="ssalir" />
          </phases>
        </attribute>
        <attribute name="ExpResult" mandatory="no">
          <type name="Bool" />
          <phases>
            <phase name="ssalir" />
          </phases>
        </attribute>
        <attribute name="SelProp" mandatory="no">
          <type name="Integer" />
          <phases>
            <phase name="SelectionPropagation" />
          </phases>
        </attribute>
	<attribute name="EMRC_DefLevel" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <phase name="emmrc" />
	  </phases>
	</attribute>
	<attribute name="EMRC_Counter" mandatory="no">
	  <type name="RCCounter" />
	  <phases>
	    <phase name="emmrc" />
          </phases>
	</attribute>
	<attribute name="EMRC_Counter2" mandatory="no">
	  <type name="RCCounter" />
	  <phases>
	    <phase name="emmrc" />
	  </phases>
	</attribute>
	<attribute name="AliasMask" mandatory="no">
	  <type name="DFMask" />
	  <phases>
	    <phase name="interfaceanalysis" />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="SSAUndoFLag" />
        <flag name="SSADefined" />
        <flag name="SSALPINV" />
        <flag name="IsAlias" default="TRUE" />
	<flag name="IsUnique" />
        <flag name="IsDead" />
      </flags>
    </node>
<!--

  N_spmd :

-->
    <node name="Spmd">
      <sons>
        <son name="Region" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="In" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Out" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="InOut" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Local" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Shared" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Fundef" default="NULL" mandatory="yes">
          <type name="ExtLink">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="ICM_Begin" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
        <attribute name="ICM_Parallel" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Block" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
        <attribute name="ICM_AltSeq" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
        <attribute name="ICM_Sequential" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Block" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
        <attribute name="ICM_End" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Icm" />
            </target>
          </type>
          <phases>
            <range from="compile" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_sync :

-->
    <node name="Sync">
      <sons>
        <son name="Region" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="FoldCount" default="0" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="In" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Out" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="InOut" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="OutRep" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Local" default="NULL" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="With_Ptrs" mandatory="yes">
          <type name="Node">
            <target>
              <node name="Exprs" />
            </target>
          </type>
          <phases>
            <range from="syncinit" to="syncopt" />
            <range from="syncopt" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
         <flag name="First">
          <description>Flag whether the sync-region is the first
          one of the current SMPD-region</description>
         </flag>
         <flag name="Last">
          <description>Flag whether the sync-region is the last one
          of the current SMPD-region</description>
        </flag>
      </flags>
    </node>
<!--

  N_mt :

-->
    <node name="MT">
      <sons>
        <son name="Region" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Fundef" mandatory="yes">
          <type name="ExtLink">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <unknown />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_ex :

-->
    <node name="EX">
      <sons>
        <son name="Region" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_st :

-->
    <node name="ST">
      <sons>
        <son name="Region" mandatory="yes">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_with :

-->
    <node name="With">
      <sons>
        <son name="Part" mandatory="yes">
          <target>
            <node name="Part" />
          </target>
        </son>
        <son name="Code" mandatory="yes">
          <target>
            <node name="Code" />
          </target>
        </son>
        <son name="WithOp" mandatory="yes">
          <target>
            <set name="WithOp" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Parts" default="-1" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Pragma" mandatory="yes">
          <type name="Node" >
            <target>
              <node name="Pragma" />
            </target>
          </type>
          <phases>
            <range from="scanparse" to="wltransform" />
          </phases>
        </attribute>
        <attribute name="Referenced" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="wlt" to="wlf" />
          </phases>
        </attribute>
        <attribute name="Referenced_Fold" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="wlt" to="wlf" />
          </phases>
        </attribute>
        <attribute name="References_Folded" mandatory="yes">
          <type name="Integer" />
          <phases>
            <range from="wlt" to="wlf" />
          </phases>
        </attribute>
        <attribute name="In_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="wltransform" />
          </phases>
        </attribute>
        <attribute name="Out_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="wltransform" />
          </phases>
        </attribute>
        <attribute name="Local_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="wltransform" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsFoldable" />
	<flag name="IsDependent" />
      </flags>
    </node>
<!--

  N_part :

-->
    <node name="Part">
      <sons>
        <son name="WithId" mandatory="yes">
          <target>
            <node name="Withid" />
          </target>
        </son>
        <son name="Generator" mandatory="yes">
          <target>
            <node name="Generator" />
          </target>
        </son>
        <son name="Next" default="NULL" mandatory="no">
          <target>
            <node name="Part" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Code" mandatory="yes">
          <description>if present, the used counter for the code
          should be increased which is not done yet</description>
          <type name="Link">
            <target>
              <node name="Code" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsCopy" />
      </flags>
    </node>
<!--

  N_withid :

-->
    <node name="Withid">
      <sons>
        <son name="Vec" mandatory="yes">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
        <son name="Ids" mandatory="yes">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
      </sons>
      <attributes>
      </attributes>
      <flags>
        <flag name="VecNeeded" />
      </flags>
    </node>
<!--

  N_generator :

-->
    <node name="Generator">
      <sons>
        <son name="Bound1" mandatory="no">
          <target>
            <set name="Expr" />
	    <node name="Dot" />
          </target>
        </son>
        <son name="Bound2" mandatory="no">
          <target>
            <set name="Expr" />
	    <node name="Dot" />
          </target>
        </son>
        <son name="Step" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Width" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Op1" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Op2" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Op1_Orig" default="Op1" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Op2_Orig" default="Op2" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_code :

-->
    <node name="Code">
      <sons>
        <son name="CBlock" mandatory="no">
          <target>
            <node name="Block" />
          </target>
        </son>
        <son name="CExprs" mandatory="yes">
          <target>
            <node name="Exprs" />
          </target>
        </son>
        <son name="Next" default="NULL" mandatory="no">
          <target>
            <node name="Code" />
          </target>
        </son>
        <son name="Epilogue" default="NULL" mandatory="no">
          <target>
            <node name="Block" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Used" default="0" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Id" mandatory="yes">
          <type name="Integer" />
          <phases>
            <phase name="print" />
          </phases>
        </attribute>
        <attribute name="Use" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Vinfo" />
            </target>
          </type>
          <phases>
            <phase name="IVE" />
          </phases>
        </attribute>
        <attribute name="WLAA_Info" mandatory="yes">
          <type name="AccessInfo" />
          <phases>
            <range from="wlaa" to="final" />
          </phases>
        </attribute>
        <attribute name="TSI_TileShp" mandatory="yes">
          <type name="ShpSeg" />
          <phases>
            <range from="tli" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="Visited" />
        <flag name="HasResolveableDependencies" />
	<flag name="IsDummyCode" />
      </flags>
    </node>
<!--

  N_with2 :

-->
    <node name="With2">
      <sons>
        <son name="WithId" mandatory="yes">
          <target>
            <node name="Withid" />
          </target>
        </son>
        <son name="Segs" mandatory="yes">
          <target>
            <node name="WLseg" />
            <node name="WLsegVar" />
          </target>
        </son>
        <son name="Code" mandatory="yes">
          <target>
            <node name="Code" />
          </target>
        </son>
        <son name="WithOp" mandatory="yes">
          <target>
            <set name="WithOp" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Dims" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Pragma" default="NULL" mandatory="yes">
          <type name="Node" >
            <target>
              <node name="Pragma" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="In_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Out_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="Local_Mask" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="infer_dfms" to="final" />
          </phases>
        </attribute>
        <attribute name="ReUse" mandatory="yes">
          <type name="DFMask" />
          <phases>
            <range from="ReuseWithArrays" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="MT" />
	<flag name="NeedsOffset" />
	<flag name="CalcParallel" />
      </flags>
    </node>
<!--

  N_genarray :

-->
    <node name="Genarray">
      <description>withloop operation</description>
      <sons>
        <son name="Shape" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Default" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
	<son name="Mem" default="NULL" mandatory="no">
	  <target>
	    <node name="Id" />
	  </target>
	</son>
        <son name="Next" default="NULL" mandatory="no">
          <target>
            <set name="WithOp" />
          </target>
        </son>
      </sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_modarray :

-->
    <node name="Modarray">
      <description>withloop operation</description>
      <sons>
        <son name="Array" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
	<son name="Mem" default="NULL" mandatory="no">
	  <target>
	    <node name="Id" />
	  </target>
	</son>
        <son name="Next" default="NULL" mandatory="no">
          <target>
            <set name="WithOp" />
          </target>
        </son>
      </sons>
      <attributes></attributes>
      <flags></flags>
    </node>
<!--

  N_fold :

-->
    <node name="Fold">
      <description>withloop operation</description>
      <sons>
        <son name="Neutral" mandatory="no">
          <target>
            <set name="Expr" />
          </target>
        </son>
        <son name="Next" default="NULL" mandatory="no">
          <target>
            <set name="WithOp" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Fun" default="NULL" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Mod" default="NULL" mandatory="yes">
          <type name="SharedString" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Prf" default="0" mandatory="yes">
          <type name="Prf" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Fundef" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Fundef" />
            </target>
          </type>
          <phases>
            <range from="typecheck" to="precompile" />
            <range from="precompile" to="compile" />
            <range from="compile" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlseg :

-->
    <node name="WLseg">
      <sons>
        <son name="Contents" mandatory="yes">
          <target>
            <node name="WLblock" />
            <node name="WLublock" />
            <node name="WLstride" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLseg" />
            <node name="WLsegVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Dims" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Idx_Min" default="NULL" mandatory="yes">
          <type name="IntegerPointer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Idx_Max" default="NULL" mandatory="yes">
          <type name="IntegerPointer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="UBV" default="NULL" mandatory="yes">
          <type name="IntegerPointer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Blocks" default="0" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="BV" default="NULL" mandatory="yes">
          <type name="IntegerPointerArray" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="SV" default="NULL" mandatory="yes">
          <type name="IntegerPointer" />
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
        <attribute name="HomSV" mandatory="yes">
          <type name="IntegerPointer" />
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
        <attribute name="Scheduling" mandatory="yes">
          <type name="Scheduling" />
          <phases>
            <range from="wltransfrom" to="final" />
          </phases>
        </attribute>
        <attribute name="TaskSel" mandatory="yes">
          <type name="TaskSel" />
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlsegvar :

-->
    <node name="WLsegVar">
      <sons>
        <son name="Contents" mandatory="yes">
          <target>
            <node name="WLstride" />
            <node name="WLstrideVar" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLseg" />
            <node name="WLsegVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Dims" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Idx_Min" default="NULL" mandatory="yes">
          <type name="NodePointer">
            <target>
              <node name="Num" />
              <node name="Id" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Idx_Max" default="NULL" mandatory="yes">
          <type name="NodePointer">
            <target>
              <node name="Num" />
              <node name="Id" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Scheduling" mandatory="yes">
          <type name="Scheduling" />
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
        <attribute name="TaskSel" mandatory="yes">
          <type name="TaskSel" />
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlblock :

-->
    <node name="WLblock">
      <sons>
        <son name="NextDim" mandatory="no">
          <target>
            <node name="WLblock" />
          </target>
        </son>
        <son name="Contents" mandatory="no">
          <target>
            <node name="WLublock" />
            <node name="WLstride" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLblock" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound1" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound2" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Step" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlublock :

-->
    <node name="WLublock">
      <sons>
        <son name="NextDim" mandatory="no">
          <target>
            <node name="WLublock" />
          </target>
        </son>
        <son name="Contents" mandatory="no">
          <target>
            <node name="WLstride" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLublock" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound1" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound2" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Step" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlstride :

-->
    <node name="WLstride">
      <sons>
        <son name="Contents" mandatory="yes">
          <target>
            <node name="WLgrid" />
            <node name="WLgridVar" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLstride" />
            <node name="WLstrideVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound1" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound2" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Step" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Part" mandatory="yes">
          <type name="Link">
            <target>
              <node name="Part" />
            </target>
          </type>
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
        <attribute name="Modified" mandatory="yes">
          <type name="Link">
            <target>
              <unknown />
            </target>
          </type>
          <phases>
            <range from="wltransform" to="final" />
          </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="DoUnroll" />
      </flags>
    </node>
<!--

  N_wlstridevar :

-->
    <node name="WLstrideVar">
      <sons>
        <son name="Bound1" mandatory="yes">
          <target>
            <node name="Num" />
            <node name="Id" />
          </target>
        </son>
        <son name="Bound2" mandatory="yes">
          <target>
            <node name="Num" />
            <node name="Id" />
          </target>
        </son>
        <son name="Step" mandatory="yes">
          <target>
            <node name="Num" />
            <node name="Id" />
          </target>
        </son>
        <son name="Contents" mandatory="yes">
          <target>
            <node name="WLgrid" />
            <node name="WLgridVar" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLstride" />
            <node name="WLstrideVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_wlgrid :

-->
    <node name="WLgrid">
      <sons>
        <son name="NextDim" mandatory="no">
          <target>
            <node name="WLblock" />
            <node name="WLublock" />
            <node name="WLstride" />
            <node name="WLstrideVar" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLgrid" />
            <node name="WLgridVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound1" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Bound2" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Modified" mandatory="yes">
          <type name="Node">
            <target>
              <unknown />
            </target>
          </type>
          <phases>
            <phase name="wltransform" />
          </phases>
        </attribute>
        <attribute name="Code" mandatory="no">
	  <type name="Link">
            <target>
              <node name="Code" />
            </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsFitted" />
        <flag name="DoUnroll" />
        <flag name="IsNoOp" />
      </flags>
    </node>
<!--

  N_wlgridvar :

-->
    <node name="WLgridVar">
      <sons>
        <son name="Bound1" mandatory="yes">
          <target>
            <node name="Num" />
            <node name="Id" />
          </target>
        </son>
        <son name="Bound2" mandatory="yes">
          <target>
            <node name="Num" />
            <node name="Id" />
          </target>
        </son>
        <son name="NextDim" mandatory="no">
          <target>
            <node name="WLstride" />
            <node name="WLstrideVar" />
          </target>
        </son>
        <son name="Next" mandatory="no">
          <target>
            <node name="WLgrid" />
            <node name="WLgridVar" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Level" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Dim" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Code" mandatory="no">
	  <type name="Link">
            <target>
              <node name="Code" />
            </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
        </attribute>
      </attributes>
      <flags>
        <flag name="IsFitted" />
        <flag name="DoUnroll" />
        <flag name="IsNoOp" />
      </flags>
    </node>
<!--

  N_cwrapper :

-->
    <node name="CWrapper">
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="CWrapper" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Funs" mandatory="yes">
          <type name="NodeList" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Name" mandatory="yes">
          <type name="String" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="Mod" mandatory="yes">
          <type name="SharedString" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="ArgCount" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
        <attribute name="ResCount" mandatory="yes">
          <type name="Integer" />
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_dataflownode :

-->
    <node name="Dataflownode">
      <sons></sons>
      <attributes>
	<attribute name="Graph" mandatory="yes">
	  <type name="Link">
	    <target>
	      <node name="Dataflowgraph"/>
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="Assign" mandatory="no">
	  <type name="Link">
	    <target>
	      <node name="Assign" />
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="Name" mandatory="no">
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
        <attribute name="Dependent" default="NULL" mandatory="no">
	  <type name="NodeList" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
        <attribute name="UsedNodes" default="NULL" mandatory="no">
	  <type name="NodeList" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="RefCount" default="1" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="ExecMode" default="MUTH_ANY" mandatory="yes">
	  <type name="MTExecMode" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="DFGThen" default="NULL" mandatory="no">
	  <type name="Link">
	    <target>
	      <node name="Block" />
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="DFGElse" default="NULL" mandatory="no">
	  <type name="Link">
	    <target>
	      <node name="Block" />
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="RefLeft" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <phase name="AssignmentsRearrange" />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="IsUsed" />
      </flags>
    </node>
<!--

  N_dataflowgraph :

-->
    <node name="Dataflowgraph">
      <sons></sons>
      <attributes>
        <attribute name="Members" default="NULL" mandatory="yes">
	  <type name="NodeList" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="Source" default="NULL" mandatory="yes">
	  <type name="Node">
	    <target>
	      <node name="Dataflownode"/>
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="Sink" default="NULL" mandatory="yes">
	  <type name="Node">
	    <target>
	      <node name="Dataflownode"/>
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="MyHomeDFN" default="NULL" mandatory="no">
	  <type name="Node">
	    <target>
	      <node name="Dataflownode"/>
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_import :

-->
    <node name="Import">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <set name="Interface" />
	  </target>
	</son>
	<son name="Symbol" mandatory="no">
	  <target>
	    <node name="Symbol" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="Mod" mandatory="yes">
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="All" />
      </flags>
    </node>
<!--

  N_export :

-->
    <node name="Export">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <set name="Interface" />
	  </target>
	</son>
	<son name="Symbol" mandatory="no">
	  <target>
	    <node name="Symbol" />
	  </target>
	</son>
      </sons>
      <attributes>
      </attributes>
      <flags>
        <flag name="All" />
      </flags>
    </node>
<!--

  N_use :

-->
    <node name="Use">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <set name="Interface" />
	  </target>
	</son>
	<son name="Symbol" mandatory="no">
	  <target>
	    <node name="Symbol" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="Mod" mandatory="yes">
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="All" />
      </flags>
    </node>
<!--

  N_provide :

-->
    <node name="Provide">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <set name="Interface" />
	  </target>
	</son>
	<son name="Symbol" mandatory="no">
	  <target>
	    <node name="Symbol" />
	  </target>
	</son>
      </sons>
      <attributes>
      </attributes>
      <flags>
        <flag name="All" />
      </flags>
    </node>
<!--

  N_symbol :

-->
    <node name="Symbol">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <node name="Symbol" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="Id" mandatory="yes">
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_linklist :

-->
    <node name="Linklist">
      <sons>
        <son name="Next" mandatory="no">
          <target>
            <node name="Linklist" />
          </target>
        </son>
      </sons>
      <attributes>
        <attribute name="Link" mandatory="yes" >
          <type name="ExtLink" >
            <target>
              <node name="Objdef" />
            </target>
          </type>
          <phases>
            <all />
          </phases>
        </attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_ret :

-->
    <node name="Ret">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <node name="Ret" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="Type" mandatory="yes">
	  <type name="NewType" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags>
        <flag name="IsAliasing" default="TRUE" />
        <flag name="IsArtificial" />
        <flag name="IsRefcounted" default="TRUE" />
      </flags>
    </node>
<!--

  N_ids :

-->
    <node name="Ids">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <node name="Ids" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="SPName" default="NULL" mandatory="no" >
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="SPMod" default="NULL" mandatory="no" >
	  <type name="String" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
	<attribute name="Avis" mandatory="yes" >
	  <type name="Link">
	    <target>
	      <node name="Avis" />
	    </target>
	  </type>
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags></flags>
    </node>
<!--

  N_nums :

-->
    <node name="Nums">
      <sons>
        <son name="Next" mandatory="no">
	  <target>
	    <node name="Nums" />
	  </target>
	</son>
      </sons>
      <attributes>
        <attribute name="Val" mandatory="yes">
	  <type name="Integer" />
	  <phases>
	    <all />
	  </phases>
	</attribute>
      </attributes>
      <flags>
      </flags>
    </node>
  </syntaxtree>
</definition>
