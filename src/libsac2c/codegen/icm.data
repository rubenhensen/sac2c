/*
 * $Id$
 */


/*
 * ATTENTION!!
 * Same variable names within different ICM-argument specifications should be
 * of the same type even if they are in different ICM-specifications!!!!
 * The reason for this restriction lies in the usage of static variables for
 * them in icm2c.c and BEtest.c which has to be made in order to spare a second
 * traversal of icm.data (-> icm2c.c!).
 */

#if defined(ND_FUN_DEC) || defined(ICM_ALL)
ICM_DEF( ND_FUN_DEC, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_DEC, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(ND_THREAD_FUN_DEC) || defined(ICM_ALL)
ICM_DEF( ND_THREAD_FUN_DEC, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_THREAD_FUN_DEC, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_AP) || defined(ICM_ALL)
ICM_DEF( ND_FUN_AP, ICM_TRACE(fun))
  ICM_ID( name)
  ICM_ID( retname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( ND_FUN_AP, (name, retname, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_RET) || defined(ICM_ALL)
ICM_DEF( ND_FUN_RET, ICM_TRACE(fun))
  ICM_ID( retname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_RET, (retname, vararg_cnt, vararg))
#endif


#if defined(ND_OBJDEF) || defined(ICM_ALL)
ICM_DEF( ND_OBJDEF, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_OBJDEF, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_OBJDEF_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_OBJDEF_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
ICM_END( ND_OBJDEF_EXTERN, (var_NT, basetype, sdim))
#endif

#if defined(ND_DECL) || defined(ICM_ALL)
ICM_DEF( ND_DECL, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_DECL_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_DECL_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
ICM_END( ND_DECL_EXTERN, (var_NT, basetype, sdim))
#endif

/* ND_DECL__DESC( ...) is a H-ICM */

/* ND_DECL__DATA( ...) is a H-ICM */

#if defined(ND_DECL__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL__MIRROR, (var_NT, sdim, shp))
#endif

#if defined(ND_DECL__MIRROR_PARAM) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR_PARAM, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL__MIRROR_PARAM, (var_NT, sdim, shp))
#endif

#if defined(ND_DECL__MIRROR_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
ICM_END( ND_DECL__MIRROR_EXTERN, (var_NT, sdim))
#endif


#if defined(ND_CHECK_REUSE) || defined(ICM_ALL)
ICM_DEF( ND_CHECK_REUSE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_CHECK_REUSE, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

/* ND_ALLOC( ...) is a H-ICM */

/* ND_ALLOC__DESC( ...) is a H-ICM */

/* ND_ALLOC__DATA( ...) is a H-ICM */


/* ND_SET__RC( ...) is a H-ICM */

#if defined(ND_SET__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_SET__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
ICM_END( ND_SET__SHAPE_id, (to_NT, to_sdim, shp_NT))
#endif

#if defined(ND_SET__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_SET__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( dim)
  ICM_VARANY( dim, shp_ANY)
ICM_END( ND_SET__SHAPE_arr, (to_NT, dim, shp_ANY))
#endif


#if defined(ND_REFRESH__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_REFRESH__MIRROR, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
ICM_END( ND_REFRESH__MIRROR, (var_NT, sdim))
#endif


#if defined(ND_ASSIGN) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_ASSIGN, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

#if defined(ND_ASSIGN__DESC) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN__DESC, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
ICM_END( ND_ASSIGN__DESC, (to_NT, from_NT))
#endif

#if defined(ND_ASSIGN__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_ASSIGN__SHAPE, (to_NT, to_sdim, from_NT, from_sdim))
#endif

/* ASSIGN__DATA( ...) is a H-ICM */

#if defined(ND_UPDATE__DESC) || defined(ICM_ALL)
ICM_DEF( ND_UPDATE__DESC, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_UPDATE__DESC, (to_NT, to_sdim, from_NT, from_sdim))
#endif

#if defined(ND_UPDATE__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_UPDATE__MIRROR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_UPDATE__MIRROR, (to_NT, to_sdim, from_NT, from_sdim))
#endif


#if defined(ND_COPY) || defined(ICM_ALL)
ICM_DEF( ND_COPY, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_COPY, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

#if defined(ND_COPY__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_COPY__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_COPY__SHAPE, (to_NT, to_sdim, from_NT, from_sdim))
#endif

/* COPY__DATA( ...) is a H-ICM */

#if defined(ND_MAKE_UNIQUE) || defined(ICM_ALL)
ICM_DEF( ND_MAKE_UNIQUE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_MAKE_UNIQUE, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif


#if defined(ND_CREATE__ARRAY__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_CREATE__ARRAY__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( dim)
  ICM_VARINT( dim, shp)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
  ICM_INT( val0_sdim)
ICM_END( ND_CREATE__ARRAY__SHAPE, (to_NT, to_sdim, dim, shp,
                                   val_size, vals_ANY, val0_sdim))
#endif

#if defined(ND_CREATE__ARRAY__DATA) || defined(ICM_ALL)
ICM_DEF( ND_CREATE__ARRAY__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
  ICM_ID( copyfun)
ICM_END( ND_CREATE__ARRAY__DATA, (to_NT, to_sdim, val_size, vals_ANY, copyfun))
#endif


#if defined(ND_PRF_SHAPE_A__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SHAPE_A__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_PRF_SHAPE_A__DATA, (to_NT, to_sdim, from_NT, from_sdim))
#endif

#if defined(ND_PRF_RESHAPE_VxA__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_RESHAPE_VxA__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
ICM_END( ND_PRF_RESHAPE_VxA__SHAPE_id, (to_NT, to_sdim, shp_NT))
#endif

#if defined(ND_PRF_RESHAPE_VxA__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_RESHAPE_VxA__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_PRF_RESHAPE_VxA__SHAPE_arr, (to_NT, to_sdim, shp_size, shp_ANY))
#endif

#if defined(ND_PRF_SEL_VxA__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
ICM_END( ND_PRF_SEL_VxA__SHAPE_id, (to_NT, to_sdim, from_NT, from_sdim, idx_NT))
#endif

#if defined(ND_PRF_SEL_VxA__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
ICM_END( ND_PRF_SEL_VxA__SHAPE_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                         idx_size, idxs_ANY))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                 idx_NT, idx_size, copyfun))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                  idx_size, idxs_ANY, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxS__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxS__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxS__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_NT, idx_size, val_scalar, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxS__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxS__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxS__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_size, idxs_ANY, val_scalar, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxA__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxA__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxA__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_NT, idx_size, val_array, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxA__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxA__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxA__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_size, idxs_ANY, val_array, copyfun))
#endif

#if defined(ND_PRF_IDX_SEL__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SEL__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
ICM_END( ND_PRF_IDX_SEL__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, idx_ANY))
#endif

#if defined(ND_PRF_IDX_SEL__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SEL__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_SEL__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                idx_ANY, copyfun))
#endif

#if defined(ND_PRF_IDX_SHAPE_SEL__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SHAPE_SEL__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
ICM_END( ND_PRF_IDX_SHAPE_SEL__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                          	      idx_ANY))
#endif

#if defined(ND_PRF_IDX_MODARRAY_AxSxS__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_MODARRAY_AxSxS__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_MODARRAY_AxSxS__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_ANY, val_scalar, copyfun))
#endif

#if defined(ND_PRF_IDX_MODARRAY_AxSxA__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_MODARRAY_AxSxA__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_MODARRAY_AxSxA__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                           idx_ANY, val_array, copyfun))
#endif

#if defined(ND_PRF_TAKE_SxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TAKE_SxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
ICM_END( ND_PRF_TAKE_SxV__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY))
#endif

#if defined(ND_PRF_TAKE_SxV__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TAKE_SxV__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_TAKE_SxV__DATA, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY,
                                   copyfun))
#endif

#if defined(ND_PRF_DROP_SxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_DROP_SxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
ICM_END( ND_PRF_DROP_SxV__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY))
#endif

#if defined(ND_PRF_DROP_SxV__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_DROP_SxV__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_DROP_SxV__DATA, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY,
                                  copyfun))
#endif

#if defined(ND_PRF_CAT_VxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_CAT_VxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from1_NT)
  ICM_INT( from1_sdim)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_CAT_VxV__SHAPE, (to_NT, to_sdim,
                                   from1_NT, from1_sdim, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_TYPE_CONSTRAINT_AKS) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TYPE_CONSTRAINT_AKS, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_INT( dim)
  ICM_VARINT( dim, shp)  
ICM_END( ND_PRF_TYPE_CONSTRAINT_AKS, (to_NT, from_NT, dim, shp))
#endif

#if defined(ND_PRF_SAME_SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SAME_SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_SAME_SHAPE, (to_NT, from_NT, from_sdim, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_VAL_LT_SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_VAL_LT_SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_VAL_LT_SHAPE, (to_NT, from_NT, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_PROD_MATCHES_PROD_SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROD_MATCHES_PROD_SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_PROD_MATCHES_PROD_SHAPE, (to_NT, from_NT, from2_NT, from2_sdim))
#endif


#if defined(ND_VECT2OFFSET_arr) || defined(ICM_ALL)
ICM_DEF( ND_VECT2OFFSET_arr, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( from_size)
  ICM_NT( from_NT)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_VECT2OFFSET_arr, (off_NT, from_size, from_NT, shp_size, shp_ANY))
#endif

#if defined(ND_VECT2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_VECT2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( from_size)
  ICM_NT( from_NT)
  ICM_INT( shp_size)
  ICM_NT( shp_NT)
ICM_END( ND_VECT2OFFSET_id, (off_NT, from_size, from_NT, shp_size, shp_NT))
#endif

#if defined(ND_IDXS2OFFSET_arr) || defined(ICM_ALL)
ICM_DEF( ND_IDXS2OFFSET_arr, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( idxs_size)
  ICM_VARANY( idxs_size, idxs_ANY)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_IDXS2OFFSET_arr, (off_NT, idxs_size, idxs_ANY, shp_size, shp_ANY))
#endif

#if defined(ND_IDXS2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_IDXS2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( idxs_size)
  ICM_VARANY( idxs_size, idxs_ANY)
  ICM_INT( shp_size)
  ICM_NT( shp_NT)
ICM_END( ND_IDXS2OFFSET_id, (off_NT, idxs_size, idxs_ANY, shp_size, shp_NT))
#endif


/*
 * ICMs for compilation of new with-loop
 */

#if defined(ND_WL_GENARRAY__SHAPE_id_arr) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_id_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
ICM_END( ND_WL_GENARRAY__SHAPE_id_arr, (to_NT, to_sdim, shp_NT, 
                                        val_size, vals_ANY))
#endif

#if defined(ND_WL_GENARRAY__SHAPE_id_id) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_id_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
ICM_END( ND_WL_GENARRAY__SHAPE_id_id, (to_NT, to_sdim, shp_NT, val_NT, val_sdim))
#endif

#if defined(ND_WL_GENARRAY__SHAPE_arr_id) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_arr_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
ICM_END( ND_WL_GENARRAY__SHAPE_arr_id, (to_NT, to_sdim, shp_size, shp_ANY,
                                        val_NT, val_sdim))
#endif

#if defined(WL_SCHEDULE__BEGIN) || defined(ICM_ALL)
ICM_DEF( WL_SCHEDULE__BEGIN, ICM_TRACE_NONE)
  ICM_INT( dims)
ICM_END( WL_SCHEDULE__BEGIN, ( dims))
#endif

#if defined(WL_DECLARE_SHAPE_FACTOR) || defined(ICM_ALL)
ICM_DEF( WL_DECLARE_SHAPE_FACTOR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_DECLARE_SHAPE_FACTOR, (to_NT, to_sdim, idx_vec_NT, dims))
#endif

#if defined(WL_DEFINE_SHAPE_FACTOR) || defined(ICM_ALL)
ICM_DEF( WL_DEFINE_SHAPE_FACTOR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_DEFINE_SHAPE_FACTOR, (to_NT, to_sdim, idx_vec_NT, dims))
#endif

#if defined(WL_SCHEDULE__END) || defined(ICM_ALL)
ICM_DEF( WL_SCHEDULE__END, ICM_TRACE_NONE)
  ICM_INT( dims)
ICM_END( WL_SCHEDULE__END, ( dims))
#endif

#if defined(WL_SUBALLOC) || defined(ICM_ALL)
ICM_DEF( WL_SUBALLOC, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_NT( to_NT)
  ICM_NT( off_NT)
ICM_END( WL_SUBALLOC, (sub_NT, to_NT, off_NT))
#endif

#if defined(WL_ASSIGN) || defined(ICM_ALL)
ICM_DEF( WL_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_NT( off_NT)
  ICM_ID( copyfun)
ICM_END( WL_ASSIGN, (val_NT, val_sdim, to_NT, to_sdim,
                     idx_vec_NT, dims, off_NT, copyfun ))
#endif

#if defined(WL_MODARRAY_SUBSHAPE) || defined(ICM_ALL)
ICM_DEF( WL_MODARRAY_SUBSHAPE, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_NT( idx_NT)
  ICM_INT( dims)
  ICM_NT( to_NT)
ICM_END( WL_MODARRAY_SUBSHAPE, (sub_NT, idx_NT, dims, to_NT))
#endif

#if defined(WL_FOLD) || defined(ICM_ALL)
ICM_DEF( WL_FOLD, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_FOLD, (to_NT, to_sdim, idx_vec_NT, dims, idxs_scl_NT))
#endif

#if defined(WL_INIT_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_INIT_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_INIT_OFFSET, (off_NT, to_NT, to_sdim, idx_vec_NT, dims))
#endif


#if defined(WL_ADJUST_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_ADJUST_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_INT( dim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_ADJUST_OFFSET, (off_NT, dim, to_NT, to_sdim, idx_vec_NT, dims, idxs_scl_NT))
#endif

#if defined(WL_SET_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_SET_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_INT( dim)
  ICM_INT( first_block_dim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_SET_OFFSET, (off_NT, dim, first_block_dim, to_NT, to_sdim,
                         idx_vec_NT, dims, idxs_scl_NT))
#endif

#if defined(WL_SIMD_BEGIN) || defined(ICM_ALL)
ICM_DEF( WL_SIMD_BEGIN, ICM_TRACE_NONE)
  ICM_INT( cnt)
ICM_END( WL_SIMD_BEGIN, ( cnt))
#endif

#if defined(WL_SIMD_END) || defined(ICM_ALL)
ICM_DEF( WL_SIMD_END, ICM_TRACE_NONE)
  ICM_INT( cnt)
ICM_END( WL_SIMD_END, ( cnt))
#endif



/*
 * ICMs for compilation of multi-threaded applications
 */

#if defined(MT_SPMD_FUN_DEC) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_FUN_DEC, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_FUN_DEC, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_FUN_RET) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_FUN_RET, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_FUN_RET, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_FUN_AP) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_FUN_AP, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( MT_SPMD_FUN_AP, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_FRAME_ELEMENT) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_FRAME_ELEMENT, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_FRAME_ELEMENT, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_BARRIER_ELEMENT) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_BARRIER_ELEMENT, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_BARRIER_ELEMENT, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_CREATE_LOCAL_DESC) || defined(ICM_ALL)
ICM_DEF( MT_CREATE_LOCAL_DESC, ICM_TRACE_NONE)
  ICM_ID( var_NT)
  ICM_INT( dim)
ICM_END( MT_CREATE_LOCAL_DESC, (var_NT, dim))
#endif




/*
 *  Probably obsolete
 */

#if 0

#if defined(MT_SYNCBLOCK_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SYNCBLOCK_BEGIN, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SYNCBLOCK_BEGIN, (barrier_id, vararg_cnt, vararg))
#endif

#if defined(MT_SYNCBLOCK_CLEANUP) || defined(ICM_ALL)
ICM_DEF( MT_SYNCBLOCK_CLEANUP, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SYNCBLOCK_CLEANUP, (barrier_id, vararg_cnt, vararg))
#endif

#if defined(MT_SYNCBLOCK_END) || defined(ICM_ALL)
ICM_DEF( MT_SYNCBLOCK_END, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SYNCBLOCK_END, (barrier_id, vararg_cnt, vararg))
#endif

#if defined(MT_SYNC_NONFOLD) || defined(ICM_ALL)
ICM_DEF( MT_SYNC_NONFOLD, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
ICM_END( MT_SYNC_NONFOLD, (barrier_id))
#endif

#if defined(MT_SYNC_FOLD) || defined(ICM_ALL)
ICM_DEF( MT_SYNC_FOLD, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( MT_SYNC_FOLD, (barrier_id, vararg_cnt, vararg))
#endif

#if defined(MT_SYNC_ONEFOLD) || defined(ICM_ALL)
ICM_DEF( MT_SYNC_ONEFOLD, ICM_TRACE_NONE)
  ICM_INT( barrier_id)
  ICM_ID( foldtype)
  ICM_ID( accu_var)
  ICM_ID( tmp_var)
  ICM_ID( foldop)
ICM_END( MT_SYNC_ONEFOLD, (barrier_id, foldtype, accu_var, tmp_var, foldop))
#endif

#if defined(MT_SYNC_ONEFOLD_NONFOLD) || defined(ICM_ALL)
ICM_DEF( MT_SYNC_ONEFOLD_NONFOLD, ICM_TRACE_NONE)
  ICM_ID( foldtype)
  ICM_ID( accu_var)
  ICM_ID( tmp_var)
  ICM_ID( foldop)
ICM_END( MT_SYNC_ONEFOLD_NONFOLD, (foldtype, accu_var, tmp_var, foldop))
#endif

#if defined(MT_SYNC_FOLD_NONFOLD) || defined(ICM_ALL)
ICM_DEF( MT_SYNC_FOLD_NONFOLD, ICM_TRACE_NONE)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( MT_SYNC_FOLD_NONFOLD, (vararg_cnt, vararg))
#endif

#if defined(MT_MASTER_SEND_FOLDRESULTS) || defined(ICM_ALL)
ICM_DEF( MT_MASTER_SEND_FOLDRESULTS, ICM_TRACE_NONE)
  ICM_INT( foldargs_cnt)
  ICM_VARANY( (2*foldargs_cnt), foldargs)
ICM_END( MT_MASTER_SEND_FOLDRESULTS, (foldargs_cnt, foldargs))
#endif

#if defined(MT_MASTER_RECEIVE_FOLDRESULTS) || defined(ICM_ALL)
ICM_DEF( MT_MASTER_RECEIVE_FOLDRESULTS, ICM_TRACE_NONE)
  ICM_INT( foldargs_cnt)
  ICM_VARANY( (2*foldargs_cnt), foldargs)
ICM_END( MT_MASTER_RECEIVE_FOLDRESULTS, (foldargs_cnt, foldargs))
#endif

#if defined(MT_MASTER_SEND_SYNCARGS) || defined(ICM_ALL)
ICM_DEF( MT_MASTER_SEND_SYNCARGS, ICM_TRACE_NONE)
  ICM_INT( syncargs_cnt)
  ICM_VARANY( syncargs_cnt, syncargs)
ICM_END( MT_MASTER_SEND_SYNCARGS, (syncargs_cnt, syncargs))
#endif

#if defined(MT_MASTER_RECEIVE_SYNCARGS) || defined(ICM_ALL)
ICM_DEF( MT_MASTER_RECEIVE_SYNCARGS, ICM_TRACE_NONE)
  ICM_INT( syncargs_cnt)
  ICM_VARANY( syncargs_cnt, syncargs)
ICM_END( MT_MASTER_RECEIVE_SYNCARGS, (syncargs_cnt, syncargs))
#endif

#if defined(MT_SPMD_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
ICM_END( MT_SPMD_BEGIN, (name))
#endif

#if defined(MT_SPMD_ALTSEQ) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_ALTSEQ, ICM_TRACE_NONE)
  ICM_ID( name)
ICM_END( MT_SPMD_ALTSEQ, (name))
#endif

#if defined(MT_SPMD_STATIC_MODE_END) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_END, ICM_TRACE_NONE)
  ICM_ID( name)
ICM_END( MT_SPMD_END, (name))
#endif


#if defined(MT_SPMD_SETUP) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_SETUP, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_SETUP, (name, vararg_cnt, vararg))
#endif



#endif



/*
 * ICMs for implementing scheduling strategies
 */

#if defined(MT_SCHEDULER_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Block_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Block_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Block_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_BlockVar_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVar_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVar_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Static_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_BEGIN, (sched_id, ts_name,
                                     ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Static_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_END, (sched_id, ts_name,
                                   ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Static_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_INIT, (sched_id, ts_name,
                                    ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Self_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_BEGIN, (sched_id, first_task, ts_name,
                                   ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Self_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_END, (sched_id, first_task, ts_name,
                                 ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Self_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_INIT, (sched_id, first_task, ts_name,
                                  ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Affinity_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_BEGIN, (sched_id, ts_name, ts_dims,
                                       ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Affinity_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_END, (sched_id, ts_name, ts_dims,
                                     ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Affinity_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_INT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_INIT, (sched_id, ts_name, ts_dims,
                                      ts_arg_num, ts_args, dim, vararg))
#endif


#if defined(DISPATCH_ERROR) || defined(ICM_ALL)
ICM_DEF( DISPATCH_ERROR, ICM_TRACE_NONE)
  ICM_INT( cnt_to)
  ICM_VARANY( (cnt_to), to_ANY)
  ICM_STR( funname)
  ICM_INT( cnt_from)
  ICM_VARANY( (cnt_from), from_ANY)
ICM_END( DISPATCH_ERROR, (cnt_to, to_ANY, funname, cnt_from, from_ANY))
#endif

#if defined(ND_PRF_PROP_OBJ_IN) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROP_OBJ_IN, ICM_TRACE_NONE)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( ND_PRF_PROP_OBJ_IN, (vararg_cnt, vararg))
#endif

#if defined(ND_PRF_PROP_OBJ_OUT) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROP_OBJ_OUT, ICM_TRACE_NONE)
  ICM_INT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( ND_PRF_PROP_OBJ_OUT, (vararg_cnt, vararg))
#endif

