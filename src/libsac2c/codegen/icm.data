/*
 * ATTENTION!!
 * Same variable names within different ICM-argument specifications should be
 * of the same type even if they are in different ICM-specifications!!!!
 * The reason for this restriction lies in the usage of static variables for
 * them in icm2c.c and BEtest.c which has to be made in order to spare a second
 * traversal of icm.data (-> icm2c.c!).
 */

#if defined(ND_FUN_DECL) || defined(ICM_ALL)
ICM_DEF( ND_FUN_DECL, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_DECL, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(ND_DISTMEM_FUN_DECL_WITH_SIDE_EFFECTS) || defined(ICM_ALL)
ICM_DEF( ND_DISTMEM_FUN_DECL_WITH_SIDE_EFFECTS, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_DISTMEM_FUN_DECL_WITH_SIDE_EFFECTS, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( ND_FUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_DEF_BEGIN, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_DEF_END) || defined(ICM_ALL)
ICM_DEF( ND_FUN_DEF_END, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_DEF_END, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MUTC_THREADFUN_DECL) || defined(ICM_ALL)
ICM_DEF( MUTC_THREADFUN_DECL, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_THREADFUN_DECL, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MUTC_SPAWNFUN_DECL) || defined(ICM_ALL)
ICM_DEF( MUTC_SPAWNFUN_DECL, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_SPAWNFUN_DECL, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MUTC_THREADFUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( MUTC_THREADFUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_THREADFUN_DEF_BEGIN, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MUTC_SPAWNFUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( MUTC_SPAWNFUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_SPAWNFUN_DEF_BEGIN, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(WE_FUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( WE_FUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( WE_FUN_DEF_BEGIN, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(WE_MODFUN_INFO) || defined(ICM_ALL)
ICM_DEF( WE_MODFUN_INFO, ICM_TRACE_NONE)
  ICM_STR( name)
  ICM_STR( modname)
ICM_END( WE_MODFUN_INFO, (name, modname))
#endif

#if defined(WE_SHAPE_ENCODE) || defined(ICM_ALL)
ICM_DEF( WE_SHAPE_ENCODE, ICM_TRACE_NONE)
  ICM_UINT( arg_cnt)
  ICM_VARANY( arg_cnt, arg)
ICM_END( WE_SHAPE_ENCODE, ( arg_cnt, arg))
#endif

#if defined(WE_NO_SHAPE_ENCODE) || defined(ICM_ALL)
ICM_DEF( WE_NO_SHAPE_ENCODE, ICM_TRACE_NONE)
  ICM_UINT( arg_cnt)
ICM_END( WE_NO_SHAPE_ENCODE, ( arg_cnt))
#endif

#if defined(WE_FUN_AP) || defined(ICM_ALL)
ICM_DEF( WE_FUN_AP, ICM_TRACE(fun))
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( WE_FUN_AP, (name, rettype_NT, retname, vararg_cnt, vararg))
#endif

#if defined(WE_FUN_DEF_END) || defined(ICM_ALL)
ICM_DEF( WE_FUN_DEF_END, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( WE_FUN_DEF_END, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(RTSPEC_FUN_AP) || defined(ICM_ALL)
ICM_DEF( RTSPEC_FUN_AP, ICM_TRACE(fun))
  ICM_ID( modname)
  ICM_ID( name)
  ICM_ID( srcname)
  ICM_ID( uuid)
  ICM_NT( rettype_NT)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (5*vararg_cnt), vararg)
ICM_END( RTSPEC_FUN_AP, (modname, name, srcname, uuid, rettype_NT, retname, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_AP) || defined(ICM_ALL)
ICM_DEF( ND_FUN_AP, ICM_TRACE(fun))
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_AP, (name, retname, vararg_cnt, vararg))
#endif

#if defined(ND_DISTMEM_FUN_AP_WITH_SIDE_EFFECTS) || defined(ICM_ALL)
ICM_DEF( ND_DISTMEM_FUN_AP_WITH_SIDE_EFFECTS, ICM_TRACE(fun))
  ICM_UINT( vararg_NT_cnt) 
  ICM_VARANY( (vararg_NT_cnt), vararg_NT)
  ICM_ID( rettype)
  ICM_NT( ret_NT)
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_DISTMEM_FUN_AP_WITH_SIDE_EFFECTS, (vararg_NT_cnt, vararg_NT, rettype, ret_NT, name, retname, vararg_cnt, vararg))
#endif

#if defined(MUTC_THREADFUN_AP) || defined(ICM_ALL)
ICM_DEF( MUTC_THREADFUN_AP, ICM_TRACE(fun))
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_THREADFUN_AP, (name, retname, vararg_cnt, vararg))
#endif

#if defined(MUTC_SPAWNFUN_AP) || defined(ICM_ALL)
ICM_DEF( MUTC_SPAWNFUN_AP, ICM_TRACE(fun))
  ICM_NT( var_NT)
  ICM_ID( place)
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_SPAWNFUN_AP, (var_NT, place, name, retname, vararg_cnt, vararg))
#endif

#if defined(MUTC_FUNTHREADFUN_AP) || defined(ICM_ALL)
ICM_DEF( MUTC_FUNTHREADFUN_AP, ICM_TRACE(fun))
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_FUNTHREADFUN_AP, (name, retname, vararg_cnt, vararg))
#endif

#if defined(ND_FUN_RET) || defined(ICM_ALL)
ICM_DEF( ND_FUN_RET, ICM_TRACE(fun))
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( ND_FUN_RET, (retname, vararg_cnt, vararg))
#endif

#if defined(MUTC_THREADFUN_RET) || defined(ICM_ALL)
ICM_DEF( MUTC_THREADFUN_RET, ICM_TRACE(fun))
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MUTC_THREADFUN_RET, (retname, vararg_cnt, vararg))
#endif

#if defined(ND_OBJDEF) || defined(ICM_ALL)
ICM_DEF( ND_OBJDEF, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_OBJDEF, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_OBJDEF_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_OBJDEF_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
ICM_END( ND_OBJDEF_EXTERN, (var_NT, basetype, sdim))
#endif

#if defined(ND_DECL) || defined(ICM_ALL)
ICM_DEF( ND_DECL, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_DSM_DECL) || defined(ICM_ALL)
ICM_DEF( ND_DSM_DECL, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DSM_DECL, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_DECL_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_DECL_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
ICM_END( ND_DECL_EXTERN, (var_NT, basetype, sdim))
#endif

/* ND_DECL__DESC( ...) is a H-ICM */

/* ND_DECL__DATA( ...) is a H-ICM */

#if defined(ND_DECL__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL__MIRROR, (var_NT, sdim, shp))
#endif

#if defined(ND_DECL__MIRROR_PARAM) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR_PARAM, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL__MIRROR_PARAM, (var_NT, sdim, shp))
#endif

#if defined(ND_DECL__MIRROR_EXTERN) || defined(ICM_ALL)
ICM_DEF( ND_DECL__MIRROR_EXTERN, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
ICM_END( ND_DECL__MIRROR_EXTERN, (var_NT, sdim))
#endif

#if defined(ND_CHECK_REUSE) || defined(ICM_ALL)
ICM_DEF( ND_CHECK_REUSE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_CHECK_REUSE, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

/* ND_ALLOC( ...) is a H-ICM */

/* ND_ALLOC__DESC( ...) is a H-ICM */

/* ND_ALLOC__DATA( ...) is a H-ICM */


/* ND_SET__RC( ...) is a H-ICM */

#if defined(ND_SET__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_SET__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
ICM_END( ND_SET__SHAPE_id, (to_NT, to_sdim, shp_NT))
#endif

#if defined(ND_SET__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_SET__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( dim)
  ICM_VARANY( dim, shp_ANY)
ICM_END( ND_SET__SHAPE_arr, (to_NT, dim, shp_ANY))
#endif


#if defined(ND_REFRESH__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_REFRESH__MIRROR, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_INT( sdim)
ICM_END( ND_REFRESH__MIRROR, (var_NT, sdim))
#endif


#if defined(ND_ASSIGN) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( ND_ASSIGN, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

#if defined(ND_COPY__DESC_DIS_FIELDS) || defined(ICM_ALL)
ICM_DEF( ND_COPY__DESC_DIS_FIELDS, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
ICM_END( ND_COPY__DESC_DIS_FIELDS, (to_NT, from_NT))
#endif

#if defined(ND_ASSIGN__DESC) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN__DESC, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
ICM_END( ND_ASSIGN__DESC, (to_NT, from_NT))
#endif

#if defined(ND_ASSIGN__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_ASSIGN__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_ASSIGN__SHAPE, (to_NT, to_sdim, from_NT, from_sdim))
#endif

/* ASSIGN__DATA( ...) is a H-ICM */

#if defined(ND_UPDATE__DESC) || defined(ICM_ALL)
ICM_DEF( ND_UPDATE__DESC, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_UPDATE__DESC, (to_NT, to_sdim, from_NT, from_sdim))
#endif

#if defined(ND_UPDATE__MIRROR) || defined(ICM_ALL)
ICM_DEF( ND_UPDATE__MIRROR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_UPDATE__MIRROR, (to_NT, to_sdim, from_NT, from_sdim))
#endif


#if defined(ND_COPY) || defined(ICM_ALL)
ICM_DEF( ND_COPY, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( basetype)
  ICM_ID( copyfun)
ICM_END( ND_COPY, (to_NT, to_sdim, from_NT, from_sdim, basetype, copyfun))
#endif

#if defined(ND_COPY__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_COPY__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_COPY__SHAPE, (to_NT, to_sdim, from_NT, from_sdim))
#endif

/* COPY__DATA( ...) is a H-ICM */

#if defined(ND_MAKE_UNIQUE) || defined(ICM_ALL)
ICM_DEF( ND_MAKE_UNIQUE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( basetype)
  ICM_ID( copyfun)
ICM_END( ND_MAKE_UNIQUE, (to_NT, to_sdim, from_NT, from_sdim, basetype, copyfun))
#endif


#if defined(ND_CREATE__ARRAY__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_CREATE__ARRAY__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( dim)
  ICM_VARINT( dim, shp)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
  ICM_INT( val0_sdim)
ICM_END( ND_CREATE__ARRAY__SHAPE, (to_NT, to_sdim, dim, shp,
                                   val_size, vals_ANY, val0_sdim))
#endif

#if defined(ND_CREATE__ARRAY__DATA) || defined(ICM_ALL)
ICM_DEF( ND_CREATE__ARRAY__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
  ICM_ID( copyfun)
ICM_END( ND_CREATE__ARRAY__DATA, (to_NT, to_sdim, val_size, vals_ANY, copyfun))
#endif

#if defined(ND_CREATE__IRREGULAR__ARRAY__DATA) || defined(ICM_ALL)
ICM_DEF( ND_CREATE__IRREGULAR__ARRAY__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
  ICM_ID( copyfun)
ICM_END( ND_CREATE__IRREGULAR__ARRAY__DATA, (to_NT, to_sdim, val_size, vals_ANY, copyfun))
#endif

#if defined(ND_PRF_SHAPE_A__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SHAPE_A__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
ICM_END( ND_PRF_SHAPE_A__DATA, (to_NT, to_sdim, from_NT, from_sdim))
#endif

#if defined(ND_PRF_RESHAPE_VxA__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_RESHAPE_VxA__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
ICM_END( ND_PRF_RESHAPE_VxA__SHAPE_id, (to_NT, to_sdim, shp_NT))
#endif

#if defined(ND_PRF_RESHAPE_VxA__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_RESHAPE_VxA__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_PRF_RESHAPE_VxA__SHAPE_arr, (to_NT, to_sdim, shp_size, shp_ANY))
#endif

#if defined(ND_PRF_SEL_VxA__SHAPE_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__SHAPE_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
ICM_END( ND_PRF_SEL_VxA__SHAPE_id, (to_NT, to_sdim, from_NT, from_sdim, idx_NT))
#endif

#if defined(ND_PRF_SEL_VxA__SHAPE_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__SHAPE_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
ICM_END( ND_PRF_SEL_VxA__SHAPE_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                     idx_size, idxs_ANY))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_id_Local) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_id_Local, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_id_Local, (to_NT, to_sdim, from_NT, from_sdim,
                                         idx_NT, idx_size, copyfun))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                   idx_NT, idx_size, copyfun))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_arr_Local) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_arr_Local, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_arr_Local, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_size, idxs_ANY, copyfun))
#endif

#if defined(ND_PRF_SEL_VxA__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SEL_VxA__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_SEL_VxA__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                  idx_size, idxs_ANY, copyfun))
#endif

/* SIMD sel icms -- make them similar to standard selection,
   but pass an extra type-name and number of elements in the
   vector.  */
#if defined(ND_PRF_SIMD_SEL_VxA__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SIMD_SEL_VxA__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ID( copyfun)
  ICM_INT( simd_length)
  ICM_ID( base_type)
ICM_END( ND_PRF_SIMD_SEL_VxA__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                        idx_NT, idx_size, copyfun,
                                        simd_length, base_type))
#endif

#if defined(ND_PRF_SIMD_SEL_VxA__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SIMD_SEL_VxA__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ID( copyfun)
  ICM_INT( simd_length)
  ICM_ID( base_type)
ICM_END( ND_PRF_SIMD_SEL_VxA__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                         idx_size, idxs_ANY, copyfun,
                                         simd_length, base_type))
#endif



#if defined(ND_PRF_MODARRAY_AxVxS__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxS__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxS__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_NT, idx_size, val_scalar, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxS__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxS__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxS__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_size, idxs_ANY, val_scalar, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxA__DATA_id) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxA__DATA_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( idx_NT)
  ICM_INT( idx_size)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxA__DATA_id, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_NT, idx_size, val_array, copyfun))
#endif

#if defined(ND_PRF_MODARRAY_AxVxA__DATA_arr) || defined(ICM_ALL)
ICM_DEF( ND_PRF_MODARRAY_AxVxA__DATA_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_INT( idx_size)
  ICM_VARANY( idx_size, idxs_ANY)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_MODARRAY_AxVxA__DATA_arr, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_size, idxs_ANY, val_array, copyfun))
#endif

#if defined(ND_PRF_IDX_SEL__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SEL__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
ICM_END( ND_PRF_IDX_SEL__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, idx_ANY))
#endif

#if defined(ND_PRF_IDX_SEL__DATA_Local) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SEL__DATA_Local, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_SEL__DATA_Local, (to_NT, to_sdim, from_NT, from_sdim,
                                      idx_ANY, copyfun))
#endif

#if defined(ND_PRF_IDX_SEL__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SEL__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_SEL__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                idx_ANY, copyfun))
#endif

#if defined(ND_PRF_IDX_SHAPE_SEL__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_SHAPE_SEL__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
ICM_END( ND_PRF_IDX_SHAPE_SEL__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                          	      idx_ANY))
#endif

#if defined(ND_PRF_IDX_MODARRAY_AxSxS__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_MODARRAY_AxSxS__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ANY( val_scalar)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_MODARRAY_AxSxS__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                          idx_ANY, val_scalar, copyfun))
#endif

#if defined(ND_PRF_IDX_MODARRAY_AxSxA__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_IDX_MODARRAY_AxSxA__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_NT( val_array)
  ICM_ID( copyfun)
ICM_END( ND_PRF_IDX_MODARRAY_AxSxA__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                           idx_ANY, val_array, copyfun))
#endif

#if defined(ND_PRF_TAKE_SxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TAKE_SxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
ICM_END( ND_PRF_TAKE_SxV__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY))
#endif

#if defined(ND_PRF_TAKE_SxV__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TAKE_SxV__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_TAKE_SxV__DATA, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY,
                                   copyfun))
#endif

#if defined(ND_PRF_DROP_SxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_DROP_SxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
ICM_END( ND_PRF_DROP_SxV__SHAPE, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY))
#endif

#if defined(ND_PRF_DROP_SxV__DATA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_DROP_SxV__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( cnt_ANY)
  ICM_ID( copyfun)
ICM_END( ND_PRF_DROP_SxV__DATA, (to_NT, to_sdim, from_NT, from_sdim, cnt_ANY,
                                  copyfun))
#endif

#if defined(ND_PRF_CAT_VxV__SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_CAT_VxV__SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from1_NT)
  ICM_INT( from1_sdim)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_CAT_VxV__SHAPE, (to_NT, to_sdim,
                                   from1_NT, from1_sdim, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_TYPE_CONSTRAINT_AKS) || defined(ICM_ALL)
ICM_DEF( ND_PRF_TYPE_CONSTRAINT_AKS, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_INT( dim)
  ICM_VARINT( dim, shp)  
ICM_END( ND_PRF_TYPE_CONSTRAINT_AKS, (to_NT, from_NT, dim, shp))
#endif

#if defined(ND_PRF_SAME_SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_SAME_SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_SAME_SHAPE, (to_NT, from_NT, from_sdim, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_VAL_LT_SHAPE_VxA) || defined(ICM_ALL)
ICM_DEF( ND_PRF_VAL_LT_SHAPE_VxA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_VAL_LT_SHAPE_VxA, (to_NT, from_NT, from2_NT, from2_sdim))
#endif

#if defined(ND_PRF_PROD_MATCHES_PROD_SHAPE) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROD_MATCHES_PROD_SHAPE, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_NT( from2_NT)
  ICM_INT( from2_sdim)
ICM_END( ND_PRF_PROD_MATCHES_PROD_SHAPE, (to_NT, from_NT, from2_NT, from2_sdim))
#endif


#if defined(ND_VECT2OFFSET_arr) || defined(ICM_ALL)
ICM_DEF( ND_VECT2OFFSET_arr, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( from_size)
  ICM_NT( from_NT)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_VECT2OFFSET_arr, (off_NT, from_size, from_NT, shp_size, shp_ANY))
#endif

#if defined(ND_VECT2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_VECT2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( from_size)
  ICM_NT( from_NT)
  ICM_INT( shp_size)
  ICM_NT( shp_NT)
ICM_END( ND_VECT2OFFSET_id, (off_NT, from_size, from_NT, shp_size, shp_NT))
#endif

#if defined(ND_IDXS2OFFSET_arr) || defined(ICM_ALL)
ICM_DEF( ND_IDXS2OFFSET_arr, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( idxs_size)
  ICM_VARANY( idxs_size, idxs_ANY)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
ICM_END( ND_IDXS2OFFSET_arr, (off_NT, idxs_size, idxs_ANY, shp_size, shp_ANY))
#endif

#if defined(ND_IDXS2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_IDXS2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( idxs_size)
  ICM_VARANY( idxs_size, idxs_ANY)
  ICM_INT( shp_size)
  ICM_NT( shp_NT)
ICM_END( ND_IDXS2OFFSET_id, (off_NT, idxs_size, idxs_ANY, shp_size, shp_NT))
#endif

#if defined(ND_ARRAY_IDXS2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_ARRAY_IDXS2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( idxs_size)
  ICM_VARANY( idxs_size, idxs_ANY)
  ICM_INT( arr_dim)
  ICM_NT( arr_NT)
ICM_END( ND_ARRAY_IDXS2OFFSET_id, (off_NT, idxs_size, idxs_ANY, arr_dim, arr_NT))
#endif

#if defined(ND_ARRAY_VECT2OFFSET_id) || defined(ICM_ALL)
ICM_DEF( ND_ARRAY_VECT2OFFSET_id, ICM_TRACE(prf))
  ICM_NT( off_NT)
  ICM_INT( from_size)
  ICM_NT( from_NT)
  ICM_INT( arr_dim)
  ICM_NT( arr_NT)
ICM_END( ND_ARRAY_VECT2OFFSET_id, (off_NT, from_size, from_NT, arr_dim, arr_NT))
#endif


/*
 * ICMs for compilation of new with-loop
 */

#if defined(ND_WL_GENARRAY__SHAPE_id_arr) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_id_arr, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
  ICM_INT( val_size)
  ICM_VARANY( val_size, vals_ANY)
ICM_END( ND_WL_GENARRAY__SHAPE_id_arr, (to_NT, to_sdim, shp_NT, 
                                        val_size, vals_ANY))
#endif

#if defined(ND_WL_GENARRAY__SHAPE_id_id) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_id_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( shp_NT)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
ICM_END( ND_WL_GENARRAY__SHAPE_id_id, (to_NT, to_sdim, shp_NT, val_NT, val_sdim))
#endif

#if defined(ND_WL_GENARRAY__SHAPE_arr_id) || defined(ICM_ALL)
ICM_DEF( ND_WL_GENARRAY__SHAPE_arr_id, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_INT( shp_size)
  ICM_VARANY( shp_size, shp_ANY)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
ICM_END( ND_WL_GENARRAY__SHAPE_arr_id, (to_NT, to_sdim, shp_size, shp_ANY,
                                        val_NT, val_sdim))
#endif

#if defined(WL_SCHEDULE__BEGIN) || defined(ICM_ALL)
ICM_DEF( WL_SCHEDULE__BEGIN, ICM_TRACE_NONE)
  ICM_INT( dims)
ICM_END( WL_SCHEDULE__BEGIN, ( dims))
#endif

#if defined(WL_DIST_SCHEDULE__BEGIN) || defined(ICM_ALL)
ICM_DEF( WL_DIST_SCHEDULE__BEGIN, ICM_TRACE_NONE)
  ICM_INT( dims)
  ICM_BOOL( is_distributable)
  ICM_NT( to_NT)
  ICM_ID( to_basetype)
ICM_END( WL_DIST_SCHEDULE__BEGIN, ( dims, is_distributable, to_NT, to_basetype))
#endif

#if defined(WL3_SCHEDULE__BEGIN) || defined(ICM_ALL)
ICM_DEF( WL3_SCHEDULE__BEGIN, ICM_TRACE_NONE)
  ICM_INT( lb)
  ICM_NT( idx_nt)
  ICM_INT( ub)
  ICM_INT( chunksz)
  ICM_INT( need_unroll)
ICM_END( WL3_SCHEDULE__BEGIN, ( lb, idx_nt, ub, chunksz, need_unroll))
#endif

#if defined(WL_DECLARE_SHAPE_FACTOR) || defined(ICM_ALL)
ICM_DEF( WL_DECLARE_SHAPE_FACTOR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_DECLARE_SHAPE_FACTOR, (to_NT, to_sdim, idx_vec_NT, dims))
#endif

#if defined(WL_DEFINE_SHAPE_FACTOR) || defined(ICM_ALL)
ICM_DEF( WL_DEFINE_SHAPE_FACTOR, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_DEFINE_SHAPE_FACTOR, (to_NT, to_sdim, idx_vec_NT, dims))
#endif

#if defined(WL_SCHEDULE__END) || defined(ICM_ALL)
ICM_DEF( WL_SCHEDULE__END, ICM_TRACE_NONE)
  ICM_INT( dims)
ICM_END( WL_SCHEDULE__END, ( dims))
#endif

#if defined(WL3_SCHEDULE__END) || defined(ICM_ALL)
ICM_DEF( WL3_SCHEDULE__END, ICM_TRACE_NONE)
  ICM_NT( idx_nt)
ICM_END( WL3_SCHEDULE__END, ( idx_nt))
#endif

#if defined(WL_SUBALLOC) || defined(ICM_ALL)
ICM_DEF( WL_SUBALLOC, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_NT( to_NT)
  ICM_NT( off_NT)
ICM_END( WL_SUBALLOC, (sub_NT, to_NT, off_NT))
#endif

#if defined(WL_DISTMEM_SUBALLOC) || defined(ICM_ALL)
ICM_DEF( WL_DISTMEM_SUBALLOC, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_NT( to_NT)
  ICM_NT( off_NT)
ICM_END( WL_DISTMEM_SUBALLOC, (sub_NT, to_NT, off_NT))
#endif

#if defined(WL_ASSIGN) || defined(ICM_ALL)
ICM_DEF( WL_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_NT( off_NT)
  ICM_ID( copyfun)
ICM_END( WL_ASSIGN, (val_NT, val_sdim, to_NT, to_sdim,
                     idx_vec_NT, dims, off_NT, copyfun ))
#endif

#if defined(WL_MODARRAY_SUBSHAPE) || defined(ICM_ALL)
ICM_DEF( WL_MODARRAY_SUBSHAPE, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_NT( idx_NT)
  ICM_INT( dims)
  ICM_NT( to_NT)
ICM_END( WL_MODARRAY_SUBSHAPE, (sub_NT, idx_NT, dims, to_NT))
#endif

#if defined(WL_FOLD) || defined(ICM_ALL)
ICM_DEF( WL_FOLD, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_FOLD, (to_NT, to_sdim, idx_vec_NT, dims, idxs_scl_NT))
#endif

#if defined(WL_INIT_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_INIT_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
ICM_END( WL_INIT_OFFSET, (off_NT, to_NT, to_sdim, idx_vec_NT, dims))
#endif


#if defined(WL_ADJUST_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_ADJUST_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_INT( dim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_ADJUST_OFFSET, (off_NT, dim, to_NT, to_sdim, idx_vec_NT, dims, idxs_scl_NT))
#endif

#if defined(WL_SET_OFFSET) || defined(ICM_ALL)
ICM_DEF( WL_SET_OFFSET, ICM_TRACE_NONE)
  ICM_NT( off_NT)
  ICM_INT( dim)
  ICM_INT( first_block_dim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( idx_vec_NT)
  ICM_INT( dims)
  ICM_VARNT( dims, idxs_scl_NT)
ICM_END( WL_SET_OFFSET, (off_NT, dim, first_block_dim, to_NT, to_sdim,
                         idx_vec_NT, dims, idxs_scl_NT))
#endif


/*
 * ICMs for compilation of multi-threaded applications
 */

#if defined(MT_MTFUN_DECL) || defined(ICM_ALL)
ICM_DEF( MT_MTFUN_DECL, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_MTFUN_DECL, (funname, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MT_MTFUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_MTFUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_MTFUN_DEF_BEGIN, (funname, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MT_MTFUN_DEF_END) || defined(ICM_ALL)
ICM_DEF( MT_MTFUN_DEF_END, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_MTFUN_DEF_END, (funname, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(MT_MTFUN_AP) || defined(ICM_ALL)
ICM_DEF( MT_MTFUN_AP, ICM_TRACE(fun))
  ICM_ID( funname)
  ICM_ID( retname_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_MTFUN_AP, (funname, retname_NT, vararg_cnt, vararg))
#endif

#if defined(MT_MTFUN_RET) || defined(ICM_ALL)
ICM_DEF( MT_MTFUN_RET, ICM_TRACE(fun))
  ICM_ID( retname_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_MTFUN_RET, (retname_NT, vararg_cnt, vararg))
#endif

#if defined(MT_SMART_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SMART_BEGIN, ICM_TRACE_NONE )
  ICM_INT( spmd_id )
ICM_END( MT_SMART_BEGIN, (spmd_id))
#endif

#if defined(MT_SMART_END) || defined(ICM_ALL)
ICM_DEF( MT_SMART_END, ICM_TRACE_NONE )
ICM_END( MT_SMART_END, ())
#endif

#if defined(MT_SMART_DATA_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SMART_DATA_BEGIN, ICM_TRACE_NONE )
  ICM_INT( data_size )
ICM_END( MT_SMART_DATA_BEGIN, (data_size))
#endif

#if defined(MT_SMART_DATA_ADD) || defined(ICM_ALL)
ICM_DEF( MT_SMART_DATA_ADD, ICM_TRACE_NONE )
  ICM_INT( input_size )
  ICM_INT( nr_threads )
ICM_END( MT_SMART_DATA_ADD, (input_size, nr_threads))
#endif

#if defined(MT_SMART_DATA_END) || defined(ICM_ALL)
ICM_DEF( MT_SMART_DATA_END, ICM_TRACE_NONE )
ICM_END( MT_SMART_DATA_END, ())
#endif

#if defined(MT_SMART_PROBLEM_SIZE) || defined(ICM_ALL)
ICM_DEF( MT_SMART_PROBLEM_SIZE, ICM_TRACE_NONE )
  ICM_INT( problem_size )
ICM_END( MT_SMART_PROBLEM_SIZE, (problem_size))
#endif

#if defined(MT_SMART_VAR_PROBLEM_SIZE) || defined(ICM_ALL)
ICM_DEF( MT_SMART_VAR_PROBLEM_SIZE, ICM_TRACE_NONE )
  ICM_NT( mem_id )
ICM_END( MT_SMART_VAR_PROBLEM_SIZE, (mem_id))
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_BEGIN, ICM_TRACE_NONE )
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_BEGIN, ())
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_IxI) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_IxI, ICM_TRACE_NONE )
  ICM_INT( inf_i)
  ICM_INT( sup_i)
  ICM_INT( operation)
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_IxI, (inf_i, sup_i, operation))
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_IxC) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_IxC, ICM_TRACE_NONE )
  ICM_INT( inf_i)
  ICM_NT( sup_c)
  ICM_INT( operation)
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_IxC, (inf_i, sup_c, operation))
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_CxI) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_CxI, ICM_TRACE_NONE )
  ICM_NT( inf_c)
  ICM_INT( sup_i)
  ICM_INT( operation)
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_CxI, (inf_c, sup_i, operation))
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_CxC) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_CxC, ICM_TRACE_NONE )
  ICM_NT( inf_c)
  ICM_NT( sup_c)
  ICM_INT( operation)
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_CxC, (inf_c, sup_c, operation))
#endif

#if defined(MT_SMART_EXPR_PROBLEM_SIZE_END) || defined(ICM_ALL)
ICM_DEF( MT_SMART_EXPR_PROBLEM_SIZE_END, ICM_TRACE_NONE )
  ICM_INT( operation)
ICM_END( MT_SMART_EXPR_PROBLEM_SIZE_END, ( operation))
#endif

#if defined(MT_SPMDFUN_DECL) || defined(ICM_ALL)
ICM_DEF( MT_SPMDFUN_DECL, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMDFUN_DECL, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMDFUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SPMDFUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMDFUN_DEF_BEGIN, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMDFUN_DEF_END) || defined(ICM_ALL)
ICM_DEF( MT_SPMDFUN_DEF_END, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMDFUN_DEF_END, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMDFUN_RET) || defined(ICM_ALL)
ICM_DEF( MT_SPMDFUN_RET, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (6*vararg_cnt), vararg)
ICM_END( MT_SPMDFUN_RET, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMDFUN_AP) || defined(ICM_ALL)
ICM_DEF( MT_SPMDFUN_AP, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMDFUN_AP, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_FRAME_ELEMENT) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_FRAME_ELEMENT, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_FRAME_ELEMENT, (funname, vararg_cnt, vararg))
#endif

#if defined(MT_SPMD_BARRIER_ELEMENT) || defined(ICM_ALL)
ICM_DEF( MT_SPMD_BARRIER_ELEMENT, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( MT_SPMD_BARRIER_ELEMENT, (funname, vararg_cnt, vararg))
#endif

/*
 * ICMs for compilation of CUDA applications
 */

#if defined(CUDA_GLOBALFUN_AP) || defined(ICM_ALL)
ICM_DEF( CUDA_GLOBALFUN_AP, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( CUDA_GLOBALFUN_AP, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_ST_GLOBALFUN_AP) || defined(ICM_ALL)
ICM_DEF( CUDA_ST_GLOBALFUN_AP, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( CUDA_ST_GLOBALFUN_AP, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_GLOBALFUN_RET) || defined(ICM_ALL)
ICM_DEF( CUDA_GLOBALFUN_RET, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( CUDA_GLOBALFUN_RET, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_GLOBALFUN_DECL) || defined(ICM_ALL)
ICM_DEF( CUDA_GLOBALFUN_DECL, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( CUDA_GLOBALFUN_DECL, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_GLOBALFUN_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( CUDA_GLOBALFUN_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( CUDA_GLOBALFUN_DEF_BEGIN, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_GLOBALFUN_DEF_END) || defined(ICM_ALL)
ICM_DEF( CUDA_GLOBALFUN_DEF_END, ICM_TRACE_NONE)
  ICM_ID( funname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (4*vararg_cnt), vararg)
ICM_END( CUDA_GLOBALFUN_DEF_END, (funname, vararg_cnt, vararg))
#endif

#if defined(CUDA_WLIDS) || defined(ICM_ALL)
ICM_DEF( CUDA_WLIDS, ICM_TRACE_NONE)
  ICM_NT( wlids_NT)
  ICM_INT( wlids_NT_dim)
  ICM_INT( array_dim)
  ICM_INT( wlids_dim_pos)
  ICM_NT( iv_NT)
  ICM_ANY( hasstepwidth)
ICM_END( CUDA_WLIDS, (wlids_NT, wlids_NT_dim, array_dim, wlids_dim_pos, iv_NT, hasstepwidth))
#endif

#if defined(CUDA_THREADIDX) || defined(ICM_ALL)
ICM_DEF( CUDA_THREADIDX, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( dim)
  ICM_INT( dim_pos)
ICM_END( CUDA_THREADIDX, ( to_NT, dim, dim_pos))
#endif

#if defined(CUDA_BLOCKDIM) || defined(ICM_ALL)
ICM_DEF( CUDA_BLOCKDIM, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( dim)
  ICM_INT( dim_pos)
ICM_END( CUDA_BLOCKDIM, ( to_NT, dim, dim_pos))
#endif

#if defined(CUDA_WLIDXS) || defined(ICM_ALL)
ICM_DEF( CUDA_WLIDXS, ICM_TRACE_NONE)
  ICM_NT( wlidxs_NT)
  ICM_INT( wlidxs_NT_dim)
  ICM_NT( array_NT)
  ICM_INT( array_dim)
  ICM_VARANY( (array_dim), var_ANY)
ICM_END( CUDA_WLIDXS, (wlidxs_NT, wlidxs_NT_dim, array_NT, array_dim, var_ANY))
#endif

#if defined(CUDA_WL_ASSIGN) || defined(ICM_ALL)
ICM_DEF( CUDA_WL_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( val_NT)
  ICM_INT( val_sdim)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( off_NT)
ICM_END( CUDA_WL_ASSIGN, (val_NT, val_sdim, to_NT, to_sdim, off_NT))
#endif


#if defined( CUDA_MEM_PREFETCH) || defined(ICM_ALL)
ICM_DEF( CUDA_MEM_PREFETCH, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( device)
ICM_END( CUDA_MEM_PREFETCH, (var_NT, basetype, device))
#endif

#if defined( CUDA_MEM_TRANSFER) || defined(ICM_ALL)
ICM_DEF( CUDA_MEM_TRANSFER, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_ID( basetype)
  ICM_ID( direction)
ICM_END( CUDA_MEM_TRANSFER, (to_NT, from_NT, basetype, direction))
#endif

#if defined( CUDA_MEM_TRANSFER_START) || defined(ICM_ALL)
ICM_DEF( CUDA_MEM_TRANSFER_START, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( from_NT)
  ICM_ID( basetype)
  ICM_ID( direction)
ICM_END( CUDA_MEM_TRANSFER_START, (to_NT, from_NT, basetype, direction))
#endif

#if defined( CUDA_MEM_TRANSFER_END) || defined(ICM_ALL)
ICM_DEF( CUDA_MEM_TRANSFER_END, ICM_TRACE_NONE)
  ICM_NT( var_NT)
ICM_END( CUDA_MEM_TRANSFER_END, (var_NT))
#endif

#if defined( CUDA_THREAD_SPACE) || defined(ICM_ALL)
ICM_DEF( CUDA_THREAD_SPACE, ICM_TRACE_NONE)
  ICM_PRAGMA_FUNS( pragma)
  ICM_UINT( bounds_count)
  ICM_VARANY( (bounds_count), var_ANY)
ICM_END( CUDA_THREAD_SPACE, (pragma, bounds_count, var_ANY))
#endif

#if defined( CUDA_GRID_BLOCK) || defined(ICM_ALL)
ICM_DEF( CUDA_GRID_BLOCK, ICM_TRACE_NONE)
  ICM_UINT( bounds_count)
  ICM_VARANY( (bounds_count), var_ANY)
ICM_END( CUDA_GRID_BLOCK, (bounds_count, var_ANY))
#endif

#if defined(CUDA_WL_SUBALLOC) || defined(ICM_ALL)
ICM_DEF( CUDA_WL_SUBALLOC, ICM_TRACE_NONE)
  ICM_NT( sub_NT)
  ICM_INT( sub_dim)
  ICM_NT( to_NT)
  ICM_INT( to_dim)
  ICM_NT( off_NT)
ICM_END( CUDA_WL_SUBALLOC, (sub_NT, sub_dim, to_NT, to_dim, off_NT))
#endif

/*
#if defined(CUDA_PRF_IDX_SEL__DATA) || defined(ICM_ALL)
ICM_DEF( CUDA_PRF_IDX_SEL__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ID( basetype)
ICM_END( CUDA_PRF_IDX_SEL__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                  idx_ANY, basetype))
#endif

#if defined(CUDA_PRF_IDX_MODARRAY_AxSxS__DATA) || defined(ICM_ALL)
ICM_DEF( CUDA_PRF_IDX_MODARRAY_AxSxS__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ANY( val_scalar)
  ICM_ID( basetype)
ICM_END( CUDA_PRF_IDX_MODARRAY_AxSxS__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_ANY, val_scalar, basetype))
#endif
*/

#if defined(CUDA_PRF_IDX_MODARRAY_AxSxA__DATA) || defined(ICM_ALL)
ICM_DEF( CUDA_PRF_IDX_MODARRAY_AxSxA__DATA, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ANY( idx_ANY)
  ICM_ANY( val_array)
  ICM_ID( basetype)
ICM_END( CUDA_PRF_IDX_MODARRAY_AxSxA__DATA, (to_NT, to_sdim, from_NT, from_sdim,
                                             idx_ANY, val_array, basetype))
#endif


#if defined(CUDA_DECL_KERNEL_ARRAY) || defined(ICM_ALL)
ICM_DEF( CUDA_DECL_KERNEL_ARRAY, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( CUDA_DECL_KERNEL_ARRAY, (var_NT, basetype, sdim, shp))
#endif

#if defined(CUDA_DECL_SHMEM_ARRAY) || defined(ICM_ALL)
ICM_DEF( CUDA_DECL_SHMEM_ARRAY, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( CUDA_DECL_SHMEM_ARRAY, (var_NT, basetype, sdim, shp))
#endif

#if defined( CUDA_SHMEM_BOUNDARY_CHECK) || defined(ICM_ALL)
ICM_DEF( CUDA_SHMEM_BOUNDARY_CHECK, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( dim_pos)
  ICM_NT( idx_NT)
  ICM_INT( offset)
ICM_END( CUDA_SHMEM_BOUNDARY_CHECK, (to_NT, dim_pos, idx_NT, offset))
#endif

#if defined(CUDA_ASSIGN) || defined(ICM_ALL)
ICM_DEF( CUDA_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_INT( to_sdim)
  ICM_NT( from_NT)
  ICM_INT( from_sdim)
  ICM_ID( copyfun)
ICM_END( CUDA_ASSIGN, (to_NT, to_sdim, from_NT, from_sdim, copyfun))
#endif

#if defined(CUDA_COND_WL_ASSIGN) || defined(ICM_ALL)
ICM_DEF( CUDA_COND_WL_ASSIGN, ICM_TRACE_NONE)
  ICM_NT( cond_NT)
  ICM_NT( shmemidx_NT)
  ICM_NT( shmem_NT)
  ICM_NT( devidx_NT)
  ICM_NT( devmem_NT)
ICM_END( CUDA_COND_WL_ASSIGN, ( cond_NT, shmemidx_NT, shmem_NT, devidx_NT, devmem_NT))
#endif

/*
 * ICMs for implementing scheduling strategies
 */

#if defined(MT_SCHEDULER_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (2*dim), vararg)
ICM_END( MT_SCHEDULER_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Block_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Block_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Block_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Block_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_Block_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_BlockVar_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVar_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVar_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVar_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVar_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_BlockDist_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockDist_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockDist_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockDist_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockDist_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockDist_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockDist_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockDist_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockDist_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_BlockVarDist_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVarDist_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVarDist_BEGIN, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVarDist_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVarDist_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVarDist_END, (sched_id, dim, vararg))
#endif

#if defined(MT_SCHEDULER_BlockVarDist_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_BlockVarDist_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_INT( dim)
  ICM_VARANY( (3*dim), vararg)
ICM_END( MT_SCHEDULER_BlockVarDist_INIT, (sched_id, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Static_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_BEGIN, (sched_id, ts_name,
                                     ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Static_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_END, (sched_id, ts_name,
                                   ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Static_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Static_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Static_INIT, (sched_id, ts_name,
                                    ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Self_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_BEGIN, (sched_id, first_task, ts_name,
                                   ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Self_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_END, (sched_id, first_task, ts_name,
                                 ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Self_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Self_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( first_task)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Self_INIT, (sched_id, first_task, ts_name,
                                  ts_dims, ts_arg_num, ts_args, dim, vararg))
#endif



#if defined(MT_SCHEDULER_Affinity_BEGIN) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_BEGIN, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_BEGIN, (sched_id, ts_name, ts_dims,
                                       ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Affinity_END) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_END, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_END, (sched_id, ts_name, ts_dims,
                                     ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(MT_SCHEDULER_Affinity_INIT) || defined(ICM_ALL)
ICM_DEF( MT_SCHEDULER_Affinity_INIT, ICM_TRACE_NONE)
  ICM_INT( sched_id)
  ICM_ID( ts_name)
  ICM_INT( ts_dims)
  ICM_UINT( ts_arg_num)
  ICM_VARANY( (ts_arg_num), ts_args)
  ICM_INT( dim)
  ICM_VARANY( (4*dim), vararg)
ICM_END( MT_SCHEDULER_Affinity_INIT, (sched_id, ts_name, ts_dims,
                                      ts_arg_num, ts_args, dim, vararg))
#endif

#if defined(DISPATCH_ERROR) || defined(ICM_ALL)
ICM_DEF( DISPATCH_ERROR, ICM_TRACE_NONE)
  ICM_UINT( cnt_to)
  ICM_VARANY( (cnt_to), to_ANY)
  ICM_STR( funname)
  ICM_UINT( cnt_from)
  ICM_VARANY( (cnt_from), from_ANY)
ICM_END( DISPATCH_ERROR, (cnt_to, to_ANY, funname, cnt_from, from_ANY))
#endif

#if defined(ND_PRF_PROP_OBJ_IN) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROP_OBJ_IN, ICM_TRACE_NONE)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( ND_PRF_PROP_OBJ_IN, (vararg_cnt, vararg))
#endif

#if defined(ND_PRF_PROP_OBJ_OUT) || defined(ICM_ALL)
ICM_DEF( ND_PRF_PROP_OBJ_OUT, ICM_TRACE_NONE)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (2*vararg_cnt), vararg)
ICM_END( ND_PRF_PROP_OBJ_OUT, (vararg_cnt, vararg))
#endif


#if defined(FP_SLOWCLONE_DECL) || defined(ICM_ALL)
ICM_DEF( FP_SLOWCLONE_DECL, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( FP_SLOWCLONE_DECL, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(FP_SLOWCLONE_DEF_BEGIN) || defined(ICM_ALL)
ICM_DEF( FP_SLOWCLONE_DEF_BEGIN, ICM_TRACE_NONE)
  ICM_ID( name)
  ICM_NT( rettype_NT)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( FP_SLOWCLONE_DEF_BEGIN, (name, rettype_NT, vararg_cnt, vararg))
#endif

#if defined(FP_FUN_RET) || defined(ICM_ALL)
ICM_DEF( FP_FUN_RET, ICM_TRACE(fun))
  ICM_ID( framename)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( FP_FUN_RET, (framename, retname, vararg_cnt, vararg))
#endif

#if defined(FP_FUN_AP) || defined(ICM_ALL)
ICM_DEF( FP_FUN_AP, ICM_TRACE(fun))
  ICM_ID( framename)
  ICM_ID( name)
  ICM_ID( retname)
  ICM_UINT( vararg_cnt)
  ICM_VARANY( (3*vararg_cnt), vararg)
ICM_END( FP_FUN_AP, (framename, name, retname, vararg_cnt, vararg))
#endif

#if defined(ND_PRF_COND) || defined(ICM_ALL)
ICM_DEF( ND_PRF_COND, ICM_TRACE_NONE)
  ICM_NT( to_NT)
  ICM_NT( cond_NT)
  ICM_NT( then_NT)
  ICM_NT( else_NT)
ICM_END( ND_PRF_COND, ( to_NT, cond_NT, then_NT, else_NT))
#endif

#if defined (ND_ENCLOSE) || defined(ICM_ALL)
ICM_DEF( ND_ENCLOSE, ICM_TRACE_NONE)
  ICM_NT  ( to_NT)
  ICM_INT ( to_DIM)
  ICM_NT  ( from_NT)
  ICM_INT ( from_DIM)
ICM_END( ND_ENCLOSE, ( to_NT, to_DIM, from_NT, from_DIM))
#endif

#if defined (ND_DISCLOSE) || defined(ICM_ALL)
ICM_DEF( ND_DISCLOSE, ICM_TRACE_NONE)
  ICM_NT  ( to_NT)
  ICM_INT ( to_DIM)
  ICM_NT  ( from_NT)
  ICM_INT ( from_DIM)
ICM_END( ND_DISCLOSE, ( to_NT, to_DIM, from_NT, from_DIM))
#endif

#if defined(ND_DECL_NESTED) || defined(ICM_ALL)
ICM_DEF( ND_DECL_NESTED, ICM_TRACE_NONE)
  ICM_NT( var_NT)
  ICM_ID( basetype)
  ICM_INT( sdim)
  ICM_VARINT( sdim, shp)
ICM_END( ND_DECL_NESTED, (var_NT, basetype, sdim, shp))
#endif

#if defined(ND_UNSHARE) || defined(ICM_ALL)
ICM_DEF( ND_UNSHARE, ICM_TRACE_NONE)
  ICM_NT( va_NT)
  ICM_INT( va_sdim)
  ICM_NT( viv_NT)
  ICM_INT( viv_sdim)
  ICM_ID( basetype)
  ICM_ID( copyfun)
ICM_END( ND_UNSHARE, (va_NT, va_sdim, viv_NT, viv_sdim, basetype, copyfun))
#endif

