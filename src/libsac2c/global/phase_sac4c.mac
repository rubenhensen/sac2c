/*
 * $Id$
 */

#include "phase_initialise_defs.mac"

/******************************************************************************/

PHASE (ami, "Analyzing module information", ALWAYS)

SUBPHASE (pccf, "Printing CC Flags", PCCFdoPrintCCFlags, global.printccflags, ami)

SUBPHASE (lm, "Loading module contents", LMCdoLoadModuleContents, ALWAYS, ami)

SUBPHASE (uwt, "Updating dispatch information", EWTdoExtendWrapperTypes, ALWAYS, ami)

SUBPHASE (etv, "Eliminating Type Variables", EATdoEliminateAlphaTypes, ALWAYS, ami)

SUBPHASE (cbl, "Constructing function bundles", CBLdoConstructBundles, ALWAYS, ami)

ENDPHASE (ami)

/******************************************************************************/

PHASE (gwc, "Generating wrapper code", ALWAYS)

SUBPHASE (cwh, "Creating header files", CCWHdoCreateCWrapperHeader, !global.printldflags,
          gwc)

SUBPHASE (cwb, "Creating interface stub files", CCWBdoCreateCWrapperBody, ALWAYS, gwc)

SUBPHASE (gcf, "Creating copy and free functions", GCFdoGenerateCopyAndFree, ALWAYS, gwc)

SUBPHASE (btf, "Transforming bundles to wrapper functions", BTFdoBundleToFundef, ALWAYS,
          gwc)

SUBPHASE (hdep, "Handling dependencies", DEPdoHandleDependencies, ALWAYS, gwc)

SUBPHASE (pldf, "Printing LD Flags", PLDFdoPrintLDFlags, global.printldflags, gwc)

ENDPHASE (gwc)

/******************************************************************************/

PHASE (ssc, "Simplyfying source code", ALWAYS)

SUBPHASE (l2f, "Eliminating loops and conditionals", L2FdoLac2Fun, ALWAYS, ssc)

SUBPHASE (ssa, "Establishing static single assignment form", SSATdoTransformAllowGOs,
          ALWAYS, ssc)

SUBPHASE (dfc, "Trying to dispatch functions statically", DFCdoDispatchFunCalls, ALWAYS,
          ssc)

SUBPHASE (eudt, "Eliminating User-Defined Types", RCdoRemoveCasts, ALWAYS, ssc)

SUBPHASE (fdi, "Freeing dispatch information", FDIdoFreeDispatchInformation, ALWAYS, ssc)

ENDPHASE (ssc)

/******************************************************************************/

PHASE (cmem, "Introducing explicit memory management instructions", ALWAYS)

SUBPHASE (asd, "AUD/SCL distinction", ASDdoAudSclDistinction, ALWAYS, cmem)

SUBPHASE (copy, "Making copy operations explicit", EMECdoExplicitCopy, ALWAYS, cmem)

SUBPHASE (alloc, "Introducing explicit allocation statements ", EMALdoAlloc, ALWAYS, cmem)

SUBPHASE (dcr2, "Removing dead code", DCRdoDeadCodeRemovalModule, global.optimize.dodcr,
          cmem)

SUBPHASE (rc, "Reference counting", RCIdoReferenceCounting, ALWAYS, cmem)

SUBPHASE (rcm, "Reference counting minimization", RCMdoRefcountMinimization, ALWAYS, cmem)

SUBPHASE (re, "Removing reuse instructions", EMREdoReuseElimination, ALWAYS, cmem)

ENDPHASE (cmem)

/******************************************************************************/

PHASE (cpc, "Preparing C code generation", ALWAYS)

SUBPHASE (ussa, "Converting from SSA form", USSATdoUndoSsaTransform, ALWAYS, cpc)

SUBPHASE (f2l, "Reintroducing loops and conditionals", F2LdoFun2Lac, ALWAYS, cpc)

SUBPHASE (linl, "Inlining LaC functions", LINLdoLACInlining, ALWAYS, cpc)

SUBPHASE (rec, "Removing external code", RECdoRemoveExternalCode, ALWAYS, cpc)

SUBPHASE (rera, "Restoring reference arguments", RERAdoRestoreReferenceArguments, ALWAYS,
          cpc)

SUBPHASE (reso, "Restoring global objects", RESOdoRestoreObjects, ALWAYS, cpc)

SUBPHASE (sls, "Applying linksign pragma", SLSdoSetLinksign, ALWAYS, cpc)

SUBPHASE (mmv, "Marking memval identifiers", MMVdoMarkMemVals, ALWAYS, cpc)

/*
 * WARNING: no phases that duplicate code below this line!
 *          FPC builds the argtabs which CANNOT be maintained
 *          by duptree!
 */

SUBPHASE (fpc, "Reorganizing function prototypes", FPCdoFunctionPrecompile, ALWAYS, cpc)

SUBPHASE (tcp, "Applying type conversions", TCPdoTypeConversions, ALWAYS, cpc)

SUBPHASE (rid, "Consistently renaming identifiers", RIDdoRenameIdentifiers, ALWAYS, cpc)

ENDPHASE (cpc)

/******************************************************************************/

PHASE (ccg, "Generating Code", ALWAYS)

SUBPHASE (ctr, "Converting to old type representation", CTRdoConvertToOldTypes, ALWAYS,
          ccg)

SUBPHASE (cpl, "Creating intermediate code macros", COMPdoCompile, ALWAYS, ccg)

SUBPHASE (prt, "Generating C file(s)", PRTdoPrint, ALWAYS, ccg)

SUBPHASE (frtr, "De-allocating syntax tree representation", FREEdoFreeTree, ALWAYS, ccg)

ENDPHASE (ccg)

/******************************************************************************/

PHASE (cicc, "Creating binary code", ALWAYS)

SUBPHASE (ivcc, "Invoking C compiler", CCMinvokeCC, ALWAYS, cicc)

SUBPHASE (crl, "Creating wrapper library", LIBBcreateWrapperLibrary, ALWAYS, cicc)

ENDPHASE (cicc)

/******************************************************************************/

#include "phase_undefine_defs.mac"
