/*
 *
 * $Log$
 * Revision 1.7  2005/04/20 20:45:12  sah
 * renamed errno to checkerrno as the identifier
 * errno is reserved (cf. ISO C Standard) and may
 * not be used for own definitions!
 * the use of errno results in compilation failures
 * with GNU libc version 6!
 *
 * Revision 1.6  2004/11/24 16:01:13  cg
 * some renamings
 *
 * Revision 1.5  2004/11/23 21:51:49  cg
 * Added genlib flags.
 *
 * Revision 1.4  2004/11/23 20:29:03  cg
 * Added profile flags.
 *
 * Revision 1.3  2004/11/23 19:43:26  cg
 * Added flags for triggering tracing, cache simulation and runtime checks.
 *
 * Revision 1.2  2004/11/23 17:54:05  cg
 * Added default values.
 *
 * Revision 1.1  2004/11/23 17:34:23  cg
 * Initial revision
 *
 *
 */

/*
 * Trace flags
 */

#ifndef TRACEflag
#define TRACEflag(flag)
#endif

#ifndef TRACEchar
#define TRACEchar(char)
#endif

#ifndef TRACEdefault
#define TRACEdefault(default)
#endif

#ifndef TRACE
#define TRACE(flag, char, default)                                                       \
    TRACEflag (flag) TRACEchar (char) TRACEdefault (default)
#endif

TRACE (fun, 'f', FALSE)
TRACE (prf, 'p', FALSE)
TRACE (ref, 'r', FALSE)
TRACE (mem, 'm', FALSE)
TRACE (wl, 'w', FALSE)
TRACE (aa, 's', FALSE)
TRACE (mt, 't', FALSE)
TRACE (cenv, 'c', FALSE)

#undef TRACEflag
#undef TRACEchar
#undef TRACEdefault
#undef TRACE

/*************************************************************/

/*
 * Profile flags
 */

#ifndef PROFILEflag
#define PROFILEflag(flag)
#endif

#ifndef PROFILEchar
#define PROFILEchar(char)
#endif

#ifndef PROFILEdefault
#define PROFILEdefault(default)
#endif

#ifndef PROFILE
#define PROFILE(flag, char, default)                                                     \
    PROFILEflag (flag) PROFILEchar (char) PROFILEdefault (default)
#endif

PROFILE (fun, 'f', FALSE)
PROFILE (inl, 'i', FALSE)
PROFILE (lib, 'l', FALSE)
PROFILE (with, 'w', FALSE)

#undef PROFILEflag
#undef PROFILEchar
#undef PROFILEdefault
#undef PROFILE

/*************************************************************/

/*
 * Cache simulation flags
 */

#ifndef CSflag
#define CSflag(flag)
#endif

#ifndef CSchar
#define CSchar(char)
#endif

#ifndef CSdefault
#define CSdefault(default)
#endif

#ifndef CS
#define CS(flag, char, default) CSflag (flag) CSchar (char) CSdefault (default)
#endif

CS (simple, 's', TRUE)
CS (advanced, 'a', FALSE)
CS (block, 'b', FALSE)
CS (global, 'g', TRUE)
CS (file, 'f', FALSE)
CS (pipe, 'p', FALSE)
CS (immediate, 'i', TRUE)

#undef CSflag
#undef CSchar
#undef CSdefault
#undef CS

/*************************************************************/

/*
 * Runtime check flags
 */

#ifndef RTCflag
#define RTCflag(flag)
#endif

#ifndef RTCchar
#define RTCchar(char)
#endif

#ifndef RTCdefault
#define RTCdefault(default)
#endif

#ifndef RTC
#define RTC(flag, char, default) RTCflag (flag) RTCchar (char) RTCdefault (default)
#endif

RTC (conformity, 'c', FALSE)
RTC (boundary, 'b', FALSE)
RTC (type, 't', FALSE)
RTC (malloc, 'm', FALSE)
RTC (checkerrno, 'e', FALSE)
RTC (heap, 'h', FALSE)

#undef RTCflag
#undef RTCchar
#undef RTCdefault
#undef RTC

/*************************************************************/

/*
 * Library generation flags
 */

#ifndef GENLIBflag
#define GENLIBflag(flag)
#endif

#ifndef GENLIBstr
#define GENLIBstr(str)
#endif

#ifndef GENLIBdefault
#define GENLIBdefault(default)
#endif

#ifndef GENLIB
#define GENLIB(flag, str, default)                                                       \
    GENLIBflag (flag) GENLIBstr (str) GENLIBdefault (default)
#endif

GENLIB (sac, "sac", FALSE)
GENLIB (c, "c", FALSE)

#undef GENLIBflag
#undef GENLIBstr
#undef GENLIBdefault
#undef GENLIB
