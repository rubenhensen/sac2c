/*
 *
 * $Log$
 * Revision 1.10  1996/02/21 15:03:40  cg
 * changed print string for N_str from 'char*' to 'string'
 * with respect to usage within SIBs
 *
;; Revision 1.9  1996/01/16  16:55:40  cg
;; added new entry for macro TYP_IF giving the size of the type
;;
;; Revision 1.8  1995/12/20  08:17:15  cg
;; added new primitive type char.
;;
;; Revision 1.7  1995/07/07  13:08:55  cg
;; new type T_void added, old type T_unique removed.
;;
;; Revision 1.6  1995/06/23  12:20:41  hw
;; enlarged macro TYP_IF( string to use for renameing of functions added)
;;
;; Revision 1.5  1995/05/30  08:56:15  cg
;; grammar version 0.5 extended types added.
;;
;; Revision 1.4  1995/01/09  13:18:47  hw
;; now type bool is bool
;;
;; Revision 1.3  1995/01/05  12:45:12  sbs
;; third component done
;;
;; Revision 1.2  1995/01/05  11:58:57  sbs
;; T_str inserted
;;
;; Revision 1.1  1994/12/21  11:32:37  hw
;; Initial revision
;;
;;
;;
 *
 */

/*
**
** Some macro definitions used for the automatic creation
** of tables which depend on the correct order of the tags
** for the type Type
**
*/

/*   type_name       dbug-string    print-string         fun_rename_string  size  */

TYP_IF (T_int, "int", "int", "int", sizeof (int)),
  TYP_IF (T_short, "short", "short", "short", sizeof (short int)),
  TYP_IF (T_long, "long", "long", "long", sizeof (long int)),
  TYP_IF (T_uint, "unsigned int", "unsigned int", "uint", sizeof (int)),
  TYP_IF (T_ushort, "unsigned short", "unsigned short", "ushort", sizeof (short int)),
  TYP_IF (T_ulong, "unsigned long", "unsigned long", "ulong", sizeof (long int)),
  TYP_IF (T_float, "float", "float", "float", sizeof (float)),
  TYP_IF (T_double, "double", "double", "double", sizeof (double)),
  TYP_IF (T_longdbl, "long double", "long double", "ldouble", sizeof (long double)),
  TYP_IF (T_bool, "bool", "bool", "bool", sizeof (int)),
  TYP_IF (T_str, "string", "string", "string", sizeof (char *)),
  TYP_IF (T_char, "char", "char", "char", sizeof (char)),
  TYP_IF (T_hidden, "hidden", "void *", "void", sizeof (void *)),
  TYP_IF (T_void, "void", "void", "void", 0), TYP_IF (T_dots, "...", "...", "___", 0),
  TYP_IF (T_user, "user", "_user_", "_user_", 0),
  TYP_IF (T_unknown, "unknown", "_unknown_", "_unknown_", 0)
