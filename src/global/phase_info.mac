/*
 *
 * $Log$
 * Revision 3.17  2005/03/23 14:52:20  jhb
 * added some subphases of the ast.xml
 *
 * Revision 3.16  2005/03/10 09:41:09  cg
 * Restructured phase info:
 * Eliminated fun2lac/lac2fun conversion triggers.
 * Added specification of phase driver functions.
 *
 * Revision 3.15  2004/11/29 19:10:02  sah
 * removed old phases
 *
 * Revision 3.14  2004/11/23 19:42:09  cg
 * Converted boolean entries from int to bool.
 *
 * Revision 3.13  2004/10/28 17:16:33  sah
 * moved some phases for newast
 *
 * Revision 3.12  2004/10/17 14:52:06  sah
 * added export traversal
 *
 * Revision 3.11  2004/10/11 16:48:10  sah
 * added serialize phase (aka writesib)
 *
 * Revision 3.10  2004/09/28 14:07:30  ktr
 * removed old refcount and generatemasks
 *
 * Revision 3.9  2004/07/21 12:40:38  khf
 * removed PH_wlpartgen, added PH_wlenhance
 *
 * Revision 3.8  2004/07/15 13:36:59  ktr
 * reorganized phases after wltransform.
 *
 * Revision 3.7  2004/05/11 12:49:47  ktr
 * Order of phases wltransform, refcount and mt streamlined
 *
 * Revision 3.6  2004/04/21 16:38:56  ktr
 * Added SSA-based refcounting
 *
 * Revision 3.5  2004/02/26 13:09:47  khf
 * PH_wlpartgen added
 *
 * Revision 3.4  2001/04/26 17:09:22  dkr
 * PH_rmvoidfun removed
 *
 * Revision 3.3  2001/01/25 10:17:50  dkr
 * PH_spmdregions renamed into PH_multithread
 *
 * Revision 3.2  2000/12/12 11:38:12  dkr
 * refcount is phase 18 now
 *
 * Revision 3.1  2000/11/20 17:59:37  sacbase
 * new release made
 *
 * Revision 1.3  2000/08/02 11:51:45  nmw
 * phase create sac library changed to create library
 *
 * Revision 1.2  2000/07/11 15:51:15  dkr
 * ph_psiopt removed
 *
 * Revision 1.1  2000/03/16 14:25:28  dkr
 * Initial revision
 *
 */

/*
 * PH_initial and PH_final are required to be the first and last
 * compiler phase, respectively!
 */

#ifndef PHASEelement
#define PHASEelement(it_element)
#endif

#ifndef PHASEtext
#define PHASEtext(it_text)
#endif

#ifndef PHASEfun
#define PHASEfun(it_fun)
#endif

#define PHASE(it_element, it_text, it_fun)                                               \
    PHASEelement (it_element) PHASEtext (it_text) PHASEfun (it_fun)

#ifndef SUBPHASEelement
#define SUBPHASEelement(it_element)
#endif

#ifndef SUBPHASEspec
#define SUBPHASEspec(it_spec)
#endif

#ifndef SUBPHASEtext
#define SUBPHASEtext(it_text)
#endif

#ifndef SUBPHASEfun
#define SUBPHASEfun(it_fun)
#endif

#define SUBPHASE(it_element, it_spec, it_text, it_fun)                                   \
    SUBPHASEelement (it_element) SUBPHASEspec (it_spec) SUBPHASEtext (it_text)           \
      SUBPHASEfun (it_fun)

/***********************************************************************/

PHASE (initial, "Irregular compiler phase", PHdummy)

SUBPHASE (initial, "initial", "Irregular compiler subphase", PHdummy)

/***********************************************************************/

PHASE (setup, "Setting up sac2c compiler environment", SETUPdriveSetup)

SUBPHASE (opt, "opt", "Analyzing command line options", OPTanalyseCommandline)

SUBPHASE (rsc, "rsc", "Processing sac2c configuration file", RSCevaluateConfiguration)

SUBPHASE (init, "init", "Initializing data structures", SETUPdoInitializations)

SUBPHASE (createwrappers, "create-wrappsers", "", PHdummy)

SUBPHASE (createwrappercode, "create-wrapper-code", "", PHdummy)

SUBPHASE (annotatenamespace, "annotatenamespace", "", PHdummy)

SUBPHASE (import, "import", "", PHdummy)

SUBPHASE (writesib, "writesib", "", PHdummy)

SUBPHASE (resolvepragma, "resolvepramga", "", PHdummy)

SUBPHASE (respragma, "respragma", "", PHdummy)

SUBPHASE (rs, "rc", "", PHdummy)

SUBPHASE (fun2lac, "fun2lac", "", PHdummy)

SUBPHASE (liftsmpd, "liftsmpd", "", PHdummy)

SUBPHASE (rfin, "rfin", "", PHdummy)

SUBPHASE (mtfin, "mtfin", "", PHdummy)

SUBPHASE (BuildMultithread, "BuildMultithread", "", PHdummy)

SUBPHASE (CreateCells, "CreateCells", "", PHdummy)

SUBPHASE (objhandling, "obj-handling", "", PHdummy)

SUBPHASE (psioptimize, "psi-optimize", "", PHdummy)

SUBPHASE (rsp, "rsp", "", PHdummy)

SUBPHASE (ssaform, "ssaform", "", PHdummy)

SUBPHASE (inline, "inline", "", PHdummy)

SUBPHASE (AssignmentsRearrange, "AssignmentsRearrange", "", PHdummy)

SUBPHASE (WLI, "WLI", "", PHdummy)

SUBPHASE (WLF, "WLF", "", PHdummy)

SUBPHASE (ssalir, "ssalir", "", PHdummy)

SUBPHASE (lirmov, "lirmov", "", PHdummy)

SUBPHASE (infer_dfms, "infer_dfms", "", PHdummy)

SUBPHASE (free, "free", "", PHdummy)

SUBPHASE (readsib, "readsib", "", PHdummy)

SUBPHASE (undossa, "undossa", "", PHdummy)

SUBPHASE (syncinit, "syncinit", "", PHdummy)

SUBPHASE (syncopt, "syncopt", "", PHdummy)

SUBPHASE (wlaa, "wlaa", "", PHdummy)

SUBPHASE (tli, "tli", "", PHdummy)

SUBPHASE (ReuseWithArrays, "ReuseWithArrays", "", PHdummy)

SUBPHASE (IVE, "IVE", "", PHdummy)

/***********************************************************************/

PHASE (scanparse, "Loading SAC program", PHdummy)

/***********************************************************************/

PHASE (use, "Resolving used symbols from modules and classes", PHdummy)

/***********************************************************************/

PHASE (objinit, "Generating generic types and functions", PHdummy)

/***********************************************************************/

PHASE (flatten, "Simplifying source code", PHdummy)

/***********************************************************************/

PHASE (typecheck, "Running type inference system", PHdummy)

/***********************************************************************/

PHASE (export, "Processing exports", PHdummy)

/***********************************************************************/

PHASE (objects, "Resolving global objects and reference parameters", PHdummy)

/***********************************************************************/

PHASE (uniquecheck, "Checking uniqueness property of objects", PHdummy)

/***********************************************************************/

PHASE (wlenhance, "Enhancement of with-loops", PHdummy)

/***********************************************************************/

PHASE (sacopt, "Running SAC optimizations", PHdummy)

/***********************************************************************/

PHASE (wltrans, "Transforming with-loop representation", PHdummy)

/***********************************************************************/

PHASE (alloc, "Introducing explicit allocation instructions", PHdummy)

/***********************************************************************/

PHASE (multithread, "Generating annotations for MT", PHdummy)

/***********************************************************************/

PHASE (refcnt, "Running explicit reference count inference system", PHdummy)

/***********************************************************************/

PHASE (multithread_finish, "Finishing MT annotations", PHdummy)

/***********************************************************************/

PHASE (precompile, "Preparing C code generation", PHdummy)

/***********************************************************************/

PHASE (compile, "Generating C code", PHdummy)

/***********************************************************************/

PHASE (genccode, "Creating C file", PHdummy)

/***********************************************************************/

PHASE (invokecc, "Invoking C compiler", PHdummy)

/***********************************************************************/

PHASE (createlib, "Creating library", PHdummy)

/***********************************************************************/

PHASE (writedeps, "Writing dependencies to stdout", PHdummy)

/***********************************************************************/

PHASE (final, "Irregular compiler phase", PHdummy)

SUBPHASE (final, "final", "Irregular compiler subphase", PHdummy)

/***********************************************************************/

#undef PHASE

#undef PHASEelement
#undef PHASEtext
#undef PHASEfun

#undef SUBPHASE

#undef SUBPHASEelement
#undef SUBPHASEspec
#undef SUBPHASEtext
#undef SUBPHASEfun
