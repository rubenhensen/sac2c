/*
 *
 * $Log$
 * Revision 3.20  2005/04/21 14:42:17  cg
 * Introduced (presumably almost) complete set of subphases.
 * For the time being, subphase information is mostly unused for
 * triggering the compilation process.
 *
 * Revision 3.19  2005/04/20 07:25:18  cg
 * Phase use renamed to module.
 * Subphases edited.
 *
 * Revision 3.18  2005/04/14 14:30:31  jhb
 * added the subphases
 *
 * Revision 3.17  2005/03/23 14:52:20  jhb
 * added some subphases of the ast.xml
 *
 * Revision 3.16  2005/03/10 09:41:09  cg
 * Restructured phase info:
 * Eliminated fun2lac/lac2fun conversion triggers.
 * Added specification of phase driver functions.
 *
 * Revision 3.15  2004/11/29 19:10:02  sah
 * removed old phases
 *
 * Revision 3.14  2004/11/23 19:42:09  cg
 * Converted boolean entries from int to bool.
 *
 * Revision 3.13  2004/10/28 17:16:33  sah
 * moved some phases for newast
 *
 * Revision 3.12  2004/10/17 14:52:06  sah
 * added export traversal
 *
 * Revision 3.11  2004/10/11 16:48:10  sah
 * added serialize phase (aka writesib)
 *
 * Revision 3.10  2004/09/28 14:07:30  ktr
 * removed old refcount and generatemasks
 *
 * Revision 3.9  2004/07/21 12:40:38  khf
 * removed PH_wlpartgen, added PH_wlenhance
 *
 * Revision 3.8  2004/07/15 13:36:59  ktr
 * reorganized phases after wltransform.
 *
 * Revision 3.7  2004/05/11 12:49:47  ktr
 * Order of phases wltransform, refcount and mt streamlined
 *
 * Revision 3.6  2004/04/21 16:38:56  ktr
 * Added SSA-based refcounting
 *
 * Revision 3.5  2004/02/26 13:09:47  khf
 * PH_wlpartgen added
 *
 * Revision 3.4  2001/04/26 17:09:22  dkr
 * PH_rmvoidfun removed
 *
 * Revision 3.3  2001/01/25 10:17:50  dkr
 * PH_spmdregions renamed into PH_multithread
 *
 * Revision 3.2  2000/12/12 11:38:12  dkr
 * refcount is phase 18 now
 *
 * Revision 3.1  2000/11/20 17:59:37  sacbase
 * new release made
 *
 * Revision 1.3  2000/08/02 11:51:45  nmw
 * phase create sac library changed to create library
 *
 * Revision 1.2  2000/07/11 15:51:15  dkr
 * ph_psiopt removed
 *
 * Revision 1.1  2000/03/16 14:25:28  dkr
 * Initial revision
 *
 */

/*
 * PH_initial and PH_final are required to be the first and last
 * compiler phase, respectively!
 */

#ifndef PHASEelement
#define PHASEelement(it_element)
#endif

#ifndef PHASEtext
#define PHASEtext(it_text)
#endif

#ifndef PHASEfun
#define PHASEfun(it_fun)
#endif

#define PHASE(it_element, it_text, it_fun)                                               \
    PHASEelement (it_element) PHASEtext (it_text) PHASEfun (it_fun)

#ifndef SUBPHASEelement
#define SUBPHASEelement(it_element)
#endif

#ifndef SUBPHASEspec
#define SUBPHASEspec(it_spec)
#endif

#ifndef SUBPHASEtext
#define SUBPHASEtext(it_text)
#endif

#ifndef SUBPHASEfun
#define SUBPHASEfun(it_fun)
#endif

#define SUBPHASE(it_element, it_spec, it_text, it_fun)                                   \
    SUBPHASEelement (it_element) SUBPHASEspec (it_spec) SUBPHASEtext (it_text)           \
      SUBPHASEfun (it_fun)

/***********************************************************************/

PHASE (initial, "Irregular compiler phase", PHdummy)

SUBPHASE (initial, "initial", "Irregular compiler subphase", PHdummy)

/***********************************************************************/

PHASE (setup, "Setting up sac2c compiler environment", SETUPdriveSetup)

SUBPHASE (opt, "opt", "Analyzing command line options", OPTanalyseCommandline)

SUBPHASE (rsc, "rsc", "Processing sac2c configuration file", RSCevaluateConfiguration)

SUBPHASE (init, "init", "Initializing data structures", SETUPdoInitializations)

/***********************************************************************/

PHASE (scanparse, "Loading SAC program", PHdummy)

SUBPHASE (cpp, "cpp", "Running C preprocessor", PHdummy)

SUBPHASE (sp, "sp", "Parsing input file", PHdummy)

SUBPHASE (acn, "acn", "Resolving axis control and dot notation", PHdummy)

SUBPHASE (pragma, "pramga", "Resolving pragma annotations", PHdummy)

/***********************************************************************/

PHASE (module, "Running module system", PHdummy)

SUBPHASE (rsa, "rsa", "Processing use and import statements", PHdummy)

SUBPHASE (ans, "ans", "Annotating namespaces", PHdummy)

SUBPHASE (uss, "uss", "Getting used symbols", PHdummy)

SUBPHASE (dep, "dep", "Resolving dependencies", PHdummy)

/***********************************************************************/

PHASE (objinit, "Generating generic types and functions", PHdummy)

/***********************************************************************/

PHASE (flatten, "Simplifying source code", PHdummy)

SUBPHASE (hm, "hm", "Handling multiple operator expressions", PHdummy)

SUBPHASE (flat, "flat", "Flattening nested expressions", PHdummy)

/***********************************************************************/

PHASE (typecheck, "Running type inference system", PHdummy)

SUBPHASE (insvd, "insvd", "Inserting variable declarations", PHdummy)

SUBPHASE (crtwrp, "crtwrp", "Creating wrapper functions", PHdummy)

SUBPHASE (l2f, "l2f", "Eliminating loops and conditionals", PHdummy)

SUBPHASE (ssa, "ssa", "Establishing static single assignment form", PHdummy)

SUBPHASE (tc, "tc", "Running type inference system", PHdummy)

SUBPHASE (ds, "ds", "Deserializing code", PHdummy)

SUBPHASE (cwc, "cwc", "Creating wrapper code", PHdummy)

SUBPHASE (nt2ot, "nt2ot", "Cleaning up type inference system", PHdummy)

SUBPHASE (l2fwc, "l2fwc", "Eliminating conditionals in wrapper code", PHdummy)

SUBPHASE (ssawc, "ssawc", "Establishing static single assignment form in wrapper code",
          PHdummy)

/***********************************************************************/

PHASE (export, "Processing exports", PHdummy)

SUBPHASE (oan, "oan", "Running global object analysis", PHdummy)

SUBPHASE (exp, "exp", "Exporting symbols", PHdummy)

SUBPHASE (ppi, "ppi", "Restoring bodies of imported inline functions", PHdummy)

/***********************************************************************/

PHASE (objects, "Resolving global objects and reference parameters", PHdummy)

SUBPHASE (obj, "obj", "Resolving global objects", PHdummy)

SUBPHASE (ref, "ref", "Resolving reference parameters", PHdummy)

SUBPHASE (unq, "unq", "Checking uniqueness property", PHdummy)

/***********************************************************************/

PHASE (uniquecheck, "Checking uniqueness property of objects", PHdummy)

/***********************************************************************/

PHASE (wlenhance, "Enhancement of with-loops", PHdummy)

SUBPHASE (accu, "accu", "Introducing explicit accumulation", PHdummy)

SUBPHASE (wlpgd, "wlpgd", "Generating full or default partitions", PHdummy)

/***********************************************************************/

PHASE (sacopt, "Running SAC optimizations", PHdummy)

SUBPHASE (inl, "inl", "Applying function inlining", PHdummy)

SUBPHASE (dfr, "dfr", "Applying dead function removal", PHdummy)

SUBPHASE (cse, "cse", "Applying common subexpression elimination", PHdummy)

SUBPHASE (tup, "tup", "Applying type upgrade", PHdummy)

SUBPHASE (cf, "cf", "Applying constant folding", PHdummy)

SUBPHASE (cvp, "cvp", "Propagating constants and variables", PHdummy)

SUBPHASE (wlpg, "wlpg", "Generating full with-loop partitions", PHdummy)

SUBPHASE (wlf, "wlf", "Applying with-loop folding", PHdummy)

SUBPHASE (cf2, "cf2", "Applying constant folding again", PHdummy)

SUBPHASE (dcr, "dcr", "Applying dead code removal", PHdummy)

SUBPHASE (wls, "wls", "Applying with-loop scalarization", PHdummy)

SUBPHASE (lur, "lur", "Applying (with-)loop unrolling", PHdummy)

SUBPHASE (cf3, "cf3", "Applying constant folding again", PHdummy)

SUBPHASE (lir, "lir", "Applying loop invariant removal", PHdummy)

SUBPHASE (esd, "esd", "Eliminating subtraction and division operators", PHdummy)

SUBPHASE (al, "al", "Applying associative law", PHdummy)

SUBPHASE (dl, "dl", "Applying distributive law", PHdummy)

SUBPHASE (uesd, "uesd", "Reintroducing subtraction and division operators", PHdummy)

SUBPHASE (dcr2, "dcr2", "Applying dead code removal again", PHdummy)

SUBPHASE (wlfs, "wlfs", "Applying with-loop fusion", PHdummy)

SUBPHASE (cse2, "cse2", "Applying common subexpression elimination again", PHdummy)

SUBPHASE (dcr3, "dcr3", "Applying dead code removal again", PHdummy)

SUBPHASE (wlaa, "wlaa", "Running with-loop array access analysis", PHdummy)

SUBPHASE (ap, "ap", "Applying array padding", PHdummy)

SUBPHASE (tsi, "tsi", "Applying tile size inference", PHdummy)

SUBPHASE (dfr2, "dfr2", "Applying dead function removal", PHdummy)

SUBPHASE (ive, "ive", "Applying index vector elimination", PHdummy)

/***********************************************************************/

PHASE (wltrans, "Transforming with-loop representation", PHdummy)

/***********************************************************************/

PHASE (alloc, "Introducing explicit allocation instructions", PHdummy)

SUBPHASE (l2f2, "l2f2", "Eliminating loops and conditionals", PHdummy)

SUBPHASE (ssa2, "ssa2", "Establishing static single assignment form", PHdummy)

SUBPHASE (cvpemm, "cvpemm", "Propagating constants and variables", PHdummy)

SUBPHASE (dcremm, "dcremm", "Removing dead code", PHdummy)

SUBPHASE (copy, "copy", "Making copy operations explicit", PHdummy)

SUBPHASE (alloc, "alloc", "Introducing ALLOC statements ", PHdummy)

SUBPHASE (dcremm2, "dcremm2", "Removing dead code", PHdummy)

SUBPHASE (rci, "rci", "Inferring reuse candidates", PHdummy)

SUBPHASE (ia, "ia", "Applying interface analysis", PHdummy)

SUBPHASE (lro, "lro", "Applying loop reuse optimization ", PHdummy)

SUBPHASE (aa, "aa", "Applying alias analysis", PHdummy)

SUBPHASE (frc, "frc", "Filtering reuse candidates", PHdummy)

SUBPHASE (sr, "sr", "Introducing static reuse", PHdummy)

SUBPHASE (rb, "rb", "Introducing reuse branching", PHdummy)

SUBPHASE (rd, "rd", "Introducing data reuse", PHdummy)

SUBPHASE (dcremm3, "dcremm3", "Removing dead code", PHdummy)

/***********************************************************************/

PHASE (multithread, "Generating annotations for MT", PHdummy)

SUBPHASE (mtinit, "mtinit", "Initializing multithreading system", PHdummy)

SUBPHASE (tem, "tem", "Tagging execution modes", PHdummy)

SUBPHASE (crwiw, "crwiw", "Creating with in with", PHdummy)

SUBPHASE (pem, "pem", "Prpagating execution modes", PHdummy)

SUBPHASE (cdfg, "cdfg", "Creating data flow graph", PHdummy)

SUBPHASE (asmra, "asmra", "Rearringing assignments", PHdummy)

SUBPHASE (crece, "crece", "Creating execution mode cells", PHdummy)

SUBPHASE (cegro, "cegro", "Extending execution mode cells", PHdummy)

SUBPHASE (repfun, "repfun", "Replicatinmg functions", PHdummy)

SUBPHASE (concel, "concel", "Consolidating execution mode cells", PHdummy)

/***********************************************************************/

PHASE (refcnt, "Running explicit reference count inference system", PHdummy)

SUBPHASE (rc, "rc", "Introducing reference counting instructions", PHdummy)

SUBPHASE (rco, "rco", "Optimizing reference counting instructions", PHdummy)

SUBPHASE (re, "re", "Removing reuse instructions", PHdummy)

/***********************************************************************/

PHASE (multithread_finish, "Finishing MT annotations", PHdummy)

/***********************************************************************/

PHASE (precompile, "Preparing C code generation", PHdummy)

SUBPHASE (sls, "sls", "Applying linksign pragma", PHdummy)

SUBPHASE (mmv, "mmv", "Marking memval identifiers", PHdummy)

SUBPHASE (opc, "opc", "Restoring global objects and reference parameters", PHdummy)

SUBPHASE (fpc, "fpc", "Reorganizing function prototypes", PHdummy)

SUBPHASE (tcp, "tcp", "Applying type conversions", PHdummy)

SUBPHASE (aff, "aff", "Adjusting fold functions", PHdummy)

SUBPHASE (rid, "rid", "Consistently renaming identifiers", PHdummy)

/***********************************************************************/

PHASE (compile, "Generating C code", PHdummy)

/***********************************************************************/

PHASE (genccode, "Creating C file", PHdummy)

/***********************************************************************/

PHASE (invokecc, "Invoking C compiler", PHdummy)

/***********************************************************************/

PHASE (createlib, "Creating library", PHdummy)

/***********************************************************************/

PHASE (writedeps, "Writing dependencies to stdout", PHdummy)

/***********************************************************************/

PHASE (final, "Irregular compiler phase", PHdummy)

SUBPHASE (final, "final", "Irregular compiler subphase", PHdummy)

/***********************************************************************/

#undef PHASE

#undef PHASEelement
#undef PHASEtext
#undef PHASEfun

#undef SUBPHASE

#undef SUBPHASEelement
#undef SUBPHASEspec
#undef SUBPHASEtext
#undef SUBPHASEfun
