/*
 *
 * $Log$
 * Revision 3.12  2004/10/17 14:52:06  sah
 * added export traversal
 *
 * Revision 3.11  2004/10/11 16:48:10  sah
 * added serialize phase (aka writesib)
 *
 * Revision 3.10  2004/09/28 14:07:30  ktr
 * removed old refcount and generatemasks
 *
 * Revision 3.9  2004/07/21 12:40:38  khf
 * removed PH_wlpartgen, added PH_wlenhance
 *
 * Revision 3.8  2004/07/15 13:36:59  ktr
 * reorganized phases after wltransform.
 *
 * Revision 3.7  2004/05/11 12:49:47  ktr
 * Order of phases wltransform, refcount and mt streamlined
 *
 * Revision 3.6  2004/04/21 16:38:56  ktr
 * Added SSA-based refcounting
 *
 * Revision 3.5  2004/02/26 13:09:47  khf
 * PH_wlpartgen added
 *
 * Revision 3.4  2001/04/26 17:09:22  dkr
 * PH_rmvoidfun removed
 *
 * Revision 3.3  2001/01/25 10:17:50  dkr
 * PH_spmdregions renamed into PH_multithread
 *
 * Revision 3.2  2000/12/12 11:38:12  dkr
 * refcount is phase 18 now
 *
 * Revision 3.1  2000/11/20 17:59:37  sacbase
 * new release made
 *
 * Revision 1.3  2000/08/02 11:51:45  nmw
 * phase create sac library changed to create library
 *
 * Revision 1.2  2000/07/11 15:51:15  dkr
 * ph_psiopt removed
 *
 * Revision 1.1  2000/03/16 14:25:28  dkr
 * Initial revision
 *
 */

/*
 * PH_initial and PH_final are required to be the first and last
 * compiler phase, respectively!
 */

#ifndef PH_SELelement
#define PH_SELelement(it_element)
#endif

#ifndef PH_SELtext
#define PH_SELtext(it_text)
#endif

#ifndef PH_SELlac2fun
#define PH_SELlac2fun(it_lac2fun)
#endif

#ifndef PH_SELfun2lac
#define PH_SELfun2lac(it_fun2lac)
#endif

#define PH_SEL(it_element, it_text, it_lac2fun, it_fun2lac)                              \
    PH_SELelement (it_element) PH_SELtext (it_text) PH_SELlac2fun (it_lac2fun)           \
      PH_SELfun2lac (it_fun2lac)

PH_SEL (PH_initial, "", 0, 0),

  PH_SEL (PH_setup, "Setting up sac2c compiler environment", 0, 0),

  PH_SEL (PH_scanparse, "Loading SAC program", 0, 0),

  PH_SEL (PH_import, "Resolving imports from modules and classes", 0, 0),

  PH_SEL (PH_readsib, "Checking required libraries", 0, 0),

  PH_SEL (PH_objinit, "Generating generic types and functions", 0, 0),

  PH_SEL (PH_flatten, "Simplifying source code", 0, 0),

  PH_SEL (PH_typecheck, "Running type inference system", 0, 0),

  PH_SEL (PH_checkdec, "Checking module/class declaration file", 0, 0),

  PH_SEL (PH_impltype, "Resolving implicit types", 0, 0),

  PH_SEL (PH_analysis, "Analysing functions and global objects", 0, 0),

#ifndef NEW_AST
  PH_SEL (PH_writesib, "Generating SAC-Information-Block", 0, 0),
#else
  PH_SEL (PH_writesib, "Processing exports", 0, 0),
#endif /* NEW_AST */

  PH_SEL (PH_objects, "Resolving global objects and reference parameters", 0, 0),

  PH_SEL (PH_uniquecheck, "Checking uniqueness property of objects", 0, 0),

  PH_SEL (PH_wlenhance, "Enhancement of with-loops", 0, 0),

  PH_SEL (PH_sacopt, "Running SAC optimizations", 0, 0),

  PH_SEL (PH_wltrans, "Transforming with-loop representation", 0, 0),

  PH_SEL (PH_alloc, "Introducing explicit allocation instructions", 0, 0),

  PH_SEL (PH_multithread, "Generating annotations for MT", 0, 0),

  PH_SEL (PH_refcnt, "Running explicit reference count inference system", 0, 0),

  PH_SEL (PH_multithread_finish, "Finishing MT annotations", 0, 0),

  PH_SEL (PH_precompile, "Preparing C code generation", 0, 0),

  PH_SEL (PH_compile, "Generating C code", 0, 0),

  PH_SEL (PH_genccode, "Creating C file", 0, 0),

  PH_SEL (PH_invokecc, "Invoking C compiler", 0, 0),

  PH_SEL (PH_createlib, "Creating library", 0, 0),

  PH_SEL (PH_writedeps, "Writing dependencies to stdout", 0, 0),

  PH_SEL (PH_final, "Unknown compiler phase", 0, 0)

#undef PH_SEL

#undef PH_SELelement
#undef PH_SELtext
#undef PH_SELlac2fun
#undef PH_SELfun2lac
