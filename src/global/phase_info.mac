/*
 * $Id$
 */

/*
 * PH_initial and PH_final are required to be the first and last
 * compiler phase, respectively!
 */

#ifndef PHASEelement
#define PHASEelement(it_element)
#endif

#ifndef PHASEtext
#define PHASEtext(it_text)
#endif

#ifndef PHASEfun
#define PHASEfun(it_fun)
#endif

#define PHASE(it_element, it_text, it_fun)                                               \
    PHASEelement (it_element) PHASEtext (it_text) PHASEfun (it_fun)

#ifndef SUBPHASEelement
#define SUBPHASEelement(it_element)
#endif

#ifndef SUBPHASEspec
#define SUBPHASEspec(it_spec)
#endif

#ifndef SUBPHASEtext
#define SUBPHASEtext(it_text)
#endif

#ifndef SUBPHASEfun
#define SUBPHASEfun(it_fun)
#endif

#define SUBPHASE(it_element, it_spec, it_text, it_fun)                                   \
    SUBPHASEelement (it_element) SUBPHASEspec (it_spec) SUBPHASEtext (it_text)           \
      SUBPHASEfun (it_fun)

/******************************************************************************/

PHASE (initial, "Irregular compiler phase", PHdummy)

SUBPHASE (initial, "initial", "Irregular compiler subphase", PHdummy)

/******************************************************************************/

PHASE (setup, "Setting up sac2c compiler environment", SETUPdriveSetup)

SUBPHASE (opt, "opt", "Analyzing command line options", OPTanalyseCommandline)

SUBPHASE (rsc, "rsc", "Processing sac2c configuration file", RSCevaluateConfiguration)

SUBPHASE (init, "init", "Initializing data structures", SETUPdoInitializations)

/******************************************************************************/

PHASE (scanparse, "Loading SAC program", PHdummy)

SUBPHASE (cpp, "cpp", "Running C preprocessor", PHdummy)

SUBPHASE (sp, "sp", "Parsing input file", PHdummy)

SUBPHASE (acn, "acn", "Resolving axis control and dot notation", PHdummy)

SUBPHASE (pragma, "pramga", "Resolving pragma annotations", RSPdoResolvePragmas)

SUBPHASE (objinit, "objinit", "Generating generic types and functions", OIdoObjectInit)

/******************************************************************************/

PHASE (module, "Running module system", PHdummy)

SUBPHASE (rsa, "rsa", "Processing use and import statements", RSAdoResolveAll)

SUBPHASE (ans, "ans", "Annotating namespaces", ANSdoAnnotateNamespace)

SUBPHASE (gdp, "gdp", "Gathering dependencies", GDPdoGatherDependencies)

SUBPHASE (imp, "imp", "Getting imported symbols", IMPdoImportSymbols)

SUBPHASE (uss, "uss", "Getting used symbols", USSdoUseSymbols)

SUBPHASE (dep, "dep", "Resolving dependencies", DEPdoResolveDependencies)

/******************************************************************************/

PHASE (simplify, "Simplifying source code", CSdoCodeSimplification)

SUBPHASE (w2d, "w2d", "Transforming while-loops into do-loops", W2DdoTransformWhile2Do)

SUBPHASE (hce, "hce", "Eliminating conditional expressions",
          HCEdoHandleConditionalExpressions)

SUBPHASE (hm, "hm", "Handling multiple operator expressions", HMdoHandleMops)

SUBPHASE (flat, "flat", "Flattening nested expressions", FLATdoFlatten)

/******************************************************************************/

PHASE (pretypecheck, "Converting to static single assignment form", PTCdoPreTypecheck)

SUBPHASE (rst, "rst", "Processing user defined types", RSTdoResolveSymbolTypes)

SUBPHASE (insvd, "ivd", "Inserting variable declarations", INSVDdoInsertVardec)

SUBPHASE (instc, "itc", "Converting type decls in type conversions",
          INSTCdoInsertTypeConv)

SUBPHASE (ses, "ses", "Stripping external signatures", SESdoStripExternalSignatures)

SUBPHASE (crtwrp, "cwr", "Creating wrapper functions", CRTWRPdoCreateWrappers)

SUBPHASE (oan, "oan", "Running global object analysis", OANdoObjectAnalysis)

SUBPHASE (goi, "goi", "Generating object initialiser", GOIdoGenerateObjectInitialiser)

SUBPHASE (rso, "rso", "Resolving global objects", RSOdoResolveObjects)

SUBPHASE (rra, "rra", "Resolving reference arguments", RRAdoResolveReferenceArgs)

SUBPHASE (ewt, "ewt", "Extending dispatch information", EWTdoExtendWrapperTypes)

SUBPHASE (lac2fun, "l2f", "Eliminating loops and conditionals", L2FdoLac2Fun)

SUBPHASE (ssa, "ssa", "Establishing static single assignment form",
          SSATdoTransformAllowGOs)

/******************************************************************************/

PHASE (typecheck, "Running type inference system", PHdummy)

SUBPHASE (tc, "ntc", "Running type inference system", NTCdoNewTypeCheck)

SUBPHASE (ds, "ds", "Deserializing code", PHdummy)

SUBPHASE (nt2ot, "n2o", "Finalising infered type information", NT2OTdoTransform)

SUBPHASE (swr, "swr", "Splitting Wrappers", SWRdoSplitWrappers)

/******************************************************************************/

PHASE (export, "Processing exports", PHdummy)

SUBPHASE (exp, "exp", "Exporting symbols", EXPdoExport)

SUBPHASE (asf, "asf", "Loading sac2c prelude functions", ASFdoAddSpecialFunctions)

SUBPHASE (ppi, "ppi", "Restoring bodies of imported inline functions", PPIdoPrepareInline)

/******************************************************************************/

PHASE (uniquecheck, "Checking uniqueness property of objects", UPdoUniquenessInference)

SUBPHASE (cua, "cua", "Checking uniqueness annotations", CUAdoCheckUniquenessAnnotations)

/******************************************************************************/

PHASE (elimudt, "Eliminating User-Defined Types and Creating Wrapper Code", PHdummy)

SUBPHASE (cwc, "cwc", "Creating Wrapper Bodies", CWCdoCreateWrapperCode)

SUBPHASE (lac2funwc, "l2f", "Eliminating conditionals in wrapper code", L2FdoLac2Fun)

SUBPHASE (ssawc, "ssa", "Establishing static single assignment form in wrapper code",
          SSATdoTransformAllowGOs)

SUBPHASE (dfc, "dfc", "Trying to dispatch staticly", DFCdoDispatchFunCalls)

SUBPHASE (eudt, "eudt", "Eliminating User-Defined Types", RCdoRemoveCasts)

/******************************************************************************/

PHASE (wlenhance, "Enhancing of with-loops", WLEdoWlEnhancement)

SUBPHASE (accu, "accu", "Introducing explicit accumulators", EAdoExplicitAccumulate)

SUBPHASE (wldp, "wldp", "Adding default partitions", WLDPdoWlDefaultPartition)

SUBPHASE (rtup, "rtup", "Applying reverse type upgrade", RTUPdoReverseTypeUpgrade)

SUBPHASE (wlpg, "wlpg", "Generating full with-loop partitions",
          WLPGdoWlPartitionGeneration)

/******************************************************************************/

PHASE (sacopt, "Running SAC optimizations", OPTdoOptimize)

SUBPHASE (inl, "inl", "Applying function inlining", INLdoInlining)

SUBPHASE (dfr, "dfr", "Removing dead functions", DFRdoDeadFunctionRemoval)

SUBPHASE (dcr, "dcr", "Removing dead code", DCRdoDeadCodeRemovalModule)

SUBPHASE (intraopt, "cyc", "Applying intra-functional optimizations",
          OPTdoIntraFunctionalOptimizations)

SUBPHASE (cse, "cse", "Applying common subexpression elimination",
          CSEdoCommonSubexpressionElimination)

SUBPHASE (ili, "ili", "Infering loop invariant variables", ILIdoInferLoopInvariants)

SUBPHASE (ntccyc, "ntc", "Applying type upgrade", NTCdoNewTypeCheckOneFunction)

SUBPHASE (rtupcyc, "rtupcyc", "Applying reverse type upgrade",
          RTUPdoReverseTypeUpgradeOneFundef)

SUBPHASE (wlprop, "wlprop", "Applying with-loop propagation", WLPROPdoWithloopPropagation)

SUBPHASE (dfccyc, "dfc", "Applying function call dispatch",
          DFCdoDispatchFunCallsOneFundef)

SUBPHASE (inlcyc, "inl", "Applying inlining", INLdoInlining)

SUBPHASE (cf, "cf", "Applying constant folding", CFdoConstantFolding)

SUBPHASE (cvp, "cvp", "Propagating constants and variables",
          CVPdoConstVarPropagationOneFundef)

SUBPHASE (wlpgcyc, "wlpg", "Generating full with-loop partitions",
          WLPGdoWlPartitionGenerationOpt)

SUBPHASE (wlsimp, "wlsimp", "Simplifying with-loops", WLSIMPdoWithloopSimplification)

SUBPHASE (wli, "wli", "Infering foldable with-loops", WLIdoWLI)

SUBPHASE (wlf, "wlf", "Applying with-loop folding", WLFdoWLF)

SUBPHASE (ssawlf, "ssawlf", "Restoring SSA form after with-loop folding",
          SSATdoTransformOneFundef)

SUBPHASE (dcrcycfun, "dcrfun", "Applying dead code removal",
          DCRdoDeadCodeRemovalOneFundef)

SUBPHASE (wls, "wls", "Applying with-loop scalarization", WLSdoWithloopScalarization)

SUBPHASE (lur, "lur", "Applying (with-)loop unrolling", LURdoLoopUnrolling)

SUBPHASE (prfunr, "prfunr", "Applying prf unrolling", UPRFdoUnrollPRFs)

SUBPHASE (linlcyc, "linl", "Inlining degenerated LaC functions",
          LINLdoLACInliningOneFundef)

SUBPHASE (lir, "lir", "Applying loop invariant removal", LIRdoLoopInvariantRemoval)

SUBPHASE (lir2, "lir2", "Applying loop invariant removal", LIRdoLoopInvariantRemoval)

SUBPHASE (wlir, "wlir", "Applying with-loop invariant removal",
          LIRdoWithLoopInvariantRemovalOneFundef)

SUBPHASE (etc, "etc", "Eliminating typeconv primitives", ETCdoEliminateTypeConversions)

SUBPHASE (esd, "esd", "Eliminating subtraction and division operators", ESDdoElimSubDiv)

SUBPHASE (al, "al", "Applying associative law", ASSOCdoAssociativityOptimizationOneFundef)

SUBPHASE (dl, "dl", "Applying distributive law", DLdoDistributiveLaw)

SUBPHASE (dfrcyc, "dfr", "Removing dead functions", DFRdoDeadFunctionRemoval)

SUBPHASE (dcrcyc, "dcr", "Applying dead code removal", DCRdoDeadCodeRemovalModule)

SUBPHASE (sisi, "sisi", "Simplifying function signatures", SISIdoSignatureSimplification)

SUBPHASE (uesd, "uesd", "Reintroducing subtraction and division operators",
          UESDdoUndoElimSubDiv)

SUBPHASE (dcr2, "dcr2", "Applying dead code removal again", DCRdoDeadCodeRemovalModule)

SUBPHASE (wlfs, "wlfs", "Applying with-loop fusion", WLFSdoWithloopFusion)

SUBPHASE (cse2, "cse", "Elimininating common subexpressions",
          CSEdoCommonSubexpressionEliminationModule)

SUBPHASE (dcr3, "dcr3", "Removing dead code", DCRdoDeadCodeRemovalModule)

SUBPHASE (wlpg2, "wlpg2", "Generating full with-loop partitions",
          WLPGdoWlPartitionGeneration)

SUBPHASE (wrci, "wrci", "Inferencing with-loop reuse candidates",
          WRCIdoWithloopReuseCandidateInference)

SUBPHASE (ivei, "ivei", "Applying index vector elimination (inference)",
          IVEIdoIndexVectorEliminationInference)

SUBPHASE (ive, "ive", "Applying index vector elimination", IVEdoIndexVectorElimination)

SUBPHASE (iveo, "iveo", "Applying index vector elimination (optimisation)",
          IVEOdoIndexVectorEliminationOptimisation)

SUBPHASE (cvpive, "cvpive", "Propagating constants and variables",
          CVPdoConstVarPropagation)

SUBPHASE (dcrive, "dcrive", "Removing dead code", DCRdoDeadCodeRemovalModule)

SUBPHASE (wlidx, "wlidx", "Annoting offset variable at with-loops",
          WLIDXdoAnnotateWithloopIdxs)

SUBPHASE (rtc, "rct", "Runnging final type inference", NTCdoNewReTypeCheck)

SUBPHASE (finnt2ot, "finn2o", "Finalising infered type information", NT2OTdoTransform)

SUBPHASE (fdi, "fdi", "Freeing dispatch information", FDIdoFreeDispatchInformation)

/******************************************************************************/

PHASE (wltrans, "Transforming with-loop representation", WLTRAdoWlTransformPhase)

SUBPHASE (wltussa, "ussa", "Converting from SSA form", USSATdoUndoSsaTransform)

SUBPHASE (wltfun2lac, "fun2lac", "Reintroducing loops and conditionals", F2LdoFun2Lac)

SUBPHASE (wltlacinl, "lacinl", "Inlining LaC functions", LINLdoLACInlining)

SUBPHASE (wltra, "wltra", "Transforming with-loop representation", WLTRAdoWlTransform)

SUBPHASE (wltlac2fun, "lac2fun", "Eliminating loops and conditionals", L2FdoLac2Fun)

SUBPHASE (wltssa, "ssa", "Establishing static single assignment form", SSATdoTransform)

SUBPHASE (wltcvp, "cvp", "Propagating constants and variables", CVPdoConstVarPropagation)

SUBPHASE (wltdcr, "dcr", "Removing dead code", DCRdoDeadCodeRemovalModule)

/******************************************************************************/

PHASE (multithread, "Generating annotations for multithreaded execution",
       CONCdoConcurrent)

SUBPHASE (createmtfuns, "createmtfuns",
          "Creating MT variants of exported and provided functions", CMTFdoCreateMtFuns)

SUBPHASE (spmdinit, "spmdinit", "Building SPMD blocks around with-loops", SPMDIdoSpmdInit)

SUBPHASE (spmdlift, "spmdlift", "Lifting SPMD blocks to functions", SPMDLdoSpmdLift)

SUBPHASE (sched, "sched", "Annotating scheduling informations", SCHEDdoScheduleTrav)

SUBPHASE (rmspmd, "rmspmd", "Removing SPMD blocks", RMSPMDdoRemoveSpmdBlocks)

SUBPHASE (conclac2fun, "l2f", "Lifting SPMD conditionals", L2FdoLac2Fun)

SUBPHASE (concssa, "ssa",
          "Establishing static single assignment form in SPMD conditionals",
          SSATdoTransform)

SUBPHASE (tem, "tem", "Tagging execution modes", TEMdoTagExecutionmode)

SUBPHASE (crwiw, "crwiw", "Creating with in with", CRWIWdoCreateWithinwith)

SUBPHASE (pem, "pem", "Propagating execution modes", PEMdoPropagateExecutionmode)

SUBPHASE (cdfg, "cdfg", "Creating data flow graph", CDFGdoCreateDataflowgraph)

SUBPHASE (asmra, "asmra", "Rearringing assignments", ASMRAdoAssignmentsRearrange)

SUBPHASE (crece, "crece", "Creating execution mode cells", CRECEdoCreateCells)

SUBPHASE (cegro, "cegro", "Extending execution mode cells", CEGROdoCellGrowth)

SUBPHASE (repfun, "repfun", "Replicating functions", REPFUNdoReplicateFunctions)

SUBPHASE (mtdfr, "dfr", "Removing superfluos functions", DFRdoDeadFunctionRemoval)

SUBPHASE (concel, "concel", "Consolidating execution mode cells",
          CONCELdoConsolidateCells)

/******************************************************************************/

PHASE (memory, "Introducing explicit memory management instructions",
       EMMdoMemoryManagement)

SUBPHASE (simd, "simd", "SIMD inference", SIMDdoInferSIMD)

SUBPHASE (asd, "asd", "AUD/SCL distinction", ASDdoAudSclDistinction)

SUBPHASE (copy, "copy", "Making copy operations explicit", EMECdoExplicitCopy)

SUBPHASE (alloc, "alloc", "Introducing explicit allocation statements ", EMALdoAlloc)

SUBPHASE (emmdcr, "dcr", "Removing dead code", DCRdoDeadCodeRemovalModule)

SUBPHASE (rci, "rci", "Inferring reuse candidates", EMRIdoReuseInference)

SUBPHASE (ia, "ia", "Interface aliasing analysis", EMIAdoInterfaceAnalysis)

SUBPHASE (lro, "lro", "Applying loop reuse optimization", EMLRdoLoopReuseOptimization)

SUBPHASE (aa, "aa", "Aliasing analysis", EMAAdoAliasAnalysis)

SUBPHASE (frc, "frc", "Filtering reuse candidates", EMFRCdoFilterReuseCandidates)

SUBPHASE (sr, "sr", "Static reuse", EMSRdoStaticReuse)

SUBPHASE (rb, "rb", "Introducing reuse branches", EMRBdoReuseBranching)

SUBPHASE (ipc, "ipc", "Identfying in-place updates", EMIPdoInplaceComputation)

SUBPHASE (dr, "dr", "Exploiting data reuse", EMDRdoDataReuse)

SUBPHASE (emmdcr2, "dcr2", "Removing dead code", DCRdoDeadCodeRemovalModule)

SUBPHASE (rc, "rc", "Reference counting", RCIdoReferenceCounting)

SUBPHASE (rcm, "rcm", "Reference counting minimization", RCMdoRefcountMinimization)

SUBPHASE (rco, "rco", "Optimizing reference counting instructions", EMRCOdoRefCountOpt)

SUBPHASE (mvsmi, "mvsmi",
          "Moving shared memory management instructions out of SPMD functions",
          MVSMIdoMoveSharedMemoryManagementInstructions)

SUBPHASE (re, "re", "Removing reuse instructions", EMREdoReuseElimination)

/******************************************************************************/

PHASE (precompile, "Preparing C code generation", PRECdoPrecompile)

SUBPHASE (ussa, "ussa", "Converting from SSA form", USSATdoUndoSsaTransform)

SUBPHASE (fun2lac, "fun2lac", "Reintroducing loops and conditionals", F2LdoFun2Lac)

SUBPHASE (lacinl, "lacinl", "Inlining LaC functions", LINLdoLACInlining)

SUBPHASE (rec, "rec", "Removing external code", RECdoRemoveExternalCode)

SUBPHASE (rera, "rera", "Restoring reference arguments", RERAdoRestoreReferenceArguments)

SUBPHASE (reso, "reso", "Restoring global objects", RESOdoRestoreObjects)

SUBPHASE (sls, "sls", "Applying linksign pragma", SLSdoSetLinksign)

SUBPHASE (mmv, "mmv", "Marking memval identifiers", MMVdoMarkMemVals)

SUBPHASE (moi, "moi", "Manage object initialisers", MOIdoManageObjectInitialisers)

SUBPHASE (fpc, "fpc", "Reorganizing function prototypes", FPCdoFunctionPrecompile)

SUBPHASE (tcp, "tcp", "Applying type conversions", TCPdoTypeConversions)

SUBPHASE (aff, "aff", "Adjusting fold functions", PHdummy)

SUBPHASE (mng, "mng", "Mark NoOp Grids", MNGdoMarkNoopGrids)

SUBPHASE (rid, "rid", "Consistently renaming identifiers", RIDdoRenameIdentifiers)

/******************************************************************************/

PHASE (compile, "Generating C code", PHdummy)

SUBPHASE (tot, "tot", "Converting to old type representation", PHdummy)

SUBPHASE (comp, "comp", "Generating C code", PHdummy)

/******************************************************************************/

PHASE (genccode, "Creating C file", PHdummy)

/******************************************************************************/

PHASE (invokecc, "Invoking C compiler", PHdummy)

/******************************************************************************/

PHASE (createlib, "Creating library", PHdummy)

/******************************************************************************/

PHASE (writedeps, "Writing dependencies to stdout", PHdummy)

/******************************************************************************/

PHASE (final, "Irregular compiler phase", PHdummy)

SUBPHASE (final, "final", "Irregular compiler subphase", PHdummy)

/******************************************************************************/

#undef PHASE

#undef PHASEelement
#undef PHASEtext
#undef PHASEfun

#undef SUBPHASE

#undef SUBPHASEelement
#undef SUBPHASEspec
#undef SUBPHASEtext
#undef SUBPHASEfun
