/*
 *
 * $Log$
 * Revision 1.27  2005/09/27 18:30:16  sah
 * added additional CVP and DCR after IVE
 *
 * Revision 1.26  2005/09/12 16:12:34  ktr
 * activated wlpg, cse and wlsimplification by default
 *
 * Revision 1.25  2005/09/12 13:55:41  ktr
 * added with-loop simplification
 *
 * Revision 1.24  2005/09/09 23:42:21  sbs
 * enabled TUP per default
 *
 * Revision 1.23  2005/09/04 13:05:08  ktr
 * added newline at end of file
 *
 * Revision 1.22  2005/09/04 12:49:35  ktr
 * added new global optimization counters and made all optimizations proper subphases
 *
 * Revision 1.21  2005/08/27 19:17:58  ktr
 * re-activated wlf, wlur
 *
 * Revision 1.20  2005/08/20 12:05:50  ktr
 * added elimtypeconv optimization
 *
 * Revision 1.19  2005/08/09 10:40:53  sah
 * enabled inlining
 *
 * Revision 1.18  2005/07/27 10:40:53  sah
 * enabled and disabled some
 * optimisations to reflect
 * current state of compiler
 *
 * Revision 1.17  2005/05/31 13:38:17  mwe
 * sisi deactivated
 *
 * Revision 1.16  2005/04/22 10:07:32  ktr
 * re-activated LUR, WLUR
 *
 * Revision 1.15  2005/04/20 19:20:47  ktr
 * re-activated LIR
 *
 * Revision 1.14  2005/04/15 13:23:55  ktr
 * removed lacinline
 *
 * Revision 1.13  2005/04/15 10:46:08  ktr
 * Inlining is now activated by default
 *
 * Revision 1.12  2005/04/12 15:49:40  ktr
 * Added a flag for LAC inlining
 *
 * Revision 1.11  2005/02/16 14:10:19  mwe
 * some renaming done
 *
 * Revision 1.10  2005/02/15 14:52:22  mwe
 * esd_rec und esd_neg
 * added
 *
 * Revision 1.9  2005/02/03 18:28:22  mwe
 * some new flags added
 *
 * Revision 1.8  2005/02/02 18:09:50  mwe
 * sisi added
 *
 * Revision 1.7  2004/12/16 14:36:40  ktr
 * added ipc and dr
 *
 * Revision 1.6  2004/12/11 14:46:48  ktr
 * UIP is now enabled by default.
 *
 * Revision 1.5  2004/12/08 12:16:37  mwe
 * type_upgrade added
 *
 * Revision 1.4  2004/11/30 16:06:28  ktr
 * Most Optimizations switched off.
 *
 * Revision 1.3  2004/11/24 16:00:09  cg
 * some renamings.
 *
 * Revision 1.2  2004/11/23 11:36:42  cg
 * Switched mac-file based declaration of global variables.
 *
 * Revision 1.1  2004/11/22 17:44:33  cg
 * Initial revision
 *
 *
 */

#ifndef OPTIMIZEstr
#define OPTIMIZEstr(str)
#endif

#ifndef OPTIMIZEabbr
#define OPTIMIZEabbr(abbr)
#endif

#ifndef OPTIMIZEdevl
#define OPTIMIZEdevl(devl)
#endif

#ifndef OPTIMIZEprod
#define OPTIMIZEprod(prod)
#endif

#ifndef OPTIMIZEname
#define OPTIMIZEname(name)
#endif

#ifndef OPTCOUNTERid
#define OPTCOUNTERid(id)
#endif

#ifndef OPTCOUNTERtext
#define OPTCOUNTERtext(text)
#endif

#ifndef OPTIMIZE
#define OPTIMIZE(str, abbr, devl, prod, name)                                            \
    OPTIMIZEstr (str) OPTIMIZEabbr (abbr) OPTIMIZEdevl (devl) OPTIMIZEprod (prod)        \
      OPTIMIZEname (name)
#endif

#ifndef OPTCOUNTER
#define OPTCOUNTER(id, text) OPTCOUNTERid (id) OPTCOUNTERtext (text)
#endif

OPTIMIZE ("dcr", dcr, TRUE, TRUE, "dead code removal")
OPTIMIZE ("cf", cf, TRUE, FALSE, "constant folding")
OPTIMIZE ("lir", lir, TRUE, FALSE, "loop invariant removal")
OPTIMIZE ("inl", inl, TRUE, TRUE, "function inlining")
OPTIMIZE ("lur", lur, TRUE, FALSE, "loop unrolling")
OPTIMIZE ("wlur", wlur, TRUE, FALSE, "with-loop unrolling")
OPTIMIZE ("lus", lus, FALSE, FALSE, "loop unswitching")
OPTIMIZE ("cse", cse, TRUE, FALSE, "common subexpression elimination")
OPTIMIZE ("dfr", dfr, TRUE, TRUE, "dead function removal")
OPTIMIZE ("wlt", wlt, FALSE, FALSE, "with-loop transformation")
OPTIMIZE ("wlf", wlf, TRUE, FALSE, "with-loop folding")
OPTIMIZE ("ive", ive, TRUE, TRUE, "index vector elimination")
OPTIMIZE ("ae", ae, FALSE, FALSE, "array elimination")
OPTIMIZE ("dl", dl, FALSE, FALSE, "distributive law")
OPTIMIZE ("rco", rco, TRUE, TRUE, "reference count optimization")
OPTIMIZE ("uip", uip, TRUE, TRUE, "update-in-place analysis")
OPTIMIZE ("dr", dr, TRUE, TRUE, "data reuse")
OPTIMIZE ("ipc", ipc, TRUE, TRUE, "Inplace Computation")
OPTIMIZE ("tsi", tsi, FALSE, FALSE, "with-loop tile size inference")
OPTIMIZE ("tsp", tsp, FALSE, FALSE, "with-loop tile size pragmas")
OPTIMIZE ("wlpg", wlpg, TRUE, FALSE, "with-loop partition generation")
OPTIMIZE ("cvp", cvp, TRUE, TRUE, "constant and variable propagation")
OPTIMIZE ("srf", srf, TRUE, TRUE, "static reuse / static free")
OPTIMIZE ("phm", phm, TRUE, TRUE, "private heap management")
OPTIMIZE ("aps", aps, TRUE, TRUE, "arena preselection (for PHM)")
OPTIMIZE ("dao", dao, TRUE, TRUE, "descriptor allocation opt. (for PHM)")
OPTIMIZE ("msca", msca, TRUE, TRUE, "memory size cache adjustment (for PHM)")
OPTIMIZE ("ap", ap, FALSE, FALSE, "array padding")
OPTIMIZE ("apl", apl, FALSE, FALSE, "array placement")
OPTIMIZE ("wls", wls, TRUE, TRUE, "with-loop scalarization")
OPTIMIZE ("al", al, TRUE, TRUE, "associative law")
OPTIMIZE ("etc", etc, TRUE, TRUE, "typeconv elimination")
OPTIMIZE ("sp", sp, FALSE, FALSE, "selection propagation")
OPTIMIZE ("wlsimp", wlsimp, TRUE, FALSE, "with-loop simplification")
OPTIMIZE ("wlfs", wlfs, FALSE, FALSE, "with-loop fusion")
OPTIMIZE ("lro", lro, TRUE, TRUE, "loop reuse optimization")
OPTIMIZE ("tup", tup, TRUE, TRUE, "type upgrade")
OPTIMIZE ("sisi", sisi, FALSE, FALSE, "signature simplification")
OPTIMIZE ("rtup", rtup, FALSE, FALSE, "reverse type upgrade")
OPTIMIZE ("sfd", sfd, FALSE, FALSE, "static function dispatch (tup)")
OPTIMIZE ("fsp", fsp, FALSE, FALSE, "function specilization (tup)")
OPTIMIZE ("esd", esd, FALSE, FALSE, "eliminate substraction and division")

OPTCOUNTER (dead_expr, "dead assignment(s) removed")
OPTCOUNTER (dead_var, "dead variable declaration(s) removed")
OPTCOUNTER (dead_fun, "dead function(s) removed")
OPTCOUNTER (cf_expr, "primitive function application(s) eliminated")
OPTCOUNTER (lir_expr, "loop invariant expression(s) moved")
OPTCOUNTER (wlir_expr, "with-loop invariant expression(s) moved")
OPTCOUNTER (inl_fun, "function(s) inlined")
OPTCOUNTER (elim_arrays, "array(s) eliminated")
OPTCOUNTER (lunr_expr, "loop(s) unrolled")
OPTCOUNTER (wlunr_expr, "with-loop(s) unrolled")
OPTCOUNTER (cse_expr, "common subexpression(s) eliminated")
OPTCOUNTER (wlf_expr, "with-loop(s) folded")
OPTCOUNTER (wlt_expr, "with-loop(s) transformed")
OPTCOUNTER (wls_expr, "with-loop(s) scalarized")
OPTCOUNTER (wlfs_expr, "with-loop(s) fused")
OPTCOUNTER (al_expr, "associative law optimization(s)")
OPTCOUNTER (dl_expr, "distributive law optimization(s)")
OPTCOUNTER (etc_expr, "type conversions eliminated")
OPTCOUNTER (ap_padded, "array type(s) padded")
OPTCOUNTER (ap_unsupported, "array type(s) unsupported by padding")
OPTCOUNTER (cvp_expr, "value(s) and variable(s) propagated")
OPTCOUNTER (tup_tu_expr, "type(s) upgraded")
OPTCOUNTER (tup_wdp_expr, "wrapped function(s) specialized")
OPTCOUNTER (tup_fdp_expr, "user function(s) dispatched")
OPTCOUNTER (tup_rtu_expr, "type(s) upgraded reversely")
OPTCOUNTER (tup_fsp_expr, "user functions(s) dispatched")
OPTCOUNTER (sisi_expr, "constant function argument(s) removed")

#undef OPTIMIZEstr
#undef OPTIMIZEabbr
#undef OPTIMIZEdevl
#undef OPTIMIZEprod
#undef OPTIMIZEname
#undef OPTIMIZE

#undef OPTCOUNTERid
#undef OPTCOUNTERtext
#undef OPTCOUNTER
