#!/bin/bash

# Run one unit test on sac source program $1, and check results.

source UnitTestRunGrep1.config

function getargs
{
 grepstr=$1
 noopt=$2
 doopt=$3
 s1=$4
 s2=$5
 s3=$6
 s4=$7
 s5=$8
 s6=$9
}
 ## HUSH         echo RunGrep1 testing: $1
 # Extract result-checking args from source file
 args=`grep RESULT: $1`
 args=${args#/* RESULT: }
 args=${args%%\*/}
 getargs $args

 # If user specified FILTER, get its parameter, so we
 # can extract the relevant function text from the IL file.
 fil=`grep FILTER: $1`
 fil=${fil#/* FILTER: }
 fil=${fil%%\*/}
 # Ditch trailing blanks
 fil=${fil%%\ }

 nono='no-no'
 breakpoint='-bopt:dcr5 '

 # We can probably scrap 99% of the following filter code,
 # now that -printfunsets is here.
 #
 # If no-no filter, keep all code
 # If no filter, filter main()
 if [ -n "$fil" ]; then
        #filterop=UnitTestExtractFunction\ $fil
        filterop=cat
        filter=\"$fil\"
        bopt=" -printfunsets d -printfun $fil "
 else
        fil=main  
        filterop=cat
        # Ignore default filtering, because -printfun now does that for us.
        # filterop=UnitTestExtractFunction\ _MAIN::main 
        # filter=\"$fil\"
        bopt=" -printfunsets d -printfun main "
 fi 

 if [ x$fil =  x$nono ]; then
         filterop=cat
         filter=\"$fil\"
         bopt=
 fi

bopt=$breakpoint$bopt
              
logfile="logGreps"$( sac2c-p -V | grep rev | cut -f 4 -d\ )
echo $( sac2c-p -V) >> $logfile
echo $( date)       >> $logfile

 # Test with opts disabled
 sac2c $1 -v0 $bopt $optsoff $s1 $s2 $s3 $s4 $s5 $s6 > crudn.$1.out
 cat crudn.$1.out | $filterop | UnitTestRunCounts $1 "$optsoff" $grepstr $noopt    | tee -a $logfile
 cat crudn.$1.out | $filterop > crudn
 # Test with opts enabled
 sac2c $1 -v0 $bopt $optson  $s1 $s2 $s3 $s4 $s5 $s6 > crudd.$1.out
 cat crudd.$1.out | $filterop | UnitTestRunCounts $1 "$optson" $grepstr $doopt     | tee -a $logfile
 cat crudd.$1.out | $filterop >crudd
 # This test leaves crudn.$1 and crudd.$1 around for possible later
 # inspection by the puzzled programmer.

