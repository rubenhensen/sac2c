/******************************************************************************
 * 
 * file:  sac2crc
 * 
 * description:
 *
 *  sac2c public configuration file generated from sac2crc.in by configure.
 *
 ******************************************************************************/
 


/*******************************************************************************
 *
 * Target default: default settings for all configuration entries
 *
 */

target default:
 
CC               :=  "@CC@"
CCFLAGS          :=  "@RCCCFLAGS@"
CCDIR            :=  "-I$SACBASE/runtime/ "
                     "-L$SACBASE/runtime/"
LDFLAGS          :=  "@RCLDFLAGS@"
CCLINK           :=  ""    
CCMTLINK         :=  "@CCMTLINK@"
 
OPT_O0           :=  "@OPT_O0@"
OPT_O1           :=  "@OPT_O1@"
OPT_O2           :=  "@OPT_O2@"
OPT_O3           :=  "@OPT_O3@"
OPT_g            :=  "@OPT_g@"
 
CPP_STDIN        :=  "@CPP@"
CPP_FILE         :=  "@CPPFILE@"
OPT_D            :=  -D
OPT_I            :=  -I
TAR_CREATE       :=  "tar cf"
TAR_EXTRACT      :=  "tar xf"
AR_CREATE        :=  "ar cr"
LD_DYNAMIC       :=  "@LD_DYNAMIC@"
RANLIB           :=  "@RANLIB@"
MKDIR            :=  mkdir
RMDIR            :=  "rm -rf"
CHDIR            :=  cd
CAT              :=  cat
MOVE             :=  mv
RSH              :=  rsh
DUMP_OUTPUT      :=  ">/dev/null 2>&1"
 
LIBPATH          :=  "$SACBASE/runtime:"
                     "$SACBASE/stdlib/modules/structures/lib:"
                     "$SACBASE/stdlib/modules/numerical/lib:"
                     "$SACBASE/stdlib/world/system/lib:"
                     "$SACBASE/stdlib/world/stdio/lib:"
                     "$SACBASE/stdlib/classes/random:"
IMPPATH          :=  "$SACBASE/stdlib/modules/structures:"
                     "$SACBASE/stdlib/modules/numerical:"
                     "$SACBASE/stdlib/world/system:"
                     "$SACBASE/stdlib/world/stdio:"
                     "$SACBASE/stdlib/classes/random:"
EXTLIBPATH       :=  ""
 
TMPDIR           :=  "/tmp"

CACHE1_SIZE      :=  0
CACHE1_LINE      :=  0
CACHE1_ASSOC     :=  0
CACHE1_WRITEPOL  :=  "default"
CACHE1_MSCA      :=  0

CACHE2_SIZE      :=  0
CACHE2_LINE      :=  0
CACHE2_ASSOC     :=  0
CACHE2_WRITEPOL  :=  "default"
CACHE2_MSCA      :=  0

CACHE3_SIZE      :=  0
CACHE3_LINE      :=  0
CACHE3_ASSOC     :=  0
CACHE3_WRITEPOL  :=  "default"
CACHE3_MSCA      :=  0
 
 
 
/*******************************************************************************
 *******************************************************************************
 *******************************************************************************
 *** 
 ***  TARGETS  for Alternate Compilers:
 ***
 ***/

/*******************************************************************************
 *
 * Target suncc: use the Sun C compiler instead of gcc
 *
 */

target suncc:

CC             :=  cc
CCFLAGS        :=  "-dalign -xsafe=mem"
 
OPT_O0         :=  ""
OPT_O1         :=  -xO2
OPT_O2         :=  -xO4
OPT_O3         :=  "-fast -xvector=simd"
 
SYSTEM_LIBPATH :=  "/usr/ccs/bin:"
                   "/usr/ccs/lib:"
                   "/lib:"
                   "/usr/lib"


/*******************************************************************************
 *
 * Target intelcc: use the Intel C compiler instead of gcc
 *
 */

target intelcc:

CC             := icc
CCFLAGS        := -static

target intelcc_sse2::intelcc:

CCFLAGS        += -msse2

target intelcc_fast::intelcc:

CCFLAGS        += -fast



/*******************************************************************************
 *******************************************************************************
 *******************************************************************************
 ***
 ***  TARGETS  for Alternate Memory Allocators:
 ***
 ***/

 /*******************************************************************************
 *
 * Target hoard: use the Hoard memory allocator instead of regular malloc
 *
 * NOTE: This requires the proper installation of the Hoard memory allocator!
 */

target hoard:

CCMTLINK        :=  "-lhoard -lpthread -lthread -lrt"


/*******************************************************************************
 *
 * Target ptmalloc: use the ptmalloc implementation instead of regular malloc
 *
 * NOTE: This requires the proper installation of the PTmalloc memory allocator!
 */

target ptmalloc:

CCMTLINK        +=  -lptmalloc


/*******************************************************************************
 *
 * Target mtmalloc: use the Sun mtmalloc library instead of regular malloc
 *
 */

target mtmalloc:

CCMTLINK        +=  -lmtmalloc


/*******************************************************************************
 *
 * Target gnumalloc: use the GNU glibc library instead of Solaris libc
 *
 * NOTE: This is mostly intended to test the GNU memory allocator!
 */

target gnumalloc:

CCMTLINK        +=  -lglib


 
/*******************************************************************************
 *******************************************************************************
 *******************************************************************************
 *** 
 ***  TARGETS  for Individual Architectures / Machines:
 ***
 ***/

@RCSUN@
@RCX86@
@RCALPHA@
@RCMAC@


