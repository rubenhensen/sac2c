/******************************************************************************
 * 
 * file:  sac2crc
 * 
 * description:
 *
 *  sac2c public configuration file for SOLARIS_SPARC
 *
 ******************************************************************************/
 


/*******************************************************************************
 *
 * Target default: default settings for all configuration entries
 *
 */

target default:
 
CC               :=  gcc
CCFLAGS          :=  "-Wall -Wno-unused -fno-builtin"
CCDIR            :=  "-I$SACBASE/runtime/ "
                   "-L$SACBASE/runtime/"
LDFLAGS          :=  ""
CCLINK           :=  ""    
CCMTLINK         :=  -lpthread
 
OPT_O0           :=  ""
OPT_O1           :=  -O1
OPT_O2           :=  -O2
OPT_O3           :=  -O3
OPT_g            :=  -g
 
CPP_STDIN        :=  "cpp -C"
CPP_FILE         :=  "gcc -E -C -x c"
OPT_D            :=  -D
TAR_CREATE       :=  "tar cf"
TAR_EXTRACT      :=  "tar xf"
AR_CREATE        :=  "ar cr"
RANLIB           :=  ""
MKDIR            :=  mkdir
RMDIR            :=  "rm -rf"
CHDIR            :=  cd
CAT              :=  cat
MOVE             :=  mv
RSH              :=  rsh
DUMP_OUTPUT      :=  ">/dev/null 2>&1"
 
STDLIB_DECPATH   :=  "$SACBASE/stdlib/modules/structures:"
                     "$SACBASE/stdlib/modules/numerical:"
                     "$SACBASE/stdlib/classes/random:"
                     "$SACBASE/stdlib/world/stdio:"
                     "$SACBASE/stdlib/world/system:"
                     "$SACBASE/stdlib/world/x-window:"
                     "$SACBASE/stdlib/hidden"
 
STDLIB_LIBPATH   :=  "$SACBASE/stdlib/modules/structures/lib:"
                     "$SACBASE/stdlib/modules/numerical/lib:"
                     "$SACBASE/stdlib/classes/random/lib:"
                     "$SACBASE/stdlib/world/stdio/lib:"
                     "$SACBASE/stdlib/world/system/lib:"
                     "$SACBASE/stdlib/world/x-window/lib:"
                     "$SACBASE/stdlib/hidden/lib"
 
SYSTEM_LIBPATH   :=  "/usr/ccs/bin:"
                     "/usr/ccs/lib:"
                     "/opt/gnu/lib:"
                     "/lib:"
                     "/usr/lib:"
                     "/home/sacbase/efence"

TMPDIR           :=  "/var/tmp"

CACHE1_SIZE      :=  0
CACHE1_LINE      :=  0
CACHE1_ASSOC     :=  0
CACHE1_WRITEPOL  :=  "default"
CACHE1_MSCA      :=  0

CACHE2_SIZE      :=  0
CACHE2_LINE      :=  0
CACHE2_ASSOC     :=  0
CACHE2_WRITEPOL  :=  "default"
CACHE2_MSCA      :=  0

CACHE3_SIZE      :=  0
CACHE3_LINE      :=  0
CACHE3_ASSOC     :=  0
CACHE3_WRITEPOL  :=  "default"
CACHE3_MSCA      :=  0
 
 
 
/*******************************************************************************
 *
 * Target suncc: use the Sun C compiler instead of gcc
 *
 */

target suncc:

CC             :=  cc
CCFLAGS        :=  "-dalign -fsimple -xsafe=mem"
 
OPT_O0         :=  ""
OPT_O1         :=  -xO2
OPT_O2         :=  -xO4
OPT_O3         :=  -xO5
 
SYSTEM_LIBPATH :=  "/usr/ccs/bin:"
                   "/usr/ccs/lib:"
                   "/lib:"
                   "/usr/lib"


 
 
 
/*******************************************************************************
 *
 * Targets for the specification of different cache architectures
 *
 */

target sparc_4:

CACHE1_SIZE    :=  8
CACHE1_LINE    :=  16
CACHE1_ASSOC   :=  1


target sparc_5:

CACHE1_SIZE    :=  8
CACHE1_LINE    :=  16
CACHE1_ASSOC   :=  1


target sparc_20_61:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  4


target sparc_20_71:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  4

CACHE2_SIZE    :=  1024
CACHE2_LINE    :=  32
CACHE2_ASSOC   :=  1


target ultra2:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  1

CACHE2_SIZE    :=  512
CACHE2_LINE    :=  64
CACHE2_ASSOC   :=  1

target ultra2i:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  1

CACHE2_SIZE    :=  2048
CACHE2_LINE    :=  64
CACHE2_ASSOC   :=  1


target ultra3:

CACHE1_SIZE    :=  64
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  4

CACHE2_SIZE    :=  8192
CACHE2_LINE    :=  256
CACHE2_ASSOC   :=  1


target ultra_entr3000:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  1

CACHE2_SIZE    :=  512
CACHE2_LINE    :=  64
CACHE2_ASSOC   :=  1


target ultra2_entr4000:

CACHE1_SIZE    :=  16
CACHE1_LINE    :=  32
CACHE1_ASSOC   :=  1
CACHE1_MSCA    :=  25

CACHE2_SIZE    :=  1024
CACHE2_LINE    :=  64
CACHE2_ASSOC   :=  1
CACHE2_MSCA    :=  3


target ultra2_entr450:

CACHE1_SIZE     :=  16
CACHE1_LINE     :=  32
CACHE1_ASSOC    :=  1
CACHE1_WRITEPOL :=  "write_around"

CACHE2_SIZE     :=  4096
CACHE2_LINE     :=  64
CACHE2_ASSOC    :=  1
CACHE2_WRITEPOL :=  "write_around"



/*******************************************************************************
 *
 * Target hoard: use the Hoard memory allocator instead of regular malloc
 *
 * NOTE: This requires the proper installation of the Hoard memory allocator!
 */

target hoard:

CCMTLINK        :=  "-lhoard -lpthread -lthread -lrt"


/*******************************************************************************
 *
 * Target ptmalloc: use the ptmalloc implementation instead of regular malloc
 *
 * NOTE: This requires the proper installation of the PTmalloc memory allocator!
 */

target ptmalloc:

CCMTLINK        +=  -lptmalloc


/*******************************************************************************
 *
 * Target mtmalloc: use the Sun mtmalloc library instead of regular malloc
 *
 */

target mtmalloc:

CCMTLINK        +=  -lmtmalloc


/*******************************************************************************
 *
 * Target gnumalloc: use the GNU glibc library instead of Solaris libc
 *
 * NOTE: This is mostly intended to test the GNU memory allocator!
 */

target gnumalloc:

CCMTLINK        +=  -lglib



/*******************************************************************************
 *
 * All remaining targets are specific to machines at the 
 * 
 * Department of Computer Science and Applied Mathematics
 *  of the
 * University of Kiel
 *
 * They are of no use outside of this facility but may give you an idea how
 * to use the target mechanism to make life simpler.
 *   
 *******************************************************************************/


/*******************************************************************************
 *
 * Specific machine targets using gcc
 *
 *   
 */

target tummy::ultra2i:

target cheops::ultra2i:

target twice::sparc_20_71:

target dali::ultra2:

target blitz::ultra_entr3000:

target picard::ultra2_entr4000:

target idefix:: ultra2_entr450:


/*******************************************************************************
 *
 * Specific machine targets using Sun cc
 *
 */

target tummy_cc::suncc::tummy:

CCFLAGS        +=  "-xtarget=ultra2i -xcache=16/32/1:2048/64/1"


target cheops_cc::suncc::cheops:

CCFLAGS        +=  "-xtarget=ultra2i -xcache=16/32/1:2048/64/1"


target twice_cc::suncc::twice:

CCFLAGS        +=  "-xtarget=ss20/71"


target dali_cc::suncc::dali:

CCFLAGS        +=  "-xtarget=ultra2i"


target blitz_cc::suncc::blitz:

CCFLAGS        +=  "-xtarget=ultra -xcache=16/32/1:512/64/1"


target picard_cc::suncc::picard:

CCFLAGS        +=  "-xtarget=ultra2 -xcache=16/32/1:1024/64/1"


target idefix_cc::suncc::idefix:

CCFLAGS        +=  "-xtarget=ultra2 -xcache=16/32/1:4096/64/1"




/*******************************************************************************
 *
 * Specific machine targets using SUN mtmalloc
 *
 */

target picard_mtmalloc::picard::mtmalloc:

target picard_cc_mtmalloc::picard_cc::mtmalloc:



/*******************************************************************************
 *
 * Specific machine targets using Hoard
 *
 */

target picard_hoard::picard::hoard:

target picard_cc_hoard::picard_cc::hoard:



/*******************************************************************************
 *
 * Specific machine targets using GNU malloc
 *
 */

target picard_gnumalloc::picard::gnumalloc:

target picard_cc_gnumalloc::picard_cc::gnumalloc:



/*******************************************************************************
 *
 * Specific machine targets using ptmalloc
 *
 */

target picard_ptmalloc::picard::ptmalloc:

target picard_cc_ptmalloc::picard_cc::ptmalloc:








