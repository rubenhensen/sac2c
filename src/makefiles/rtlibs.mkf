ifeq ($(TARGET), )
$(error ** Error: no TARGET specified)
endif

PROJECT_ROOT = .
include src/makefiles/config.mkf

##############################################################################
#
# Common tool definitions
#

SAC2C_BASE = bin/sac2c
SAC2C_T = $(SAC2C_BASE) -target $(TARGET)

TARGET_ENV := $(shell $(SAC2C_T) -CTARGET_ENV)

ifeq ($(TARGET_ENV),)

$(warning ** Warning: $(SAC2C_BASE) does not appear to work - cannot determine SBI data, skipping)
all clean install:

else

SBI := $(shell $(SAC2C_T) -CSBI)
OBJEXT := $(shell $(SAC2C_T) -COBJEXT)
MODEXT := $(shell $(SAC2C_T) -CMODEXT)
TREEEXT := $(shell $(SAC2C_T) -CTREE_DLLEXT)
USE_PHM_API := $(shell $(SAC2C_T) -CUSE_PHM_API)

ifeq ($(SBI),XXXXX)
$(error ** Error: no SBI specified for target '$(TARGET)')
endif
ifeq ($(TARGET_ENV),XXXXX)
$(error ** Error: no TARGET_ENV specified for target '$(TARGET)')
endif

#
# Target directories
#
LIBDIR := $(TARGET_ENV)/$(SBI)
TREEDIR := tree/$(TARGET_ENV)
LIBBASE = lib
PRELUDEBASE = lib/prelude
BINDIR = bin

#
# Make targets
#
SACLIBS = \
  $(LIBDIR)/libsac$(MODEXT) \
  $(LIBDIR)/libsacphm.diag$(MODEXT) \
  $(LIBDIR)/libsacphm$(MODEXT) \
  $(LIBDIR)/libsacphmc.diag$(MODEXT) \
  $(LIBDIR)/libsacphmc$(MODEXT)
PRELUDELIBS = $(LIBDIR)/libsacpreludeMod$(MODEXT)
PRELUDETREES = $(TREEDIR)/libsacpreludeTree$(TREEEXT)

LIBTARGETS = $(SACLIBS:%=$(LIBBASE)/%)
PRELUDETARGETS = $(PRELUDELIBS:%=$(PRELUDEBASE)/%) $(PRELUDETREES:%=$(PRELUDEBASE)/%)
BINTARGETS = \
  $(BINDIR)/csima \
  $(BINDIR)/csimt

TARGETS = $(LIBTARGETS) $(PRELUDETARGETS) $(BINTARGETS)

all: $(TARGETS)

##############################################################################
#
# Library dependencies and sources
#

CDEPS = $(wildcard include/*.h src/include/*.h src/libsac/*/*.h src/libsacphm/*/*.h)
SACDEPS = include/sac.h include/sac_serialize.h
EXTRAINC = -Iinclude -Isrc/include -Isrc/libsacphm/heap

libsac_sources = \
  src/libsac/cachesim/access_detailed.c \
  src/libsac/cachesim/access_simple.c \
  src/libsac/cachesim/basic.c \
  src/libsac/essentials/commandline.c \
  src/libsac/essentials/message.c \
  src/libsac/essentials/misc.c \
  src/libsac/essentials/profile.c \
  src/libsac/essentials/trace.c \
  src/libsac/interface/sacarg.c \
  src/libsac/interface/sacargconvert.c \
  src/libsac/interface/sacmt.c \
  src/libsac/mt/hwloc_data.c \
  src/libsac/mt/mt.c \
  src/libsac/mt_beehive/mt_beehive.c \
  src/libsac/mt_lpel/mt_lpel_std.c \
  src/libsac/mt_lpel/mt_lpel_trace.c \
  src/libsac/mt_omp/mt_omp.c \
  src/libsac/mt_pth/mt_pth_std.c \
  src/libsac/mt_pth/mt_pth_trace.c \
  src/libsac/mutc/reference_counting.c \
  src/libsac/rtspec/controller.c \
  src/libsac/rtspec/registry.c \
  src/libsac/rtspec/reqqueue.c

ifeq ($(USE_PHM_API), 1)

$(info ** INFO: target '$(TARGET)' does support PHM.)

libsacphm_sources = \
  src/libsacphm/compat/malloc.c \
  src/libsacphm/diag/diagnostics.c \
  src/libsacphm/heap/internal.c \
  src/libsacphm/heap/large_chunks.c \
  src/libsacphm/heap/setup.c \
  src/libsacphm/heap/small_chunks.c \
  src/libsacphm/heap/thread_ids.c \
  src/libsacphm/heap/wrapper.c \
  src/libsacphm/opt/placement.c

else

$(info ** INFO: target '$(TARGET)' does *not* support PHM.)

libsacphm_sources = \
  src/libsacphm/empty/empty.c

endif

libsacphmc_sources = \
  src/libsacphmc/wrappers/nophm.c

##############################################################################
#
# Magic "HIDE" definitions
#
HIDE = @
HIDEc = $(HIDEc_$(HIDE))
HIDEc_ =
HIDEc_0 =
HIDEc_@ = @echo "  CC $@";
HIDEl = $(HIDEl_$(HIDE))
HIDEl_ =
HIDEl_0 =
HIDEl_@ = @echo "  LD $@";
HIDEs = $(HIDEs_$(HIDE))
HIDEs_ =
HIDEs_0 =
HIDEs_@ = @echo "  SAC2C $@";
HIDEv = $(HIDEv_$(HIDE))
HIDEv_ = $(HIDEv_0)
HIDEv_0 = -v3
HIDEv_@ = -v0
HIDEat = $(HIDEat_$(HIDE))
HIDEat_ =
HIDEat_0 =
HIDEat_@ = @

##############################################################################
#
# Build rules for the libraries
#

SAC2C = $(SAC2C_T) -Xc "$(EXTRAINC)" -Xtc "$(EXTRAINC)"
SAC2C_NOTARGET = $(SAC2C_BASE) -Xc "$(EXTRAINC)" -Xtc "$(EXTRAINC)"

.PRECIOUS: %-$(TARGET)$(OBJEXT) %-$(TARGET).diag$(OBJEXT)

%-$(TARGET)$(OBJEXT): %.c $(CDEPS)
	$(HIDEc)$(SAC2C) $(HIDEv) -noprelude -cc ccmod -o $@ $<

%-$(TARGET).diag$(OBJEXT): %.c $(CDEPS)
	$(HIDEc)$(SAC2C) $(HIDEv) -noprelude -cc ccmod -Xc -DDIAG -o $@ $<

p = %
.SECONDEXPANSION:

$(LIBBASE)/$(LIBDIR)/%$(MODEXT): \
	$$(patsubst $$p.c,$$p-$(TARGET)$$(suffix $$*)$(OBJEXT),$$($$(basename $$*)_sources))
	$(HIDEat)$(MKDIR_P) $(@D)
	$(HIDEl)$(SAC2C) $(HIDEv) -noprelude -cc ldmod -o $@ $^

$(PRELUDEBASE)/$(TREEDIR)/libsacpreludeTree$(TREEEXT) \
	$(PRELUDEBASE)/$(LIBDIR)/libsacpreludeMod$(MODEXT): \
	src/libsacprelude/sacprelude.sac $(SACDEPS)
	$(HIDEat)$(MKDIR_P) $(PRELUDEBASE)
	$(HIDEs)$(SAC2C) $(HIDEv) -noprelude -o $(PRELUDEBASE) $<

##############################################################################
#
# Special targets bin/csima, bin/csimt: these depend on libsac, like
# compiled SAC programs. So we compile and link them using sac2c,
# which knows best about where to find libsac.
#

src/tools/csima/csima.o: src/tools/csima/csima.c $(CDEPS)
	$(HIDEc)$(SAC2C_NOTARGET) -target seq $(HIDEv) -cc ccprog -o $@ $<

src/tools/csimt/csimt.o: src/tools/csimt/csimt.c $(CDEPS)
	$(HIDEc)$(SAC2C_NOTARGET) -target seq $(HIDEv) -cc ccprog -o $@ $<

$(BINDIR)/csima: src/tools/csima/csima.o $(LIBTARGETS)
	$(HIDEl)$(SAC2C_NOTARGET) -target seq $(HIDEv) -L $(LIBBASE) -cc ldprog -o $@ $<

$(BINDIR)/csimt: src/tools/csimt/csimt.o $(LIBTARGETS)
	$(HIDEl)$(SAC2C_NOTARGET) -target seq $(HIDEv) -L $(LIBBASE) -cc ldprog -o $@ $<

##############################################################################
#
# Install rules
#
install:
	$(INSTALL) -d "$(MODPATH_CONF)"
	$(INSTALL) -d "$(RTPATH_CONF)"
	$(INSTALL) -d "$(TREEPATH_CONF)"
	for i in $(SACLIBS) $(PRELUDELIBS); do \
	   if test -r $(LIBBASE)/$$i; then \
	      dst="$(RTPATH_CONF)"/$$i && \
	      $(INSTALL) -d "$(RTPATH_CONF)"/`dirname $$i` && \
	      $(INSTALL_PROGRAM) $(LIBBASE)/$$i "$(RTPATH_CONF)"/$$i; \
	   else \
	      dst="$(MODPATH_CONF)"/$$i && \
	      $(INSTALL) -d "$(MODPATH_CONF)"/`dirname $$i` && \
	      $(INSTALL_PROGRAM) $(PRELUDEBASE)/$$i "$(MODPATH_CONF)"/$$i; \
	   fi && \
	   $(ECHO) "$$dst" >>.uninstall; \
	done
	for i in $(PRELUDETREES); do \
	   dst="$(TREEPATH_CONF)"/$$i && \
	   $(ECHO) "$$dst" >>.uninstall && \
	   $(INSTALL) -d "$(TREEPATH_CONF)"/`dirname $$i` && \
	   $(INSTALL_PROGRAM) $(PRELUDEBASE)/$$i "$(TREEPATH_CONF)"/$$i; \
	done

##############################################################################
#
# Clean rules
#
clean:
	rm -f $(TARGETS)
	rm -f src/tools/csima/csimt.o src/tools/csima/csimt.o
	rm -f $(foreach x, \
		   $(patsubst $(LIBDIR)/%$(MODEXT),%,$(LIBTARGETS)), \
		   $(patsubst %.c, %-$(TARGET)$(suffix $(x))$(OBJEXT), \
			$($(basename $(x))_sources)))

endif
