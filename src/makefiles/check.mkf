#
# $Id$
#


#######################################################################################
#
# Comment:
#
# This makefile is never called directly by the user. Instead, it is included at the
# end of other makefiles to provide the necessary rules for a consistent checking
# mechanism.
#
# Currently we check:
#  - whether we need to re-configure first
#  - whether we need to create a new configure script first


CONFIGURED   := $(PROJECT_ROOT)/src/makefiles/config.mkf \
                $(PROJECT_ROOT)/src/include/config.h \
                $(PROJECT_ROOT)/include/sac2crc

AUTOHEADERED := $(PROJECT_ROOT)/src/include/config.h.in

AUTOCONFED   := $(PROJECT_ROOT)/configure


.PHONY: checks

checks: $(CONFIGURED)


#######################################################################################
#
# Pattern rules for autoconf/autoheader and configure
#
#  Only in this makefile we use 'echo' rather than $(ECHO) because we may need to
#  perform the checks on a pristine working copy. In this case we cannot include
#  config.mkf as it does not yet exist and hence we do not have a definition for
#  $(ECHO).
#

%: %.ac
	@echo ""
	@echo "************************************************************"
	@echo "* Unable to build $(PROJECT_NAME) $(SUBPROJECT) !"
	@echo "* Please, run autoconf and autoheader first !"
	@echo "* You may do so by typing:"
	@echo "*  make -C $(PROJECT_ROOT) config"
	@echo "************************************************************"
	@echo ""

%: %.in
	@echo ""
	@echo "************************************************************"
	@echo "* Unable to build $(PROJECT_NAME) $(SUBPROJECT) !"
	@echo "* Please, run $(PROJECT_ROOT)/configure first !"
	@echo "************************************************************"
	@echo ""
	@ exit 1

