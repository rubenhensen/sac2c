#
# $Id$
#


#######################################################################################
#
# Comment:
#
# This makefile is never called directly by the user. Instead, it is included at the
# end of other makefiles to provide the necessary rules for a consistent checking
# mechanism.
#
# Currently we check:
#  - whether we need to re-configure first
#  - whether we need to create a new configure script first
#  - whether a revision number file exists; if not, it is created


CONFIGURED   := $(PROJECT_ROOT)/src/makefiles/config.mkf \
                $(PROJECT_ROOT)/src/include/config.h \
                $(PROJECT_ROOT)/setup/sac2crc

AUTOHEADERED := $(PROJECT_ROOT)/src/include/config.h.in

AUTOCONFED   := $(PROJECT_ROOT)/setup/configure


#######################################################################################
#
# Dummy rules:
#

.PHONY: checks $(PROJECT_ROOT)/.revision.txt.PHONY


#######################################################################################
#
# Start rules:
#

checks: $(CONFIGURED) $(PROJECT_ROOT)/.revision.txt


#######################################################################################
#
# Pattern rules for autoconf/autoheader and configure
#
#  Only in this makefile we use 'echo' rather than $(ECHO) because we may need to
#  perform the checks on a pristine working copy. In this case we cannot include
#  config.mkf as it does not yet exist and hence we do not have a definition for
#  $(ECHO).
#

%: %.ac
	@echo ""
	@echo "************************************************************"
	@echo "* Unable to build $(PROJECT_NAME) $(SUBPROJECT) !"
	@echo "* Please, run autoconf and autoheader first !"
	@echo "* You may do so by typing:"
	@echo "*  make -C $(PROJECT_ROOT) config"
	@echo "************************************************************"
	@echo ""

%: %.in
	@echo ""
	@echo "************************************************************"
	@echo "* Unable to build $(PROJECT_NAME) $(SUBPROJECT) !"
	@echo "* Please, run $(PROJECT_ROOT)/configure first !"
	@echo "************************************************************"
	@echo ""
	@ exit 1

#$(PROJECT_ROOT)/.revision.txt:
#	@ if which svn > /dev/null ;  \
#          then svn info | grep Revision: | sed -e 's/Revision: //g' > $@ ; \
#          else if [ ! -f $@ ] ; \
#                 then echo "???" > $@ ; \
#               fi ; \
#          fi

$(PROJECT_ROOT)/.revision.txt.PHONY:

# Use indirect phony and non mod time changing rule ( when version unchanged)
# to prevent needless rebuilds of the compiler.
$(PROJECT_ROOT)/.revision.txt: $(PROJECT_ROOT)/.revision.txt.PHONY
	@ if [ ! -f $@ ];     \
	  then                \
	    echo "?????" >$@; \
	  fi
	@ if which svnversion > /dev/null;          \
	  then                                      \
	    svnversion | sed -e 's/M/ MODIFIED/g'   \
              | sed -e 's/S/ SWITCHED/g' > $@.new ; \
	  fi 
	@ if which diff >/dev/null;         \
	  then                              \
            if ! diff $@ $@.new >/dev/null; \
	      then mv $@.new $@;            \
	      else rm $@.new; 	            \
            fi	                            \
          else rm $@.new;                   \
          fi                                          
