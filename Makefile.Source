#
# $Id: $
#
#

###############################################################################
#
# Makefile for sac2c source directories
#
# This Makefile is copied on demand into source directories.
# Be sure not to edit these copies.
#
###############################################################################


###############################################################################
#
# Calling conventions:
#
#  Start rules: 
#    devel  compile developer code (default)
#    prod   compile product code
#    clean  cleanup derived files
#
#  Parameters:
#    CHECK_DEPS="no"  de-activate dependency checking meachanism
#    HIDE=""          show important commands issued by make (debugging)
#
###############################################################################


###############################################################################
#
# General settings
#

PROJECT_ROOT = ../..

include $(PROJECT_ROOT)/Makefile.Config
include $(PROJECT_ROOT)/Makefile.Targets

TARGET := $(notdir $(PWD))

CHECK_DEPS := yes
HIDE := @


###############################################################################
#
# Dummy rules
#

.PHONY: all devel prod  clean cleanprod



###############################################################################
#
# Start rules
#

all: devel

devel:
	@$(ECHO) ""
	@$(ECHO) "Making current subdirectory (developer version)"
	@$(MAKE) -C $(PROJECT_ROOT) -f Makefile.Sac2c \
                 TARGET="$(TARGET)" CHECK_DEPS="$(CHECK_DEPS)" HIDE="$(HIDE)" \
                 makesubdir.devel

prod:
	@$(ECHO) ""
	@$(ECHO) "Making current subdirectory (product version)"
	@$(MAKE) -C $(PROJECT_ROOT) -f Makefile.Sac2c \
                 TARGET="$(TARGET)" CHECK_DEPS="$(CHECK_DEPS)" HIDE="$(HIDE)" \
                 makesubdir.prod



###############################################################################
#
# Rules for generating Makefiles
#

Makefile: $(PROJECT_ROOT)/Makefile.Source
	@$(ECHO) "  Creating makefile: $@" 
	@cp -f $< $@



###############################################################################
#
# Rules for debugging 
#

MACS = icm.data icm_comment.c icm_trace.c

BETEST_ICMS := icm2c_std icm2c_prf icm2c_wl icm2c_mt icm2c_sched icm2c_error

TARGETS_DEVEL := $(addprefix ../,$(foreach target,$(src),$(addprefix $(target)/,$($(target)))))

BETEST_OBJS = $(filter-out $(patsubst %,../compile/%.o,$(BETEST_ICMS)) \                            ../global/main.o,$(TARGETS_DEVEL)) \
              $(patsubst %,../compile/%.BEtest.o,$(BETEST_ICMS)) \
              ../../lib/dbug.o ../../lib/main_args.o ../global/build.o


BEtest: BEtest.c icm_vars.c icm_betest.c icm.data $(BETEST_OBJS)
	$(CC) $(CCFLAGS) $(CFLAGS) -o BEtest $(INCS) BEtest.c $(BETEST_OBJS) $(LIBS)
	$(CLOCK_SKEW_ELIMINATION) $@

%.BEtest.o: %.c $(MACS)
	$(CC) $(CCFLAGS) $(CFLAGS) -DBEtest -o $@ -c $< $(INCS)
	$(CLOCK_SKEW_ELIMINATION) $@




###############################################################################
#
# Rules for directory cleaning
#

clean:
	@$(RM) *.o *.a *.bak *~ .*.d
	@$(RM) $(patsubst %.xsl,%,$(wildcard *.xsl))
	@$(RM) -r .sb SunWS_cache
	@$(RM) BEtest
	@$(RM) *.lex.c *.tab.c *.tab.h y.output

cleanprod:
	@$(RM) *.prod.o
