/*****************************************************************************
 * cuda targets
 *
 * NOTE: NVCC provides the `-Xcudafe "--diag_suppress=<key>"' flag in order
 *       to selectively disable certain warnings. At the moment, warnings for
 *       set but unused variables and declared but not referenced variables
 *       are deactivated (see CFLAGS). A list of valid keys to use can be
 *       found in doc/cuda_warning_codes.txt.
 *
 * NOTE: CUDA targets assume CUDA version 6.5 > is used... support for 32-bit
 *       has been dropped (as CUDA no longer develops this).
 */

target arch_:
CUDA_ARCH        := ""

target cuda_sm10 :: cuda_core :: arch_sm10:
target arch_sm10:
CUDA_ARCH        := "sm10"

target cuda_sm_61 :: cuda_core :: arch_sm_61:
target arch_sm_61:
CUDA_ARCH        := "sm_61"
CUDA_MAX_X_GRID  := 2147483647
CUDA_MAX_Y_GRID  := 65535
CUDA_MAX_Z_GRID  := 65535
CUDA_MAX_X_BLOCK := 1024
CUDA_MAX_Y_BLOCK := 1024
CUDA_MAX_Z_BLOCK := 64
CUDA_MAX_BLOCK   := 1024
CUDA_DIM_GRID    := 3
CUDA_DIM_BLOCK   := 3

target cuda :: cuda_core :: arch_@CUDA_ARCH@:

target cuda_core :: default_sbi :
SBI              :=  "cuda"
BACKEND          :=  "Cuda"

USE_PHM_API      :=  0
CCP_CEXT         :=  ".cu"
CCP_OBJEXT       :=  ".ii"
CEXT             :=  ".ii"
CC               :=  "@NVCC_PATH@/nvcc"
TUNE_native      :=  ""
TUNE_generic     :=  ""
CFLAGS           :=  "--maxrregcount 20 -Xcompiler -Wall -Xcompiler -fPIC "
                     "-Xcompiler -Wno-unused -Wno-deprecated-gpu-targets -Xcompiler -fno-builtin "
                     "-Xcudafe '--diag_suppress=set_but_not_used --diag_suppress=declared_but_not_referenced --diag_suppress=expr_has_no_effect' "
LIBS             +=  " @CCDLLINK@ -lstdc++"

CCP_MOD          :=  "%cc% %cuda_arch% %cppflags% %compileflags% -cuda -o %target% %source%"
CCP_PROG         :=  "%cc% %cuda_arch% %cppflags% %compileflags% -cuda -o %target% %source%"
COMPILE_PROG     :=  "%cc% %cuda_arch% %compileflags% -c -o %target% %source%"
COMPILE_MOD      :=  "%cc% %cuda_arch% %compileflags% -dw -o %target% %source%"
COMPILE_RMOD     :=  "@CC@ %cppflags% %opt% %dbg% -pedantic -g @GENPIC@ @RCCCFLAGS@ %sacincludes% -c -o %target% %source%"
LINK_MOD         :=  "%cc% %cuda_arch% -Xcompiler -fPIC -dlink -o dlink.o %objects% "
                     "&& %ld% %objects% dlink.o %linkflags% -shared -Wl,--allow-multiple-definition "
                     "-Wl,-allow-shlib-undefined -O3 -L%path% -Wl,-rpath,%path% -o %target%"
LINK_RMOD        :=  "%ld% %objects% %linkflags% @LD_DYNAMIC@ @LD_PATH@ -o %target%"


/*
 * These targets expose the CUDA host memory allocators
 *   Default is 'system' from `default_sbi'
 */

target cuda_alloc_registered:
SBI              +=  "-reg"
CUDA_ALLOC       :=  "cureg"

target cuda_alloc_allocated:
SBI              +=  "-alloc"
CUDA_ALLOC       :=  "cualloc"

target cuda_alloc_managed:
SBI              +=  "-man"
CUDA_ALLOC       :=  "cuman"

target cuda_alloc_managed_prefetch:
SBI              +=  "-man-pref"
CUDA_ALLOC       :=  "cumanp"

target cuda_reg :: cuda :: cuda_alloc_registered:
target cuda_alloc :: cuda :: cuda_alloc_allocated:
target cuda_man :: cuda :: cuda_alloc_managed:
target cuda_manp :: cuda :: cuda_alloc_managed_prefetch:

/*
 * These targets are only relevent for the CUDA `Hybrid' backend
 */

target cudahybrid :: cuda:
BACKEND          :=  "CudaHybrid"
MT_MODE          :=  2
