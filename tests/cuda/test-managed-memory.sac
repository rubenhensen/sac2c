// This is only for the CUDA-backend, to test the CUMM traversal, which converts all
// device types to host types + removes all h2d/d2h primitives.
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -t cuda_man -bcuda:cumm
// SAC_TEST|all: <file-name>
// SAC_TEST|<tab>@$(SAC2C) $(SAC2C_FLAGS) -nocumm $< | $(GREP_COMMAND_OUTPUT) 'int_dev' 4
// SAC_TEST|<tab>@$(SAC2C) $(SAC2C_FLAGS) -documm $< | $(GREP_COMMAND_OUTPUT) 'int_dev' 0
#include "mini-stdlib.sac"

// to prevent fusing
noinline
int[*] id (int[*] a) { return a; }

int main ()
{
  a = id (with {} : genarray ([100], 42));

  b = with { (. <= iv <= . ): a[iv] + iv[0]; } : modarray (a);

  return id (b[11]);
}
