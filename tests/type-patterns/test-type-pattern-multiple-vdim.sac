// In issue 2374 we found that the dimensionality computation was being
// incorrectly generated in cases where there are more than two variable-rank
// features in a single arguments. The dimensionality of these other features
// were being subtracted from each other, whereas they should have been added.
//
// For example, consider a type pattern:
//   int[x:_,y:_,z:_] a
// With the example below, where x and y are 1
// The value z was being incorrectly computed as:
//   z == dim(a) - (x - y) = 2 - (1 - 1) = 2 - 0 = 2
// Although it should actually be:
//   z == dim(a) - (x + y) = 2 - (1 + 1) = 2 - 2 = 0
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -noprelude -ecc -check tc
// SAC_TEST|CALL_SAC2C := $(SAC2C) $(SAC2C_FLAGS)
//
// SAC_TEST|all: <file-name-we>
// SAC_TEST|<tab>$(CHECK_RETURN_STATUS) $< 0

int
foo (int[x:_] a, int[y:_] b, int[x:_,y:_,z:_] c)
{
    return z;
}

int main()
{
    a = [ 1,2,3 ];
    b = [ 3,4,5 ];
    c = [ [1,2,3], [1,2,3] ];
    return foo (a, b, c);
}
