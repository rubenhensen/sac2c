// Type patterns are allowed for external definitions.
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -noprelude -ecc -check tc
// SAC_TEST|CALL_SAC2C := $(SAC2C) $(SAC2C_FLAGS)
//
// Create empty external file to avoid missing file error.
// SAC_TEST|external.o:
// SAC_TEST|<tab>echo "" > $@
//
// SAC_TEST|all: <file-name-we>
// SAC_TEST|<tab>$(CHECK_RETURN_STATUS) $< 0

external int ExternalStar (int[*] x);
  #pragma linkobj "external.o"

external int ExternalPlus (int[+] x);
  #pragma linkobj "external.o"

external int ExternalDot (int[.] x);
  #pragma linkobj "external.o"

external int ExternalDots (int[.,.,.] x);
  #pragma linkobj "external.o"

external int ExternalNum (int[5] x);
  #pragma linkobj "external.o"

external int ExternalNums (int[3,5,7] x);
  #pragma linkobj "external.o"

external int[n] ExternalDim (int[n] x);
  #pragma linkobj "external.o"

external int[q,q,r] ExternalDims (int[p,p,q] x);
  #pragma linkobj "external.o"

external int[d:shp] ExternalShape (int[d:shp] x);
  #pragma linkobj "external.o"

external int[d:shp,+] ExternalShapes (int[d,d:shp,+] x);
  #pragma linkobj "external.o"

int main()
{
    return 0;
}
