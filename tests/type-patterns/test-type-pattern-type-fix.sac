// F_type_conv can be optimised away if the given argument has a more specific
// type. In the case of type pattern functions we do not want this, as this will
// lead to premature errors. Instead a F_type_fix should be generated for type
// pattern functions, which fixes the argument to the given type.
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -noprelude -ecc -check c -bptc:itc -printfun foo
// SAC_TEST|CALL_SAC2C := $(SAC2C) $(SAC2C_FLAGS)
//
// SAC_TEST|all: <file-name>
// SAC_TEST|<tab>OUTPUT=`$(CALL_SAC2C) $< 2>&1`; <nlslash>
// SAC_TEST|<tab>echo "$$OUTPUT" | $(GREP_COMMAND_OUTPUT) "_type_fix_" 1; <nlslash>

noinline
int[d] foo (int[d:shp] a) | _eq_SxS_ (d, 1)
{
    return a;
}

int main()
{
    a = foo ([42]);
    return _sel_VxA_ ([0], a);
}
