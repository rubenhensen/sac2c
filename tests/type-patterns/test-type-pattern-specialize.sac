// Type patterns are currently not supported for function specialisations, and
// should give a warning to the user. Even if only some of the values contains a
// type pattern.
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -v1 -noprelude -ecc -check c -bpre
// SAC_TEST|CALL_SAC2C := $(SAC2C) $(SAC2C_FLAGS)
//
// SAC_TEST|all: <file-name>
// SAC_TEST|<tab>OUTPUT=`$(CALL_SAC2C) $< 2>&1`; <nlslash>
// SAC_TEST|<tab>echo "$$OUTPUT" | $(GREP_COMMAND_OUTPUT) "  Type patterns are currently not supported for function specialisations" 2; <nlslash>

// A warning should be given if all types contain a type pattern
specialize int[n], int[n] foo (int[n] a, int[n] b);

// A warning should be given if only some types contain a type pattern
specialize int[.,.], int[.,.] foo (int[n,.] a, int[.,.] b);

int[d:shp], int[d:shp] foo (int[d:shp] a, int[d:shp] b)
{
    return (a, b);
}

int main ()
{
    return 0;
}
