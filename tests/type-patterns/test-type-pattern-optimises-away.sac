// Sometimes the compiler is able to infer the return value, without
// investigating some of the arguments. In the following example this results
// in the compiler statically finding out that the return type of foo is int[3],
// throwing away the checks we inserted, even with the inclusion of guards.
// To fix this, we ensure that guards also hide the dimensionality and shape
// of their returned values.
//
// SAC_TEST|include common.mk
// SAC_TEST|SAC2C_FLAGS += -noprelude -ecc -check tc -bopt
// SAC_TEST|CALL_SAC2C := $(SAC2C) $(SAC2C_FLAGS)
//
// SAC_TEST|all: <file-name>
// SAC_TEST|<tab>OUTPUT=`$(CALL_SAC2C) $< 2>&1`; <nlslash>
// SAC_TEST|<tab>echo "$$OUTPUT" | $(GREP_COMMAND_OUTPUT) "Type pattern error" 1; <nlslash>

int foo (int[n,m] a, int[n,m] b)
{
    return _add_SxS_ (n, m);
}

int main()
{
    a = [[1], [2]];
    b = [[1, 1], [2, 2]];
    res = foo (a, b);
    return res;
}
