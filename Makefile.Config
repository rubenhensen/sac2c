#
#
# $Log$
# Revision 1.16  2003/03/20 14:08:22  sbs
# eliminated SAC_FOR_... mechanism...
#
# Revision 1.15  2003/02/11 17:41:41  dkr
# TAGGED_ARRAYS: CCDEPS_FLAGS modified as well
#
# Revision 1.14  2003/02/11 17:32:30  sbs
# implicit CCFLAGS CCPROD_FLAGS change depending on the existance of
# _TAGGED_ARRAYS implemented.
#
# Revision 1.13  2002/09/25 15:21:46  sbs
# OSF_ALPHA cc flags changed
#
# Revision 1.12  2002/09/25 15:20:05  sbs
# yet a bug fix concerning cc flags 8-(
#
# Revision 1.11  2002/09/25 15:08:57  sbs
# new parameterization of cc flags...
#
# Revision 1.10  2002/09/25 14:54:57  sbs
# cc->suncc; osfcc added.
#
# Revision 1.9  2002/02/22 13:06:26  sbs
# CCDEPS_FLAGS added
#
# Revision 1.8  2001/12/06 16:20:31  dkr
# OS setup move to top of file
#
# Revision 1.7  2001/11/22 08:34:44  sbs
# -Wno-long-double added on MACs
#
# Revision 1.6  2001/11/20 13:38:18  sbs
# LIB defined here now
#
# Revision 1.5  2001/11/20 12:25:30  sbs
# cse moved 8-)
#
# Revision 1.4  2001/11/19 20:57:34  sbs
# -traditional-cpp flag on MACs added.
#
# Revision 1.3  2001/11/15 15:20:00  sacbase
# CLOCK_SKEW_ELIMINATION added
#
# Revision 1.2  2001/11/14 13:19:06  sbs
# TARGET clean added for avoiding deps mechanism on clean.
#
# Revision 1.1  2001/11/14 13:02:58  sbs
# Initial revision
#
#


################################################################################
#
# OS setup:
#
# legal values for OS currently are:
#    SOLARIS_SPARC
#    LINUX_X86
#    OSF_ALPHA
#    OSX_MAC
#
# to allow easy changes: 
# do not delete os lines, but "comment" all not used lines
#

OS     := SOLARIS
ARCH   := SPARC
SBRK_T := intptr_t
#SBRK_T := ptrdiff_t (LINUX_X86)
#SBRK_T := int (OSF_ALPHA / OSX_MAC)

#
# SOLARIS_SPARC specific flags and libraries:
#
#
# The switch __EXTENSIONS__ must be set under Solaris in order to avoid warnings
# when using non-ANSI-compliant functions.
# Currently, these are popen(), pclose(), tempnam(), and strdup().
#
SOLARIS_FLAGS := -D__EXTENSIONS__ -D__STDC__=0 -DMUST_INIT_YY
SOLARIS_LIBS  := -ll

#
# LINUX_X86 specific flags and libraries:
#
LINUX_FLAGS     := -D_POSIX_SOURCE -D_SVID_SOURCE -D_BSD_SOURCE -DC370 -DHAVE_MALLOC_H
LINUX_LIBS      := -lfl

#
# OSF_ALPHA specific flags and libraries:
#
OSF_FLAGS    := -D_OSF_SOURCE -DMUST_KILL_AR_MAGIC_FILE
OSF_LIBS     := -ll

#
# OSX_MAC specific flags and libraries:
#
OSX_FLAGS    := -traditional-cpp -Wno-long-double -DDISABLE_PHM -DC370
OSX_LIBS     := -ll


################################################################################
#
# C compiler setup:
#
# legal values for CC and CCPROD currently are:
#    gcc
#    cc
#

ifeq ($(OS),OSF)
  CC           := cc
  CCPROD       := cc
else
  CC           := gcc
  CCPROD       := gcc
endif

#
# gcc specific flags:
#
gcc_FLAGS      := -ansi -Wall -g
gcc_PROD_FLAGS := -ansi -Wall -g -O3
gcc_DEPS_FLAGS := -M

#
# cc specific flags for SOLARIS_SPARC :
#
SOLARIS_cc_FLAGS      := -erroff=E_CAST_DOESNT_YIELD_LVALUE -g
SOLARIS_cc_PROD_FLAGS := -erroff=E_CAST_DOESNT_YIELD_LVALUE -g -xO4
SOLARIS_cc_DEPS_FLAGS := -xM

#
# cc specific flags for OSF_ALPHA:
#
OSF_cc_FLAGS      := -g
OSF_cc_PROD_FLAGS := -g3
OSF_cc_DEPS_FLAGS := -M


################################################################################
#
# general setup:
#

ifeq ($(CC),cc)
  CCFLAGS      := $($(OS)_$(CC)_FLAGS) $($(OS)_FLAGS)
  CCDEPS_FLAGS := $($(OS)_$(CC)_DEPS_FLAGS) $(CCFLAGS)
else
  CCFLAGS      := $($(CC)_FLAGS) $($(OS)_FLAGS)
  CCDEPS_FLAGS := $($(CC)_DEPS_FLAGS) $(CCFLAGS)
endif

ifeq ($(CCPROD),cc)
  CCPROD_FLAGS := $($(OS)_$(CCPROD)_PROD_FLAGS) $($(OS)_FLAGS)
else
  CCPROD_FLAGS := $($(CCPROD)_PROD_FLAGS) $($(OS)_FLAGS)
endif


GENCFLAGS    := -DSBRK_T="$(SBRK_T)" -DOS='\"$(OS)\"' -DARCH='\"$(ARCH)\"' \
                -DSTRTOK_EXISTS -DSTRRCHR_EXISTS
CFLAGS       := -DSHOW_MALLOC $(GENCFLAGS)
CPROD_FLAGS  := -DDBUG_OFF -DPRODUCTION $(GENCFLAGS)


ifeq ($(shell test -f $(PROJECT_ROOT)/_TAGGED_ARRAYS && echo yes),yes)
  CCFLAGS := $(CCFLAGS) -DTAGGED_ARRAYS
  CCDEPS_FLAGS := $(CCDEPS_FLAGS) -DTAGGED_ARRAYS
  CCPROD_FLAGS := $(CCPROD_FLAGS) -DTAGGED_ARRAYS
endif

MAKE_NORM    := $(MAKE) CC="$(CC)" CCFLAGS="$(CCFLAGS)" CFLAGS="$(CFLAGS)" OS="$(OS)"
MAKE_PROD    := $(MAKE) CC="$(CCPROD)" CCFLAGS="$(CCPROD_FLAGS)" CFLAGS="$(CPROD_FLAGS)" OS="$(OS)"
MAKE_CLEAN   := $(MAKE) TARGET="clean" clean
MAKEFLAGS    += --no-print-directory

TAR          :=tar
LIBS         :=-lm $($(OS)_LIBS)
EFLIBS       :=-L/home/sacbase/efence -lefence
RM           :=rm -f
GZIP         :=gzip -f
ECHO         :=echo

ifeq ($(OS),OSF)
  LEX     := flex -n
  YACC    := yacc -dv
else
  LEX     := flex -n
  YACC    := bison -y -dv
endif

ifeq ($(OS),SOLARIS)
  YYFLAGS   := -DYYDEBUG
else
  YYFLAGS   :=
endif

ifneq ($(OS),OSX_MAC)
  LIBM = -lm
endif 

CLOCK_SKEW_ELIMINATION   := $(PROJECT_ROOT)/tools/bin/cse




