#
#
# $Log$
# Revision 1.5  2003/03/21 11:46:05  sah
# added MT & PHM Makefile flags
#
# Revision 1.4  2003/03/21 10:24:37  sbs
# YYDEBUG now set to 1 explicitly!
#
# Revision 1.3  2003/03/20 23:21:39  sah
# now architecture and os
# are seperated again ;)
#
# Revision 1.2  2003/03/20 23:12:14  sah
# OS now includes architecture
#
# Revision 1.1  2003/03/20 22:20:49  sah
# Initial revision
#
#


################################################################################
#
# OS setup:
#
# legal values for OS currently are:
#    SOLARIS_SPARC
#    LINUX_X86
#    OSF_ALPHA
#    OSX_MAC
#
# to allow easy changes: 
# do not delete os lines, but "comment" all not used lines
#

OS=@OS@
ARCH=@ARCH@

#
# SOLARIS_SPARC specific flags and libraries:
#
#
# The switch __EXTENSIONS__ must be set under Solaris in order to avoid warnings
# when using non-ANSI-compliant functions.
# Currently, these are popen(), pclose(), tempnam(), and strdup().
#
SOLARIS_FLAGS := -D__EXTENSIONS__ -D__STDC__=0 -DMUST_INIT_YY

#
# LINUX_X86 specific flags and libraries:
#
LINUX_FLAGS     := -D_POSIX_SOURCE -D_SVID_SOURCE -D_BSD_SOURCE

#
# OSF_ALPHA specific flags and libraries:
#
OSF_FLAGS    := -D_OSF_SOURCE

#
# OSX_MAC specific flags and libraries:
#
OSX_FLAGS    := -traditional-cpp -Wno-long-double 

#
# MT & PHM Makefile flags
#

DISABLE_MT   := @DISABLE_MT@
DISABLE_PHM  := @DISABLE_PHM@

################################################################################
#
# C compiler setup:
#
# legal values for CC and CCPROD currently are:
#    gcc
#    cc
#

CC           := @CC@
CCPROD       := @CC@

#
# gcc specific flags:
#
gcc_FLAGS      := -ansi -Wall -g
gcc_PROD_FLAGS := -ansi -Wall -g -O3
gcc_DEPS_FLAGS := -M

#
# cc specific flags for SOLARIS_SPARC :
#
SOLARIS_cc_FLAGS      := -erroff=E_CAST_DOESNT_YIELD_LVALUE -g
SOLARIS_cc_PROD_FLAGS := -erroff=E_CAST_DOESNT_YIELD_LVALUE -g -xO4
SOLARIS_cc_DEPS_FLAGS := -xM

#
# cc specific flags for OSF_ALPHA:
#
OSF_cc_FLAGS      := -g
OSF_cc_PROD_FLAGS := -g3
OSF_cc_DEPS_FLAGS := -M


################################################################################
#
# general setup:
#

ifeq ($(CC),cc)
  CCFLAGS      := $($(OS)_$(CC)_FLAGS) $($(OS)_FLAGS)
  CCDEPS_FLAGS := $($(OS)_$(CC)_DEPS_FLAGS) $(CCFLAGS)
else
  CCFLAGS      := $($(CC)_FLAGS) $($(OS)_FLAGS)
  CCDEPS_FLAGS := $($(CC)_DEPS_FLAGS) $(CCFLAGS)
endif

ifeq ($(CCPROD),cc)
  CCPROD_FLAGS := $($(OS)_$(CCPROD)_PROD_FLAGS) $($(OS)_FLAGS)
else
  CCPROD_FLAGS := $($(CCPROD)_PROD_FLAGS) $($(OS)_FLAGS)
endif

CFLAGS       := -DSHOW_MALLOC
CPROD_FLAGS  := -DDBUG_OFF -DPRODUCTION


ifeq ($(shell test -f $(PROJECT_ROOT)/_TAGGED_ARRAYS && echo yes),yes)
  CCFLAGS := $(CCFLAGS) -DTAGGED_ARRAYS
  CCDEPS_FLAGS := $(CCDEPS_FLAGS) -DTAGGED_ARRAYS
  CCPROD_FLAGS := $(CCPROD_FLAGS) -DTAGGED_ARRAYS
endif

MAKE_NORM    := $(MAKE) CC="$(CC)" CCFLAGS="$(CCFLAGS)" CFLAGS="$(CFLAGS)"
MAKE_PROD    := $(MAKE) CC="$(CCPROD)" CCFLAGS="$(CCPROD_FLAGS)" CFLAGS="$(CPROD_FLAGS)"
MAKE_CLEAN   := $(MAKE) TARGET="clean" clean
MAKEFLAGS    += --no-print-directory

TAR          :=tar
LIBS         :=@LIBS@@LEXLIB@
EFLIBS       :=-L/home/sacbase/efence -lefence
RM           :=rm -f
GZIP         :=gzip -f
ECHO         :=echo
LEX          :=@LEX@ -n
YACC         :=@YACC@ -dv

ifeq ($(OS),SOLARIS)
  YYFLAGS   := -DYYDEBUG=1
else
  YYFLAGS   :=
endif

CLOCK_SKEW_ELIMINATION   := $(PROJECT_ROOT)/tools/bin/cse




